(function() {
  this.TwygoAccessControlBiView = {
    initialize: function() {
      $("#ajax-loader").hide();
      return TwygoAccessControlBiView.filterBiViewIp();
    },
    createBiViewIp: function() {
      var description, ip_available;
      ip_available = $("#create_bi_view_ip");
      description = $("#create_bi_view_description");
      return $.ajax({
        url: "/o/" + TwygoApplication.currentOrganizationId + "/access_control_bi_view/new",
        dataType: "json",
        type: "post",
        data: {
          ips_available: ip_available.val(),
          description: description.val()
        },
        error: function(response) {
          return TwygoAccessControlBiView.createMessageError(response.responseJSON["text"]);
        },
        success: function(response) {
          var filter_value, new_bi_ip_row;
          TwygoAccessControlBiView.createMessageSuccess(response.text);
          if (response.status === 201) {
            new_bi_ip_row = $("<tr id= 'bi_view_ip_row_" + response.id + "'> <td> <span class='checkbox-content'> <span class='input'> <input id='bi_view_ip_check' type= 'checkbox' value='" + response.id + "'> <span class='checkmark'></span> </span> </span> </td> <td id = 'ip_field_id_" + response.id + "'> <div class='ip-td'> " + (ip_available.val()) + " </div> </td> <td id = 'description_field_id_" + response.id + "'> <div class='description-td'> " + (description.val()) + " </div> </td> <td id = 'edit_field_id_" + response.id + "'> <div class='ip-edit-button-div'> <button href='javascript:void(0)' class= 'bi_view_action_button' id='edit_bi_view_ip_" + response.id + "' name='commit' onclick='TwygoAccessControlBiView.editBiViewIp(this)' title= " + (I18n.t("restriction_bi_view.edit_bi_view")) + " type='submit' value='" + response.id + "'> <i class='icon-pencil'></i> <small> " + (I18n.t("restriction_bi_view.edit_bi_view")) + " </small> </div> </td> </tr>");
            if ($('#filter_bi_view_ip').val().length > 0) {
              filter_value = $('#filter_bi_view_ip').val();
              TwygoAccessControlBiView.HandlefilterBiViewIp(filter_value);
            } else {
              $(new_bi_ip_row).appendTo('#bi_view_table tbody').hide().fadeIn(650);
            }
          }
          ip_available.val("");
          return description.val("");
        }
      });
    },
    editBiViewIp: function(bi_view_ip) {
      return TwygoAccessControlBiView.handleEditMode(true, bi_view_ip);
    },
    handleEditMode: function(editmode, element) {
      var bi_view_ip_id, description, ips_available;
      bi_view_ip_id = $(element).attr("value");
      ips_available = $("#ip_field_id_" + bi_view_ip_id + " div");
      description = $("#description_field_id_" + bi_view_ip_id + " div");
      ips_available.attr('contentEditable', editmode);
      description.attr('contentEditable', editmode);
      description.attr('maxlength', 150);
      $("#description_field_id_" + bi_view_ip_id + " div").on('keydown', function(e) {
        if (description.text().length >= 150 && e.keyCode !== 8 && e.keyCode !== 9 && e.keyCode !== 16 && e.keyCode !== 17 && e.keyCode !== 35 && e.keyCode !== 36 && e.keyCode !== 46 && e.keyCode !== 37 && e.keyCode !== 38 && e.keyCode !== 39 && e.keyCode !== 40) {
          return e.preventDefault();
        }
      });
      $("#ip_field_id_" + bi_view_ip_id + " div").on('keydown', function(e) {
        if (ips_available.text().length >= 15 && e.keyCode !== 8 && e.keyCode !== 9 && e.keyCode !== 16 && e.keyCode !== 17 && e.keyCode !== 35 && e.keyCode !== 36 && e.keyCode !== 46 && e.keyCode !== 37 && e.keyCode !== 38 && e.keyCode !== 39 && e.keyCode !== 40) {
          return e.preventDefault();
        }
      });
      $("#edit_field_id_" + bi_view_ip_id).empty();
      $("#edit_field_id_" + bi_view_ip_id).css("display", "");
      return TwygoAccessControlBiView.handleEditButton(editmode, bi_view_ip_id, ips_available[0].innerText, description[0].innerText);
    },
    handleEditButton: function(editmode, bi_view_ip_id, ips_available, description) {
      if (editmode) {
        $("#ip_field_id_" + bi_view_ip_id + " div").focus();
        $("#edit_field_id_" + bi_view_ip_id).css("display", "flex");
        $("#edit_field_id_" + bi_view_ip_id).append($("<div class='ip-button-div'> <button href='javascript:void(0)' id='save_bi_view_ip_" + bi_view_ip_id + "' class= 'bi_view_action_button' name='commit' onclick='TwygoAccessControlBiView.updateBiViewIp(this)' title= " + (I18n.t("restriction_bi_view.update_bi_view")) + " type='submit' value='" + bi_view_ip_id + "'> <i class='icon-check'></i> <small> " + (I18n.t("restriction_bi_view.update_bi_view")) + " </small> </div>"));
        return $("#edit_field_id_" + bi_view_ip_id).append($("<div class='ip-button-div'> <button href='javascript:void(0)' id='cancel_bi_view_ip_" + bi_view_ip_id + "' class= 'bi_view_action_button' name='commit' onclick='TwygoAccessControlBiView.cancelBiViewIp(this, `" + ips_available + "`, `" + description + "`)' title= " + (I18n.t("restriction_bi_view.cancel_update_bi_view")) + " type='submit' value='" + bi_view_ip_id + "'> <i class='icon-times'></i> <small> " + (I18n.t("restriction_bi_view.cancel_update_bi_view")) + " </small> </div>"));
      } else {
        return $("#edit_field_id_" + bi_view_ip_id).append($("<div class='ip-edit-button-div'> <button href='javascript:void(0)' id='edit_bi_view_ip_" + bi_view_ip_id + "' class= 'bi_view_action_button' name='commit' onclick='TwygoAccessControlBiView.editBiViewIp(this)' title= " + (I18n.t("restriction_bi_view.edit_bi_view")) + " type='submit' value='" + bi_view_ip_id + "'> <i class='icon-pencil'></i> <small> " + (I18n.t("restriction_bi_view.edit_bi_view")) + " </small> </div>"));
      }
    },
    updateBiViewIp: function(bi_view_ip) {
      var bi_view_ip_id, description, ips_available;
      bi_view_ip_id = $(bi_view_ip).attr("value");
      ips_available = $("#ip_field_id_" + bi_view_ip_id)[0].innerText;
      description = $("#description_field_id_" + bi_view_ip_id)[0].innerText;
      return $.ajax({
        url: "/o/" + TwygoApplication.currentOrganizationId + "/access_control_bi_view/" + bi_view_ip_id + "/update",
        dataType: "json",
        type: "put",
        data: {
          ips_available: ips_available,
          description: description
        },
        error: function(response) {
          return TwygoAccessControlBiView.createMessageError(response.responseJSON["text"]);
        },
        success: function(response) {
          TwygoAccessControlBiView.handleEditMode(false, bi_view_ip);
          return TwygoAccessControlBiView.createMessageSuccess(response.text);
        }
      });
    },
    cancelBiViewIp: function(bi_view_ip, ips_available_value, description_value) {
      var bi_view_ip_id, description, ips_available;
      bi_view_ip_id = $(bi_view_ip).attr("value");
      ips_available = $("#ip_field_id_" + bi_view_ip_id + " div");
      description = $("#description_field_id_" + bi_view_ip_id + " div");
      ips_available[0].innerText = ips_available_value;
      description[0].innerText = description_value;
      return TwygoAccessControlBiView.handleEditMode(false, bi_view_ip);
    },
    deleteBiViewIps: function() {
      var ModalRemove, bi_view_ids, bi_view_names, ids, message;
      if ($('input[id="bi_view_ip_check"]:checked').length > 0) {
        bi_view_ids = [];
        bi_view_names = [];
        ids = $.map($("input[id='bi_view_ip_check']:checked"), function(e) {
          bi_view_ids.push(e.value);
          return bi_view_names.push("<li>" + ($("#ip_field_id_" + e.value).children()[0].innerText) + "</li>");
        });
        message = bi_view_ids.length > 1 ? "" + (I18n.t("restriction_bi_view.remove_ips_message")) : "" + (I18n.t("restriction_bi_view.remove_unique_ip_message"));
        ModalRemove = TwygoModalRemoveItem.initialize({
          id: 'bi_view_ip_remove_modal',
          message_title: message,
          message: bi_view_names,
          configuration: {
            dataType: "json",
            type: 'POST',
            reload: false,
            url: "/o/" + TwygoApplication.currentOrganizationId + "/access_control_bi_view/mass_delete_ips",
            data: {
              ids: bi_view_ids
            }
          },
          callbacks: {
            success: function(response) {
              TwygoAccessControlBiView.createMessageSuccess(response.text);
              TwygoAccessControlBiView.clearSelectAllChecked();
              return bi_view_ids.forEach(function(id) {
                return $("#bi_view_ip_row_" + id).remove();
              });
            }
          }
        });
        return ModalRemove.open();
      }
    },
    clearSelectAllChecked: function() {
      return $('#check_all').prop("checked", false);
    },
    filterBiViewIp: function() {
      var delay, timeout;
      timeout = void 0;
      delay = 500;
      return $('#filter_bi_view_ip').on('keyup', function() {
        $("#ajax-loader").css("position", "relative");
        $("#ajax-loader").fadeIn("fast");
        if (timeout) {
          clearTimeout(timeout);
        }
        return timeout = setTimeout(function() {
          var filter_value;
          filter_value = $('#filter_bi_view_ip').val();
          return TwygoAccessControlBiView.HandlefilterBiViewIp(filter_value);
        }, delay);
      });
    },
    HandlefilterBiViewIp: function(filter_value) {
      setTimeout(TwygoAccessControlBiView.removeLoader(), 500);
      if (filter_value.length >= 1) {
        return $.ajax({
          url: "/o/" + TwygoApplication.currentOrganizationId + "/access_control_bi_view/filter_bi_view_ips",
          dataType: "json",
          type: "post",
          data: {
            filter: filter_value
          },
          success: function(response) {
            $("#bi_view_table tbody").empty();
            $("#bi_view_ip_not_found").remove();
            if (response.length > 0) {
              return response.forEach(function(object) {
                return TwygoAccessControlBiView.appendFilterResults(object);
              });
            } else {
              return TwygoAccessControlBiView.appendNotFound();
            }
          }
        });
      } else if (filter_value.length === 0) {
        return TwygoAccessControlBiView.resetFilterResults();
      }
    },
    resetFilterResults: function() {
      return $.ajax({
        url: "/o/" + TwygoApplication.currentOrganizationId + "/access_control_bi_views",
        dataType: "json",
        type: "get",
        success: function(response) {
          $("#bi_view_table tbody").empty();
          $("#bi_view_ip_not_found").remove();
          return response.forEach(function(object) {
            return TwygoAccessControlBiView.appendFilterResults(object);
          });
        }
      });
    },
    appendFilterResults: function(object) {
      return $('#bi_view_table tbody').append($("<tr id= 'bi_view_ip_row_" + object.id + "'> <td> <span class='checkbox-content'> <span class='input'> <input id='bi_view_ip_check' type= 'checkbox' value='" + object.id + "'> <span class='checkmark'></span> </span> </span> </td> <td id = 'ip_field_id_" + object.id + "'> <div class='ip-td'> " + object.ips_available + " </div> </td> <td id = 'description_field_id_" + object.id + "'> <div class='description-td'> " + object.description + " </div> </td> <td id = 'edit_field_id_" + object.id + "' style='min-width: 150px'> <div class='ip-edit-button-div'> <button href='javascript:void(0)' class= 'bi_view_action_button' id='edit_bi_view_ip_" + object.id + "' name='commit' onclick='TwygoAccessControlBiView.editBiViewIp(this)' title= " + (I18n.t("restriction_bi_view.edit_bi_view")) + " type='submit' value='" + object.id + "'> <i class='icon-pencil'></i> <small> " + (I18n.t("restriction_bi_view.edit_bi_view")) + " </small> </div> </td> </tr>"));
    },
    appendNotFound: function() {
      return $('#bi_view_table').parent().append($("<div id= 'bi_view_ip_not_found'> <i class='fas fa-search'></i> <h5> " + (I18n.t("restriction_bi_view.not_found")) + " </h3> </div"));
    },
    createMessageError: function(message) {
      return TwygoFlashMessage.setMessage('error', message);
    },
    createMessageSuccess: function(message) {
      return TwygoFlashMessage.setMessage('success', message);
    },
    removeLoader: function() {
      $("#ajax-loader").fadeOut("fast");
      return $("#ajax-loader").hide();
    }
  };

}).call(this);
(function() {
  this.TwygoAccessControlIp = {
    createAccessControlIp: function() {
      var comment, ips_available, professional_id;
      ips_available = $("#create_ips_available");
      comment = $("#create_comment");
      professional_id = $(".restrict_ip_user").attr("id");
      return $.ajax({
        url: "/o/" + TwygoApplication.currentOrganizationId + "/access_control_ip/new",
        dataType: "json",
        type: "post",
        data: {
          ips_available: ips_available.val(),
          comment: comment.val(),
          professional_id: professional_id
        },
        beforeSend: function() {
          TwygoOrganization.lockButtonSave();
          return $('#restriction_ip .access_ips_container').addClass('ajax-loading');
        },
        error: function(response) {
          return TwygoAccessControlIp.createMessageError(response.responseJSON["text"]);
        },
        success: function(response) {
          TwygoAccessControlIp.createMessageSuccess(response.text);
          if (response.status === 201) {
            return $('#restriction_ip .access_ips_container').append($("<div class='access_ip item' id='" + response.access_control_ip_id + "'> <div class='item-text separates_with_object_top'> <input autocomplete='off' class='ellipsis number_of_ip_style form-control' id='number_of_ip_" + response.access_control_ip_id + "' name='number_of_ip_" + response.access_control_ip_id + "' type='text' value='" + (ips_available.val()) + "'> <input autocomplete='off' class='ellipsis comment_about_ip_style form-control' id='comment_about_ip_" + response.access_control_ip_id + "' name='comment_about_ip_" + response.access_control_ip_id + "' placeholder='Sem comentário, adicione um agora' type='text' value='" + (comment.val()) + "'> </div> <div class='item-action separates_with_object_top'> <div class='form_for create_object_in_box'> <button class='edit_access_ip edit_ips_available_style' href='javascript:void(0)' id='edit_ips_available_" + response.access_control_ip_id + "' name='commit' onclick='TwygoAccessControlIp.updateAccessControlIp(this)' title='Concluir edição' type='submit' value='" + response.access_control_ip_id + "'> <i class='icon-pencil'></i> </button> </div> <div class='form_for create_object_in_box'> <button class='delete_ips_available_style remove_access_ip' href='javascript:void(0)' id='delete_ips_available_" + response.access_control_ip_id + "' name='commit' onclick='TwygoAccessControlIp.deleteAccessControlIp(this)' title='Excluir registro' type='submit' value='" + response.access_control_ip_id + "'> <i class='icon-times'></i> </button> </div> </div> </div>"));
          }
        },
        complete: function() {
          ips_available.val("");
          comment.val("");
          TwygoOrganization.unlockButtonSave();
          return $('#restriction_ip .access_ips_container').removeClass('ajax-loading');
        }
      });
    },
    createProfessionalAccessControlIp: function() {
      var comment, ips_available, professional_id;
      ips_available = $("#create_ips_available");
      comment = $("#create_comment");
      professional_id = $(".restrict_ip_user").attr("id");
      return $.ajax({
        url: "/o/" + TwygoApplication.currentOrganizationId + "/access_control_ips_in_professional/new",
        dataType: "json",
        type: "post",
        data: {
          ips_available: ips_available.val(),
          comment: comment.val(),
          professional_id: professional_id
        },
        beforeSend: function() {
          TwygoOrganization.lockButtonSave();
          return $('#restriction_ip .access_ips_container').addClass('ajax-loading');
        },
        error: function(response) {
          return TwygoAccessControlIp.createMessageError(response.responseJSON["text"]);
        },
        success: function(response) {
          TwygoAccessControlIp.createMessageSuccess(response.text);
          if (response["status"] === 201) {
            return $('#restriction_ip .access_ips_container').append($("<div class='access_ip item' id='" + response.access_control_ip_id + "'> <div class='item-text separates_with_object_top'> <input autocomplete='off' class='ellipsis number_of_ip_style form-control' id='number_of_ip_" + response.access_control_ip_id + "' name='number_of_ip_" + response.access_control_ip_id + "' type='text' value='" + (ips_available.val()) + "'> <input autocomplete='off' class='ellipsis comment_about_ip_style form-control' id='comment_about_ip_" + response.access_control_ip_id + "' name='comment_about_ip_" + response.access_control_ip_id + "' placeholder='Sem comentário, adicione um agora' type='text' value='" + (comment.val()) + "'> </div> <div class='item-action separates_with_object_top'> <div class='form_for create_object_in_box'> <button class='edit_access_ip edit_ips_available_style' href='javascript:void(0)' id='edit_ips_available_" + response.access_control_ip_id + "' name='commit' onclick='TwygoAccessControlIp.updateAccessControlIp(this)' title='Concluir edição' type='submit' value='" + response.access_control_ip_id + "'> <i class='icon-pencil'></i> </button> </div> <div class='form_for create_object_in_box'> <button class='delete_ips_available_style remove_access_ip' href='javascript:void(0)' id='delete_ips_available_" + response.access_control_ip_id + "' name='commit' onclick='TwygoAccessControlIp.deleteAccessControlIp(this)' title='Excluir registro' type='submit' value='" + response.access_control_ip_id + "'> <i class='icon-times'></i> </button> </div> </div> </div>"));
          }
        },
        complete: function() {
          ips_available.val("");
          comment.val("");
          TwygoOrganization.unlockButtonSave();
          return $('#restriction_ip .access_ips_container').removeClass('ajax-loading');
        }
      });
    },
    updateAccessControlIp: function(access_control_ip) {
      var access_control_ip_id, comment, ips_available;
      access_control_ip_id = $(access_control_ip).attr("value");
      ips_available = $("#" + access_control_ip_id + " #number_of_ip_" + access_control_ip_id).val();
      comment = $("#" + access_control_ip_id + " #comment_about_ip_" + access_control_ip_id).val();
      return $.ajax({
        url: "/o/" + TwygoApplication.currentOrganizationId + "/access_control_ip/" + access_control_ip_id + "/update",
        dataType: "json",
        type: "put",
        data: {
          access_control_ip_id: access_control_ip_id,
          ips_available: ips_available,
          comment: comment
        },
        beforeSend: function() {
          return $('#restriction_ip .access_ips_container').addClass('ajax-loading');
        },
        error: function(response) {
          return TwygoAccessControlIp.createMessageError(response.responseJSON["text"]);
        },
        success: function(response) {
          return TwygoAccessControlIp.createMessageSuccess(response.text);
        },
        complete: function() {
          return $('#restriction_ip .access_ips_container').removeClass('ajax-loading');
        }
      });
    },
    updateProfessionalAccessControlIp: function(access_control_ip) {
      var access_control_ip_id, comment, ips_available, professional_id;
      access_control_ip_id = $(access_control_ip).attr("value");
      ips_available = $("#" + access_control_ip_id + " #number_of_ip_" + access_control_ip_id).val();
      comment = $("#" + access_control_ip_id + " #comment_about_ip_" + access_control_ip_id).val();
      professional_id = $(".restrict_ip_user").attr("id");
      return $.ajax({
        url: "/o/" + TwygoApplication.currentOrganizationId + "/access_control_ips_in_professional/" + access_control_ip_id + "/update",
        dataType: "json",
        type: "put",
        data: {
          access_control_ip_id: access_control_ip_id,
          ips_available: ips_available,
          comment: comment,
          professional_id: professional_id
        },
        beforeSend: function() {
          TwygoOrganization.lockButtonSave();
          return $('#restriction_ip .access_ips_container').addClass('ajax-loading');
        },
        error: function(response) {
          return TwygoAccessControlIp.createMessageError(response.responseJSON["text"]);
        },
        success: function(response) {
          return TwygoAccessControlIp.createMessageSuccess(response.text);
        },
        complete: function() {
          TwygoOrganization.unlockButtonSave();
          return $('#restriction_ip .access_ips_container').removeClass('ajax-loading');
        }
      });
    },
    deleteAccessControlIp: function(access_control_ip) {
      var access_control_ip_id, answer, ips_available;
      access_control_ip_id = $(access_control_ip).attr("value");
      ips_available = $("#" + access_control_ip_id + " #number_of_ip_" + access_control_ip_id).val();
      answer = confirm(I18n.t("restriction_ip.confirm_delete_ip", {
        deleted_ip: ips_available
      }));
      if (answer) {
        return $.ajax({
          url: "/o/" + TwygoApplication.currentOrganizationId + "/access_control_ip/" + access_control_ip_id + "/delete",
          dataType: "json",
          type: "delete",
          data: {
            access_control_ip_id: access_control_ip_id
          },
          beforeSend: function() {
            return $('#restriction_ip .access_ips_container').addClass('ajax-loading');
          },
          error: function(response) {
            return TwygoAccessControlIp.createMessageError(response.responseJSON["text"]);
          },
          success: function(response) {
            TwygoAccessControlIp.createMessageSuccess(response.text);
            if (response.status === 200) {
              return $("#" + access_control_ip_id + ".access_ip.item").remove();
            }
          },
          complete: function() {
            return $('#restriction_ip .access_ips_container').removeClass('ajax-loading');
          }
        });
      }
    },
    deleteProfessionalAccessControlIp: function(access_control_ip) {
      var access_control_ip_id, answer, ips_available, professional_id;
      access_control_ip_id = $(access_control_ip).attr("value");
      ips_available = $("#" + access_control_ip_id + " #number_of_ip_" + access_control_ip_id).val();
      answer = confirm(I18n.t("restriction_ip.confirm_delete_ip", {
        deleted_ip: ips_available
      }));
      professional_id = $(".restrict_ip_user").attr("id");
      if (answer) {
        return $.ajax({
          url: "/o/" + TwygoApplication.currentOrganizationId + "/access_control_ips_in_professional/" + access_control_ip_id + "/delete",
          dataType: "json",
          type: "delete",
          data: {
            access_control_ip_id: access_control_ip_id,
            professional_id: professional_id
          },
          beforeSend: function() {
            TwygoOrganization.lockButtonSave();
            return $('#restriction_ip .access_ips_container').addClass('ajax-loading');
          },
          error: function(response) {
            return TwygoAccessControlIp.createMessageError(response.responseJSON["text"]);
          },
          success: function(response) {
            TwygoAccessControlIp.createMessageSuccess(response.text);
            if (response["status"] === 200) {
              return $("#" + access_control_ip_id + ".access_ip.item").remove();
            }
          },
          complete: function() {
            TwygoOrganization.unlockButtonSave();
            return $('#restriction_ip .access_ips_container').removeClass('ajax-loading');
          }
        });
      }
    },
    createMessageError: function(message) {
      return TwygoFlashMessage.setMessage('error', message);
    },
    createMessageSuccess: function(message) {
      return TwygoFlashMessage.setMessage('success', message);
    },
    change_admin_restrict_ip: function(params_value_admin_restrict_ip) {
      params_value_admin_restrict_ip = $('#check_admin_restrict_ip').is(":checked");
      return $.ajax({
        url: "/o/" + TwygoApplication.currentOrganizationId + "/access_control_ip/change_admin_restrict_ip",
        dataType: "json",
        type: "post",
        data: {
          params_value_admin_restrict_ip: params_value_admin_restrict_ip
        },
        error: function(response) {
          TwygoAccessControlIp.createMessageError(response.responseText);
          $('#check_admin_restrict_ip').prop('checked', !params_value_admin_restrict_ip);
          return $('#check_admin_restrict_ip').val(!params_value_admin_restrict_ip);
        },
        success: function(response) {
          return TwygoAccessControlIp.createMessageSuccess(response.text);
        }
      });
    },
    toggle_ip_visibility: function() {
      var ip_status;
      ip_status = $('#toggle_ip_visibility').is(":checked");
      return $.ajax({
        url: "/o/" + TwygoApplication.currentOrganizationId + "/organization_settings/ip_visibility",
        dataType: "json",
        type: "post",
        data: {
          ip_status: ip_status
        },
        success: function(response) {
          return TwygoAccessControlIp.createMessageSuccess(response["message"]);
        },
        error: function(response) {
          return TwygoAccessControlIp.createMessageError(response.responseJSON["message"]);
        }
      });
    }
  };

}).call(this);
(function() {
  this.TwygoAdministrators = {
    requestExport: function($this) {
      var fromDate, situation, title, toDate;
      fromDate = $("#eventsFromDate").val();
      toDate = $("#eventsToDate").val();
      title = $("#eventsTitle").val();
      situation = $("#eventsSituations").val();
      return $.ajax({
        url: "/o/" + TwygoApplication.currentOrganizationId + "/export_all",
        data: {
          from_date: fromDate,
          to_date: toDate,
          kind: TwygoEventManagement.kind,
          title: title,
          situation: situation
        },
        success: function() {
          return TwygoFlashMessage.setMessage('notice', I18n.t('wait_report_generate'));
        },
        error: function() {
          return TwygoFlashMessage.setMessage('error', I18n.t('error_export_file'));
        }
      });
    }
  };

}).call(this);
(function() {
  this.TwygoApplication = {
    currentResultsPage: 1,
    timeout: 0,
    clear_timeout: null,
    clear_timeout_sleep: null,
    clear_interval: null,
    logout: false,
    initialize: function(options) {
      var hl;
      this.setupSearch();
      this.focusFirst();
      this.markCheckboxes();
      this.bindLinks();
      this.bindProfileTabs();
      this.closeAlert();
      this.subMenuToggle();
      if ($("#highlights").length > 0) {
        hl = $("#highlights");
        if (hl.position().left > 400) {
          hl.css("left", hl.position().left - 240);
        }
      }
      $("input[type='submit']").not("#save_new").on("click", function() {
        return $("#redirect_to_create_new_object").val(false);
      });
      $(".user_div").on("click", function() {
        return $("#user-options").slideDown("fast", function() {
          return $("#user-options").addClass("hideOnClickOut");
        });
      });
      return $(".user-details .user-name .btn-users a").not(".friends").not(".pending").on("click", function() {
        if ($(this).attr("status") === "1") {
          return TwygoMyNetwork.update_relation(this, event);
        } else {
          return TwygoMyNetwork.add_friend(this, event);
        }
      });
    },
    defaultSearchText: "Encontre eventos",
    setupSearch: function() {
      $("#global-search").focus(function() {
        if ($(this).val() === TwygoApplication.defaultSearchText) {
          return $(this).val("");
        }
      }).blur(function() {
        if ($.trim($(this).val()) === "") {
          return $(this).val(TwygoApplication.defaultSearchText);
        }
      }).keyup(function(e) {
        if (e.keyCode === 13) {
          return TwygoApplication.search();
        }
      });
      return $("#top #search button").click(function() {
        if ($.trim(TwygoApplication.searchInput().val()) !== TwygoApplication.defaultSearchText) {
          return TwygoApplication.search();
        }
      });
    },
    bindProfileTabs: function() {
      return $(".user-tabs a").click(function() {
        var tabid;
        $(".user-tabs a").removeClass("tab-active");
        tabid = $(this).addClass("tab-active").attr("tab_id");
        $(".user-tabs-content .tab").removeClass("content-active").hide();
        return $(".user-tabs-content #tab" + tabid).addClass("content-active").fadeIn("fast");
      });
    },
    searchInput: function() {
      return $("#global-search");
    },
    focusFirst: function() {
      return $(".field_with_errors > :input").first().focus();
    },
    closeAlert: function() {
      return $('body').find('.alert').on('click', '.close', function() {
        return $(this).closest('.alert').slideUp();
      });
    },
    loader: function(what) {
      if (what !== void 0 && what === "hide") {
        $(".bgloader").fadeOut();
        $('body').addClass('loaded');
        return true;
      }
      if (what !== void 0 && what === "show") {
        $('body').removeClass('loaded');
        $(".bgloader").fadeIn();
        return true;
      }
      if (!$('body').hasClass('loaded')) {
        $('body').addClass('loaded');
        return $(".bgloader").fadeOut();
      }
    },
    search: function() {
      var input;
      input = this.searchInput();
      if ($.trim(input.val()) !== "") {
        return location.href = "/search?q=" + encodeURIComponent(input.val());
      }
    },
    openUpdateAttributesModal: function() {
      var $pendingFieldsModal, doItLater;
      doItLater = localStorage.getItem("do_it_later") === "true";
      if (doItLater) {
        return;
      }
      $pendingFieldsModal = $('#pending_fields_modal');
      return TwygoUtility.toggleModal($pendingFieldsModal);
    },
    markCheckboxes: function() {
      return $(":checkbox.checked").attr("checked", true);
    },
    loadModal: function() {
      return $(".twygo-indicate-modal").modal({
        minWidth: 640,
        minHeight: 420,
        opacity: 50,
        position: [50],
        overlayClose: true,
        onShow: function() {
          return TwygoApplication.requestIndicateForm();
        }
      });
    },
    placeholder: function(e) {
      return $(e).focus(function() {
        var input;
        input = $(this);
        if (input.val() === input.attr('placeholder')) {
          input.val('');
          return input.removeClass('placeholder');
        }
      }).blur(function() {
        var input;
        input = $(this);
        if (input.val() === '' || input.val() === input.attr('placeholder')) {
          input.addClass('placeholder');
          return input.val(input.attr('placeholder'));
        }
      }).blur();
    },
    requestIndicateForm: function() {
      return $(".twygo-indicate-modal").load("/indicate", function() {
        return TwygoIndicate.initialize();
      });
    },
    clearAndClose: function() {
      window.location.hash = '';
      return $.modal.close();
    },
    clearErrors: function(form) {
      return this.showErrors([], [], void 0, form);
    },
    showErrors: function(fields, messages, object, form, title) {
      var field, fieldEl, header, i, j, len, len1, list, msg, msgs;
      form = $(form);
      if (form.length === 0) {
        form = $("form:has(#error_explanation):visible");
      }
      msgs = form.find("#error_explanation");
      if (msgs.length === 0) {
        form.prepend(msgs = $("<div id='error_explanation'>"));
      }
      msgs.empty();
      list = $("<ul>");
      for (i = 0, len = messages.length; i < len; i++) {
        msg = messages[i];
        list.append($("<li>").text(msg));
      }
      form.find(".field_with_errors input, .field_with_errors select").unwrap();
      for (j = 0, len1 = fields.length; j < len1; j++) {
        field = fields[j];
        if (object === void 0) {
          fieldEl = form.find(":input[name$='[" + field + "]']");
        } else {
          fieldEl = form.find("#" + object + "_" + field);
        }
        if (fieldEl.length === 0) {
          fieldEl = form.find("." + field);
        }
        fieldEl.wrap("<div class='field_with_errors'>");
      }
      if (title === "" || title === void 0) {
        title = I18n.lookup("activerecord.models." + object) || object;
      }
      if (messages.length > 0 && title) {
        header = $("<h2>").text(I18n.t("activerecord.errors.template.header", {
          count: messages.length,
          model: title
        }));
        msgs.append(header);
      }
      msgs.append(list);
      form.find(".field_with_errors :input:first:visible").focus();
      if (list.find("li").length > 0) {
        msgs.show();
      } else {
        msgs.hide();
      }
      return form.find("#error_explanation").on('click', function() {
        return $(this).fadeOut();
      });
    },
    changeBreadcrumOnEvents: function(page_name) {
      return $('#breadcrumb').text(" > " + page_name);
    },
    changeBreadcrumNavigation: function(action, page_name) {
      var navigation_text;
      if (action) {
        navigation_text = " > " + action;
      }
      if (page_name) {
        navigation_text += " > " + page_name;
      }
      return $('#breadcrumb').text(navigation_text);
    },
    bindLinks: function() {
      var area, link;
      $(".indicateTwygo").on("click", function() {
        return TwygoApplication.loadModal();
      });
      link = $("#contactUs");
      area = $(".contactUs");
      link.on("click", function() {
        return area.fadeToggle("fast");
      });
      $('#link-to-login .login').on("click", function(event) {
        return $(".loginFloat").twygomodal({
          onClose: TwygoApplication.clearAndClose
        });
      });
      $("#login-user").bind("ajax:complete", function(data, status, xhr) {
        var response;
        if (status.status === 200 || status.status === 201) {
          if (TwygoApplication.redirect_to) {
            if (location.replace) {
              location.replace(TwygoApplication.redirect_to);
            } else {
              location.href = TwygoApplication.redirect_to;
            }
          }
          return location.reload();
        } else {
          response = eval("(" + status.responseText + ")");
          TwygoFlashMessage.setMessage("error", response.error);
          return false;
        }
      });
      return $(".loginFloat #forgot-password").click(function() {
        var element;
        $.modal.close();
        setTimeout(function() {
          return $(".forgot-password").modal({
            opacity: 50,
            position: [50],
            overlayClose: true
          });
        }, 10);
        element = "remember_pass";
        $("#" + element).bind("ajax:complete", function(data, status, xhr) {
          var response;
          if (status.status === 200 || status.status === 201) {
            $.modal.close();
            return TwygoFlashMessage.setMessage("success", TwygoLogin.msg_callback[element]);
          } else {
            response = eval("(" + status.responseText + ")");
            $(".error-message").html("Email " + response.email).show();
            $("#user_email_resent, #user_email_password").addClass("red_border");
            return false;
          }
        }).bind("ajax:loading", function() {
          return $("#user_email_resent");
        });
        $("#user_email_password").val($("#user_email").val()).focus();
        $("#user_email_resent, #user_email_password").removeClass("red_border");
        return $(".error-message").html("").hide();
      });
    },
    subMenuToggle: function() {
      return $('#menu ul li > a').on("click", function() {
        var $li, $submenu;
        $li = $(this).closest('li');
        if ($li.hasClass('has-submenu')) {
          $submenu = $li.find('.submenu');
          if ($submenu.is(":visible")) {
            $submenu.slideUp(200);
            $submenu.parent().removeClass("menu-opened");
          } else {
            $submenu.slideDown(200);
          }
        }
      });
    },
    timeoutAlert: function() {
      var _time;
      if (TwygoApplication.timeout > 0) {
        $('#reset_logout').removeAttr('disabled');
        TwygoApplication.logout = true;
        _time = TwygoApplication.timeout * 60 * 1000;
        clearInterval(TwygoApplication.clear_timeout_sleep);
        return TwygoApplication.clear_timeout_sleep = setInterval(function() {
          return TwygoApplication.logoutAlert();
        }, _time);
      }
    },
    logoutAlert: function() {
      var $time, _time;
      document.exitFullscreen();
      $('#logout-modal').fadeIn();
      TwygoApplication.logout = true;
      $time = $('#logout-modal').find('.time');
      _time = 10;
      $time.text(_time);
      TwygoApplication.clear_interval = setInterval(function() {
        _time = _time - 1;
        $time.text(_time);
        if (_time === 0) {
          clearInterval(TwygoApplication.clear_interval);
        }
      }, 1000);
      return TwygoApplication.clear_timeout = setTimeout(function() {
        return TwygoApplication.logoutAction();
      }, 10000);
    },
    setLogout: function() {
      clearTimeout(TwygoApplication.clear_timeout);
      clearInterval(TwygoApplication.clear_interval);
      TwygoApplication.logout = false;
      $('#reset_logout').attr('disabled', true);
      $('#logout-modal').fadeOut();
      TwygoApplication.timeoutAlert();
    },
    logoutAction: function() {
      if (TwygoApplication.logout) {
        return window.location = '/logout';
      } else {
        return TwygoApplication.timeoutAlert();
      }
    },
    isIE: function() {
      return $.browser.msie;
    },
    course_release_date: function(date_start, date_end) {
      if (date_start !== null) {
        return date_start;
      } else {
        return date_end;
      }
    },
    course_closing_date: function(date_start, date_end) {
      if (date_end !== null) {
        return date_end;
      } else {
        return date_start;
      }
    },
    date_format: function(date) {
      var day, day_format, hours, hours_format, minute, minute_format, mouth, mouth_format, year_format;
      date = new Date(date);
      day = date.getUTCDate().toString();
      day_format = day.length === 1 ? '0' + day : day;
      mouth = (date.getUTCMonth() + 1).toString();
      mouth_format = mouth.length === 1 ? '0' + mouth : mouth;
      year_format = date.getUTCFullYear();
      hours = date.getUTCHours().toString();
      hours_format = hours.length === 1 ? '0' + hours : hours;
      minute = date.getUTCMinutes().toString();
      minute_format = minute.length === 1 ? '0' + minute : minute;
      return day_format + '/' + mouth_format + '/' + year_format + " as " + hours_format + ":" + minute_format;
    },
    add_margin_top: function(device) {
      var small_device, top_hidden;
      small_device = device === "mobile";
      top_hidden = $('#top').is(":hidden");
      if (top_hidden && small_device) {
        return $('#main').css("margin-top", "0");
      }
    }
  };

}).call(this);
(function() {
  this.TwygoAsaasPayment = {
    eventId: 0,
    eventValue: 0,
    couponName: '',
    couponValue: 0,
    couponId: null,
    installmentValue: 0,
    appliedCoupon: false,
    discountType: '',
    originalInstallmentValues: [],
    initialize: function() {
      var installmentsSelect, ref;
      TwygoAsaasPayment.installmentValue = parseFloat(((ref = TwygoAsaasPayment.originalInstallmentValues[0]) != null ? ref.value : void 0) || TwygoAsaasPayment.eventValue) || 0;
      installmentsSelect = document.getElementById('installments-times');
      if (installmentsSelect) {
        $('#total').text("R$ " + (TwygoAsaasPayment.formatMoney(parseFloat(installmentsSelect.options[installmentsSelect.selectedIndex].value))));
      }
      if (TwygoAsaasPayment.appliedCoupon) {
        TwygoAsaasPayment.disableCoupon();
        return TwygoAsaasPayment.updateTotalValue(TwygoAsaasPayment.eventValue);
      }
    },
    onInstallmentSelect: function() {
      var installmentValue, selectedOption;
      selectedOption = TwygoAsaasPayment.originalInstallmentValues[installmentsSelect.selectedIndex];
      installmentValue = parseFloat(selectedOption.value);
      TwygoAsaasPayment.installmentValue = parseFloat(installmentValue);
      installmentValue = TwygoAsaasPayment.calculateDiscount(installmentValue);
      TwygoAsaasPayment.updateInstallmentsOptions();
      return TwygoAsaasPayment.updateTotalValue(installmentValue);
    },
    updateInstallmentsOptions: function() {
      var installmentsSelect;
      installmentsSelect = document.getElementById('installments-times');
      if (!installmentsSelect) {
        return;
      }
      return $('#installments-times option').each(function(index) {
        var discount, discountedInstallment, formattedInstallment, optionValue;
        discount = 0;
        if (TwygoAsaasPayment.appliedCoupon) {
          discount = TwygoAsaasPayment.discountType === "coupon" ? (TwygoAsaasPayment.couponValue * TwygoAsaasPayment.originalInstallmentValues[index].value) / 100 : TwygoAsaasPayment.couponValue;
        }
        optionValue = parseFloat(TwygoAsaasPayment.originalInstallmentValues[index].value) - discount;
        discountedInstallment = optionValue / (index + 1);
        if (discountedInstallment < 5) {
          $(this).hide();
          return $("#installments-times option:selected").prop("selected", false);
        } else {
          $(this).show();
          formattedInstallment = TwygoAsaasPayment.formatMoney(discountedInstallment);
          $('#total').text("R$ " + (TwygoAsaasPayment.formatMoney(formattedInstallment)));
          return $(this).text((index + 1) + "x R$ " + formattedInstallment + (TwygoAsaasPayment.originalInstallmentValues[index].info.length > 0 ? " - " + TwygoAsaasPayment.originalInstallmentValues[index].info : ""));
        }
      });
    },
    handleCoupon: function(event_id) {
      var coupon;
      if (TwygoAsaasPayment.appliedCoupon === true) {
        TwygoAsaasPayment.enableCoupon();
        TwygoAsaasPayment.updateTotalValue(TwygoAsaasPayment.installmentValue);
      }
      coupon = $('#payment-coupon').val();
      if (!coupon.trim()) {
        return;
      }
      return $.ajax({
        url: "/e/" + event_id + "/coupons/" + coupon,
        type: 'GET',
        success: function(data) {
          var discount, installmentDiscount;
          TwygoAsaasPayment.discountType = data.discount_type;
          TwygoAsaasPayment.couponValue = parseFloat(data.value);
          TwygoAsaasPayment.couponName = data.name;
          TwygoAsaasPayment.couponId = data.id;
          discount = TwygoAsaasPayment.discountType === "coupon" ? (TwygoAsaasPayment.couponValue * TwygoAsaasPayment.installmentValue) / 100 : TwygoAsaasPayment.couponValue;
          installmentDiscount = TwygoAsaasPayment.installmentValue - discount;
          TwygoAsaasPayment.discountedValue = installmentDiscount;
          TwygoAsaasPayment.disableCoupon();
          return TwygoAsaasPayment.updateTotalValue(installmentDiscount);
        },
        error: function(response) {
          return TwygoFlashMessage.setMessage(response.responseJSON.statusText, response.responseJSON.message);
        }
      });
    },
    calculateDiscount: function(installmentValue) {
      var couponDiscount, installmentsSelect, optionValue, selectedOption;
      installmentsSelect = document.getElementById('installments-times');
      selectedOption = installmentsSelect.options[installmentsSelect.selectedIndex];
      optionValue = parseFloat(selectedOption.value);
      if (TwygoAsaasPayment.couponValue !== 0) {
        couponDiscount = TwygoAsaasPayment.discountType === 'coupon' ? parseFloat(TwygoAsaasPayment.couponValue) / 100 * TwygoAsaasPayment.installmentValue : parseFloat(TwygoAsaasPayment.couponValue);
        return installmentValue - couponDiscount;
      } else {
        return optionValue;
      }
    },
    updateTotalValue: function(value) {
      var coupom_template, discountTypeDisplay;
      if (value < 5.0) {
        value = 5.0;
        $('#coupon-error').show();
      }
      if (TwygoAsaasPayment.appliedCoupon) {
        discountTypeDisplay = TwygoAsaasPayment.discountType === 'coupon' ? TwygoAsaasPayment.couponValue + "%" : "R$ " + TwygoAsaasPayment.formatMoney(TwygoAsaasPayment.couponValue);
        coupom_template = "<b> " + I18n.t('new_payment.banner.coupon_voucher_apply') + " </b>" + discountTypeDisplay + " ";
        $("#payment-coupon-preview").html(coupom_template);
      }
      return $('#total').text("R$ " + (TwygoAsaasPayment.formatMoney(value)));
    },
    formatMoney: function(value) {
      return parseFloat(value).toFixed(2).toString().replace(".", ",");
    },
    enableCoupon: function() {
      TwygoAsaasPayment.appliedCoupon = false;
      $("#coupon-button").text(I18n.t('coupons.add_coupon'));
      $("#payment-coupon").prop('disabled', false);
      $("#coupon-error").hide();
      $("#payment-coupon").val('');
      $("#payment-coupon-preview").html('');
      TwygoAsaasPayment.couponValue = 0;
      TwygoAsaasPayment.couponId = null;
      return TwygoAsaasPayment.updateInstallmentsOptions();
    },
    disableCoupon: function() {
      TwygoAsaasPayment.appliedCoupon = true;
      $("#coupon-button").text(I18n.t('coupons.remove_coupon'));
      $("#payment-coupon").prop('disabled', true);
      return TwygoAsaasPayment.updateInstallmentsOptions();
    },
    asaasCreatePayment: function(redirect) {
      if (redirect == null) {
        redirect = false;
      }
      return $.ajax({
        url: "/api/v1/o/" + TwygoApplication.currentOrganizationId + "/invoices",
        type: 'POST',
        data: {
          event_id: TwygoAsaasPayment.eventId,
          installment_id: $('#installments-times option:selected').attr('id'),
          installments: $('#installments-times option:selected').val(),
          client_cpf_cnpj: $('#payment-cpf').val(),
          coupon_id: TwygoAsaasPayment.couponId
        },
        beforeSend: function() {
          return $('#payment-installment-info').addClass('ajax-loading');
        },
        success: function(response) {
          var payment_link;
          $("#payment-link-message").css("display", "block").show();
          payment_link = $("#payment-link");
          payment_link.attr('href', response.checkoutUrl);
          payment_link.text(response.checkoutUrl);
          payment_link.show();
          if (redirect) {
            window.open(response.checkoutUrl, '_blank');
          }
          return TwygoFlashMessage.setMessage(response.statusText, response.message);
        },
        error: function(response) {
          return TwygoFlashMessage.setMessage(response.responseJSON.statusText, response.responseJSON.message);
        },
        complete: function() {
          return setTimeout(function() {
            return $('#payment-installment-info').removeClass('ajax-loading');
          }, 1000);
        }
      });
    }
  };

}).call(this);
(function() {
  this.TwygoAvailableOrganization = {
    logo: null,
    background_image: null,
    color_default: null,
    color_default_twygo: null,
    initialize: function() {},
    updateAvailableOrganizationLayout: function(logo, background_image, color_default, active_organization_name, negative_logo) {
      if (color_default !== "undefined") {
        $("#top").css('background-color', color_default);
        $("#btn-profile").css('background-color', color_default);
      } else {
        $("#top").css('background-color', '#944cdc');
        $("#btn-profile").css('background-color', '#944cdc');
      }
      $(".new-app.bg-default").css('background-image', 'url(' + background_image + ')');
      $("#logo > a").remove();
      $("#logo").removeClass('negative');
      if (negative_logo) {
        $("#logo").addClass('negative');
      }
      if (logo === "undefined") {
        $('#logo > img').remove();
        $('#logo > span').remove();
        $('#logo').append("<span class='brand-hidden'>" + active_organization_name + "<span>");
        $('#mobile-logo-topbar > a > img').remove();
        return $('#mobile-logo-topbar > a').append("<span class='brand-hidden'>" + active_organization_name + "<span>");
      } else {
        $('#logo > img').remove();
        $('#logo  > span').remove();
        $('#logo').append("<img alt='" + active_organization_name + "' src='" + logo + "'>");
        $('#mobile-logo-topbar > a > img').remove();
        return $('#mobile-logo-topbar > a').append("<img class='small-logo' alt='" + active_organization_name + "' src='" + logo + "'>");
      }
    }
  };

}).call(this);
(function() {
  this.TwygoCaption = {
    deleteCaption: function(id) {
      var answer;
      answer = confirm(I18n.t("caption.confirm_delete_caption"));
      if (answer) {
        return $.ajax({
          url: "/delete_caption/" + id,
          dataType: "json",
          data: {
            organization_id: TwygoApplication.currentOrganizationId
          },
          type: "delete",
          success: function(response) {
            TwygoCaption.deleteCaptionScreen(response.caption_id);
            return TwygoFlashMessage.setMessage("success", response.message);
          },
          error: function(response) {
            return TwygoFlashMessage.setMessage("error", response.responseJSON.message);
          }
        });
      }
    },
    addCaptionScreen: function(_e, response) {
      var caption, captions, i, len, results;
      captions = response.captions;
      if (!!captions) {
        $("#no_caption_items").remove();
      }
      results = [];
      for (i = 0, len = captions.length; i < len; i++) {
        caption = captions[i];
        results.push($("#caption_item_partial").append("<div class='archiveCaptions' id='caption_" + caption.id + "'> <div class='form-row' style='margin: 5px 0px'> <div class='row' style='margin: 0'> <div class='col-md-11'> <div class='name_archive'> <label style='width: auto; margin-right: 5px' for='name_caption' >" + (I18n.t("caption.caption_name")) + " </label> " + caption.name_archive + " </div> <div class='label_title'> <label style='width: auto; margin-right: 5px' for='label_title' >" + (I18n.t("caption.caption_title")) + " </label> " + caption.label + " </div> </div> <div class='col-md-1' style='display: flex'> <button class='delete_captions' id='delete_" + caption.id + "' name='commit' onclick='TwygoCaption.deleteCaption(" + caption.id + ")' style='float: right; background: white' title='" + (I18n.t("caption.delete_caption")) + "' type='button' value='" + caption.id + "' > <i class='icon-times'></i> </button> </div> </div> </div> </div>"));
      }
      return results;
    },
    deleteCaptionScreen: function(id) {
      return $("#caption_" + id).remove();
    }
  };

}).call(this);
(function() {
  this.TwygoCertificate = {
    initialize: function(arg) {
      var DOM_certificate;
      DOM_certificate = arg.DOM_certificate;
      return this._$certificate = $(DOM_certificate);
    },
    loadModalCertificate: function(id, participant_id, open_modal) {
      if (participant_id == null) {
        participant_id = null;
      }
      if (open_modal == null) {
        open_modal = true;
      }
      return $.ajax({
        url: "/certificate_historic/" + id + "/" + TwygoApplication.currentUserId,
        type: 'GET',
        data: {
          participant_id: participant_id
        },
        dataType: 'json',
        success: function(json, textStatus, jqXHR) {
          var historics;
          historics = [];
          json.forEach(function(historic, index) {
            var created_at, expires_at, historic_new, link;
            historic_new = {};
            link = participant_id ? "/e/" + historic.event_id + "/students/" + participant_id + "/certificate" : "/e/" + historic.event_id + "/certificate";
            historic_new["version"] = historic.version;
            historic_new["situation"] = historic.situation === 2 ? I18n.t('certificate_validity.valid') : I18n.t('certificate_validity.expired');
            historic_new["progress_student"] = Number(historic.progress_student) + "%";
            historic_new["evaluation_student"] = Number(historic.evaluation_student) + "%";
            if (historic.created_at) {
              created_at = new Date(historic.created_at);
              historic_new["created_at"] = created_at.toLocaleDateString();
            } else {
              historic_new["created_at"] = " - ";
            }
            if (historic.expires_at) {
              expires_at = new Date(historic.expires_at);
              historic_new["expires_at"] = expires_at.toLocaleDateString();
            } else {
              historic_new["expires_at"] = " - ";
            }
            historic_new["label"] = historic.situation === 2 ? I18n.t('access') : ' - ';
            historic_new["link"] = historic.situation === 2 ? link : '#';
            return historics.push(historic_new);
          });
          return TwygoCertificate.loop_historic(historics);
        },
        complete: function(response) {
          var modal_history, without_history;
          if (open_modal) {
            if (response.responseJSON.length > 0) {
              return $('#modal-historic').twygomodal();
            } else {
              return $('.without-historic').twygomodal();
            }
          } else {
            modal_history = $('#modal-historic')[0];
            without_history = $('.without-historic')[0];
            if (response.responseJSON.length > 0) {
              modal_history.style.display = 'block';
              return without_history.style.display = 'none';
            } else {
              modal_history.style.display = 'none';
              return without_history.style.display = 'block';
            }
          }
        }
      });
    },
    loop_historic: function(_list) {
      var out;
      if (_list == null) {
        _list = [];
      }
      out = '';
      $('#modal-historic #table-historic').empty();
      if (_list.length > 0) {
        return _list.forEach(function(el, index) {
          var template;
          template = TwygoCertificate._$certificate.html();
          return $('#modal-historic #table-historic').append(Mustache.render(template, el));
        });
      }
    },
    background: function() {
      return $('#certificate_template_background').on("change", function() {
        var accepts, ext, file_extension, file_name, name, reader;
        accepts = ['image/jpeg', 'image/png', 'image/jpg'];
        ext = ['jpeg', 'png', 'jpg'];
        file_name = this.files[0].name;
        file_extension = file_name.substring(file_name.lastIndexOf('.') + 1);
        if (this.files[0].size > 1000000) {
          TwygoFlashMessage.setMessage("error", I18n.t('certificate_background_size'));
          return false;
        }
        if (this.files && this.files[0] && accepts.indexOf(this.files[0].type) > -1 && ext.indexOf(file_extension) > -1) {
          name = this.files[0].name;
          reader = new FileReader();
          reader.onload = function(e) {
            var img;
            img = new Image;
            $('#page-1').css('background-image', 'url(' + e.target.result + ')');
            $('#certificate_template_background').closest('.form-file__button').find('.file_map__name').text(name);
          };
          reader.readAsDataURL(this.files[0]);
        } else {
          return TwygoFlashMessage.setMessage("error", I18n.t('certificate_background_error'));
        }
      });
    },
    setText: function() {
      var iframe;
      iframe = $('#cke_certificate_template_content_static').find('iframe');
      return $("#pdf-preview").find('#content_static_placeholder').addClass('text-custom').html(iframe[0].contentDocument.body.innerHTML);
    },
    UpdateFontSize: function() {
      var fontSize, textContent;
      fontSize = $('#certificate_params_event_size').val();
      textContent = $('.text-inner .custom');
      return textContent.css('font-size', function() {
        return fontSize + "!important";
      });
    },
    cancelButton: function(_url) {
      return window.location.assign(_url);
    },
    range: function(selector, element) {
      var id, rel, value;
      value = $(selector).val();
      id = $(selector).attr('id');
      rel = $(selector).attr('rel');
      $("output[for='" + id + "']").val(value);
      switch (rel) {
        case 'range-y':
          return $(element).css('top', value + '%');
        case 'range-x':
          return $(element).css('left', value + '%');
        case 'range-width':
          return $(element).css('width', value + '%');
        case 'align':
          return $(element).css('text-align', value);
        case 'font-size':
          return $(element).css('font-size', (value * 1.3) + 'pt');
      }
    },
    listenerToggle: function() {
      $('#certificate_template_content').on('input', function() {
        return $("#pdf-preview").find('#content_placeholder .text-inner .text').html($(this).val());
      });
      return $('.checkbox-toggle').each(function(e, i) {
        var _placeholder, _rel, _show;
        _show = $(this).is(':checked');
        _rel = $(this).attr('data-rel');
        _placeholder = $(this).attr('data-placeholder');
        TwygoCertificate.toggleShow(_rel, _placeholder, _show);
        return $(this).on('change', function() {
          _show = $(this).is(':checked');
          _rel = $(this).attr('data-rel');
          _placeholder = $(this).attr('data-placeholder');
          return TwygoCertificate.toggleShow(_rel, _placeholder, _show);
        });
      });
    },
    toggleShow: function(rel, placeholder, show) {
      if (show) {
        $(placeholder).show();
        return $(rel).slideDown('fast');
      } else {
        $(rel).slideUp('fast');
        return $(placeholder).hide();
      }
    },
    changeOrientation: function() {
      var _orientation;
      _orientation = $('input[name="certificate_template[orientation]"]:checked').val();
      $('#pdf-preview').find('page').attr('layout', _orientation);
      $('#pdf-preview').find('.inner-preview').attr('layout', _orientation);
      return $('input[name="certificate_template[orientation]"]').on('change', function() {
        _orientation = $(this).val();
        $('#pdf-preview').find('page').attr('layout', _orientation);
        return $('#pdf-preview').find('.inner-preview').attr('layout', _orientation);
      });
    },
    showSuccess: function(response) {
      return TwygoFlashMessage.setMessage(response.type, response.msg);
    },
    showErros: function(response) {
      return TwygoFlashMessage.setMessage(response.type, response.msg);
    }
  };

}).call(this);
(function() {
  this.TwygoChat = {
    container_render_chat: "#chat-container-render",
    container_feedback_chat: "#feedback-chat",
    initialize: function(content) {
      if (content === null) {
        return;
      }
      TwygoChat.toogleChatWithGroup();
      if (content.enable_public_chat) {
        TwygoChat.appendChatContainer();
        TwygoChat.toogleGroupWithChat();
        return TwygoChat.getRoomIdChat(content.id);
      }
    },
    toogleGroupWithChat: function() {
      $('#learn-controls').find('.tabs > .chat').fadeIn();
      return $('#learn-controls').find('.tabs > .groups').fadeOut();
    },
    toogleChatWithGroup: function() {
      $('#learn-controls').find('.tabs > .chat').fadeOut();
      return $('#learn-controls').find('.tabs > .groups').fadeIn();
    },
    appendChatContainer: function() {
      $('.content-chat').remove();
      return $('#learn-controls.sidebar').append("<div class='content-chat display-none'><div id='chat-container-render' style='height: 100%;'></div></div>");
    },
    getRoomIdChat: function(content_id) {
      TwygoChat.addLoading();
      return $.ajax({
        url: "learn/chat",
        type: "GET",
        data: {
          content_id: content_id,
          preview: TwygoLearn.preview
        },
        dataType: 'json',
        success: function(response) {
          if (response.room_id === null) {
            TwygoChat.toogleChatWithGroup();
            return;
          }
          return TwygoChat.loadAndRenderPublicChat(response.url, response.room_id, response.preview);
        }
      });
    },
    addLoading: function() {
      return $(TwygoChat.container_render_chat).addClass('loading-chat');
    },
    removeLoading: function() {
      return $(TwygoChat.container_render_chat).removeClass('loading-chat');
    },
    loadAndRenderPublicChat: function(url, room_id, is_preview) {
      var feedback_preview, height;
      feedback_preview = TwygoChat.isPreview(is_preview);
      height = '100';
      if (is_preview) {
        height = '96';
      }
      $(TwygoChat.container_render_chat).html(feedback_preview + " <iframe id='chat-view' src='" + url + "/public_chat/" + room_id + "' scrolling=\"no\" style='width: 100%; height: " + height + "%;'/>");
      TwygoChat.handleChatSizetoScreen();
      return $('#chat-view').on('load', function() {
        TwygoChat.callbackLoadChat(is_preview);
        return TwygoChat.removeLoading();
      });
    },
    callbackLoadChat: function(is_preview) {
      var finish, interval, run;
      finish = false;
      run = function() {
        var IFRAME, documentIFRAME, inputEmojiHTML, inputHTML, input_emoji_chat, input_message_chat;
        IFRAME = document.getElementById('chat-view');
        documentIFRAME = IFRAME.contentWindow.document;
        input_message_chat = 'input.chakra-input';
        input_emoji_chat = '[aria-label="Emojis"]';
        inputHTML = documentIFRAME.querySelector(input_message_chat);
        inputEmojiHTML = documentIFRAME.querySelector(input_emoji_chat);
        if (inputHTML !== null) {
          if (is_preview) {
            inputEmojiHTML.style.display = "none";
            setTimeout(function() {
              return inputHTML.setAttribute("disabled", "disabled");
            }, 500);
          }
          if ((window.innerWidth < 450) || (window.innerHeight < 450 && window.innerWidth < 930)) {
            inputEmojiHTML.style.display = "none";
          }
          finish = true;
        }
        if (finish) {
          return clearInterval(interval);
        }
      };
      return interval = setInterval(run, 1000);
    },
    isPreview: function(is_preview) {
      var preview_message;
      preview_message = I18n.t('view.event_contents.chat_alert_preview');
      if (is_preview) {
        return "<div id=\"feedback-chat\"><span>" + (TwygoChat.icon()) + "</span><span>" + preview_message + "</span></div>";
      }
      return "";
    },
    icon: function() {
      return "<svg style='display: inline; margin-bottom: -2px; margin-right: 3px' width=\"15px\" fill=\"orange\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path d=\"M506.3 417l-213.3-364c-16.33-28-57.54-28-73.98 0l-213.2 364C-10.59 444.9 9.849 480 42.74 480h426.6C502.1 480 522.6 445 506.3 417zM232 168c0-13.25 10.75-24 24-24S280 154.8 280 168v128c0 13.25-10.75 24-23.1 24S232 309.3 232 296V168zM256 416c-17.36 0-31.44-14.08-31.44-31.44c0-17.36 14.07-31.44 31.44-31.44s31.44 14.08 31.44 31.44C287.4 401.9 273.4 416 256 416z\"/></svg>";
    },
    handleChatSizetoScreen: function() {
      if (window.innerWidth < 450) {
        $('.content-chat').detach().appendTo("#media-box");
        TwygoChat.handleMobilePortrait();
        TwygoChat.resizeLandscape();
      }
      if (window.innerHeight < 450 && window.innerWidth < 930) {
        $('.content-chat').detach().appendTo("#media-box");
        TwygoChat.handleMobileLandscape();
        TwygoChat.appendToggleChatButton();
        return TwygoChat.resizePortrait();
      }
    },
    resizeLandscape: function() {
      var lastwidth;
      lastwidth = window.innerWidth;
      $(window).off("resize");
      return $(window).resize(function() {
        if (window.innerHeight < 450 && window.innerWidth < 930 && window.innerWidth !== lastwidth) {
          TwygoChat.handleMobileLandscape();
          TwygoChat.appendToggleChatButton();
          return TwygoChat.resizePortrait();
        }
      });
    },
    resizePortrait: function() {
      var lastheight, lastwidth;
      lastwidth = window.innerWidth;
      lastheight = window.innerHeight;
      $(window).off("resize");
      return $(window).resize(function() {
        if (window.innerWidth < 450 && window.innerWidth !== lastwidth) {
          TwygoChat.handleMobilePortrait();
          TwygoChat.resizeLandscape();
        }
        if (window.innerHeight === lastheight) {
          if ($('#feedback-chat').length > 0) {
            $('.content-chat').find('#chat-view').css("cssText", "height: calc(100% - 18.5px");
          } else {
            $('.content-chat').find('#chat-view').css("cssText", "height: 100%");
          }
        }
        if (window.innerHeight < 200) {
          $('#footer-actions, #title_bar').css("cssText", "display: none");
          $('#learn-content').css("cssText", "display: block; padding: 0");
        }
        if (window.innerHeight > 200) {
          $('#footer-actions, #title_bar').css("cssText", "");
          return $('#learn-content').css("cssText", "display: block");
        }
      });
    },
    handleMobilePortrait: function() {
      $('#mediaplayer').css("cssText", "height: 40% !important; width: 100%");
      $('#media-box').css("cssText", "overflow-y: scroll; padding: 0px !important");
      $('#media-box').find('.content-chat').css("cssText", "height: 60%; width: 100%");
      $('#media-box').find('.content-chat').removeClass('display-none');
      $('#learn-controls').find('a.chat').css("cssText", "display: none");
      $('#learn-controls').find('a.atividades, a.briefing').css("cssText", "width: 50% !important");
      $('.content-chat').find('#feedback-chat').css("cssText", "height: 18.5px");
      $("#toggle-chat-button").remove();
      if ($('#feedback-chat').length > 0) {
        return $('.content-chat').find('#chat-view').css("cssText", "height: calc(100% - 18.5px");
      } else {
        return $('.content-chat').find('#chat-view').css("cssText", "height: 100%");
      }
    },
    handleMobileLandscape: function() {
      $('#mediaplayer').css("cssText", "height: 100%; width: 60% !important");
      $('#media-box').find('.content-chat').removeClass('display-none');
      $('#media-box').find('.content-chat').css("cssText", "width: 40% !important; position: relative");
      $('#media-box').css("cssText", "display: flex; padding: 0px !important");
      $('#learn-controls').find('a.chat').css("cssText", "display: none");
      $('#learn-controls').find('a.atividades, a.briefing').css("cssText", "width: 50% !important");
      $('.content-chat').find('#feedback-chat').css("cssText", "height: 18.5px");
      $("#toggle-chat-button").remove();
      if ($('#feedback-chat').length > 0) {
        return $('.content-chat').find('#chat-view').css("cssText", "height: calc(100% - 18.5px");
      } else {
        return $('.content-chat').find('#chat-view').css("cssText", "height: 100%");
      }
    },
    appendToggleChatButton: function() {
      $("<button id='toggle-chat-button'type='button' style='position: absolute;z-index: 99999;top: 40%;left: -17px;background-color: transparent;font-size: 35px'> <i class='fas fa-angle-right' style='color: darkgray '></i> </button>").appendTo('.content-chat');
      return $("#toggle-chat-button").on("click", function() {
        $('#chat-container-render').toggle();
        if ($('#chat-container-render').css("display") === 'none') {
          $('#mediaplayer').css("cssText", "height: 100%; width: 100% !important");
          $('.content-chat').css("cssText", "width: 0% !important; position: relative");
          return $(this).find('i').removeClass('fa-angle-right').addClass('fa-angle-left');
        } else {
          $('#media-box').find('.content-chat').css("cssText", "width: 40% !important; position: relative");
          $('#mediaplayer').css("cssText", "height: 100%; width: 60% !important");
          return $(this).find('i').removeClass('fa-angle-left').addClass('fa-angle-right');
        }
      });
    }
  };

}).call(this);
(function() {
  this.TwygoCommon = {
    msg_callback: {
      resent_mail: I18n.t("instructions_email_sent"),
      remember_pass: I18n.t("instructions_recover_password_email_sent")
    },
    initialize: function() {
      TwygoCommon.searchToggle();
      $("#forgot-password").click(function() {
        $(".forgot-password").modal({
          opacity: 50,
          position: [50],
          overlayClose: true
        });
        $("#user_email_password").val($("#user_email").val()).focus();
        return TwygoCommon.bindModalEvents("remember_pass");
      });
      $("#re-sent").click(function() {
        $(".resent-mail-confirmation").modal({
          opacity: 50,
          position: [50],
          overlayClose: true
        });
        $("#user_email_resent").val($("#user_email").val()).focus();
        $("#user_email_resent, #user_email_password").removeClass("red_border").attr("disabled", "false");
        $(".error-message").html("");
        return TwygoCommon.bindModalEvents("resent_mail");
      });
      $("#user_email").focus();
      $("#master-login #text div button").click(function() {
        return $("#master-login #text").fadeOut("fast", function() {
          return $("#master-login #cadastro").fadeIn("fast", function() {
            return $("#name").focus();
          });
        });
      });
      return $("#cancel-signup-link").click(function() {
        return $("#master-login #cadastro").fadeOut("fast", function() {
          return $("#master-login #text").fadeIn("fast", function() {
            return $("#user_new input").each(function() {
              return $(this).val("");
            });
          });
        });
      });
    },
    setMessage: function(type, message, options) {
      var flashId, onClose;
      options = $.extend({
        onClose: null,
        timeToClose: 6000
      }, options);
      window.artiaFlashCount = (isNaN(parseInt(window.artiaFlashCount)) ? 0 : window.artiaFlashCount + 1);
      flashId = "flash_" + window.artiaFlashCount;
      onClose = ($.isFunction(options.onClose) ? options.onClose : false);
      $("#flash-area").html($("<div>").attr("id", flashId).addClass("flash " + type).append($("<span>")).append(message + "   ").append($("<a>").addClass("close").attr("href", "#").text("Fechar").click(function() {
        clearTimeout(window.artiaFlashTimeout[flashId]);
        if (onClose) {
          onClose.call(this);
        }
        $(this).parent().slideUp();
        return false;
      })));
      if (!window.artiaFlashTimeout) {
        window.artiaFlashTimeout = [];
      }
      if (options.timeToClose) {
        return window.artiaFlashTimeout[flashId] = setTimeout(function() {
          return $("#" + flashId).slideUp();
        }, options.timeToClose);
      }
    },
    bindModalEvents: function(element) {
      return $("#" + element).bind("ajax:complete", function(data, status, xhr) {
        if (status.status === 201) {
          $.modal.close();
          TwygoCommon.setMessage("success", TwygoCommon.msg_callback[element]);
        } else {
          $(".error-message").html(I18n.t("email_not_registered"));
          $("#user_email_resent, #user_email_password").addClass("red_border").attr("disabled", "false");
          return false;
        }
        return $("#user_email_resent").attr("disabled", "false");
      }).bind("ajax:loading", function() {
        return $("#user_email_resent").attr("disabled", "true");
      });
    },
    focusNext: function(element) {
      var current_index, focusables, next_index;
      element = element === void 0 || element === null ? $(document.activeElement) : $(element);
      focusables = $(":input:visible");
      current_index = focusables.index(element);
      next_index = current_index + 1 >= focusables.size() ? 0 : current_index + 1;
      return $(":input:visible:eq(" + next_index + ")").focus();
    },
    focusPrev: function(element) {
      var current_index, focusables, next_index, prev_index;
      element = element === void 0 || element === null ? $(document.activeElement) : $(element);
      focusables = $(":input:visible");
      current_index = focusables.index(element);
      next_index = current_index + 1 >= focusables.size() ? 0 : current_index + 1;
      prev_index = current_index - 1 < 0 ? focusables.size() - 1 : current_index - 1;
      return $(":input:visible:eq(" + prev_index + ")").focus();
    },
    isFlashBlocked: function() {
      if (window.external) {
        return typeof window.external.msActiveXFilteringEnabled !== "undefined" && window.external.msActiveXFilteringEnabled() === true;
      }
    },
    bindDatePicker: function(el) {
      var date;
      date = new Date();
      $(el).setMask({
        mask: '99/99/9999',
        autoTab: false
      });
      return $(el).datepicker({
        dateFormat: I18n.t("date.formats.date_on_js"),
        dayNames: I18n.t("date.day_names"),
        dayNamesMin: I18n.t("date.abbr_day_names"),
        monthNames: I18n.t("date.monthNames"),
        monthNamesShort: I18n.t("date.monthNames"),
        nextText: I18n.t("common.next"),
        prevText: I18n.t("common.prev"),
        yearRange: (date.getFullYear() - 5) + ":" + (date.getFullYear() + 5),
        showOtherMonths: true,
        selectOtherMonths: true
      });
    },
    wavesInit: function() {
      return $(document).ajaxComplete(function() {
        Waves.attach('.btn');
        return Waves.init();
      });
    },
    searchToggle: function() {
      $(document).ready(function() {
        return TwygoCommon.check_page();
      });
      return $(document).ajaxComplete(function() {
        return TwygoCommon.check_page();
      });
    },
    ajaxLoadingContent: function() {
      return $(document).ajaxComplete(function() {
        return $('#new-content').find('#center').removeClass('loading');
      });
    },
    check_page: function() {
      var _lista, _page;
      _lista = ['/course_list', '/my-contents'];
      _page = window.location.pathname;
      if (_lista.indexOf(_page) > -1) {
        return $('#top-search').fadeIn();
      } else {
        return $('#top-search').fadeOut();
      }
    },
    menuToggle: function() {
      var _url;
      _url = location.pathname;
      $("#menu-off__content a[href='" + _url + "']").addClass('actv');
      return $('.search-content.offline').find("#search-toggle").on("click", function() {
        return $("#top-search").toggleClass('open');
      });
    },
    scaleAvatar: function(category) {
      var image, span;
      if (category === "speaker") {
        image = $("img.img-preview");
        return TwygoCommon.applyScale(image);
      } else if (category === "user") {
        span = $("#avatar-user--preview");
        return span.children().each(function(img) {
          image = $(this);
          return TwygoCommon.applyScale(image);
        });
      }
    },
    applyScale: function(image) {
      var pic;
      image.removeClass('scaleimg').removeClass('scaleheight');
      pic = image.get(0);
      if (pic.naturalHeight > (pic.naturalWidth * 1.20) && pic.naturalHeight < (pic.naturalWidth * 1.70)) {
        return image.addClass('scaleimg');
      } else if (pic.naturalHeight >= (pic.naturalWidth * 1.70)) {
        return image.addClass('scaleheight');
      }
    },
    previewAvatar: function(show_alert) {
      if ($('.js--preview-avatar').length) {
        return $('.js--preview-avatar').each(function(index, element) {
          var $preview, $this, _id, _preview_id;
          $this = $(this);
          $preview = $this;
          _id = "#" + $this.find('.input-file').attr('id');
          if ($this.hasClass('user')) {
            _preview_id = "#avatar-user--preview";
            $preview = $("#avatar-user--preview");
            $preview.find('.img-preview').fadeOut();
          } else {
            _preview_id = "preview" + index;
            $this.find('.form-file__button').attr('id', _preview_id);
          }
          return $(_id).on("change", function() {
            var _accepts, _name, _reader;
            _accepts = ['image/jpeg', 'image/png', 'image/svg+xml'];
            if (this.files && this.files[0] && _accepts.indexOf(this.files[0].type) > -1) {
              _name = this.files[0].name;
              _reader = new FileReader();
              _reader.onload = function(e) {
                var _img;
                _img = new Image;
                _img.onload = function() {
                  if (_img.width > _img.height) {
                    return $preview.addClass('is_height');
                  } else {
                    return $preview.addClass('is_width');
                  }
                };
                $preview.find('.form-file__button').removeAttr('style');
                $preview.find('.img-preview').attr('src', e.target.result).fadeIn();
                $preview.find('img:not(.img-preview)').fadeOut();
              };
              $this.find('.form-file__button').addClass('on-prev');
              _reader.readAsDataURL(this.files[0]);
            } else {
              if (show_alert) {
                TwygoFlashMessage.setMessage('error', I18n.t('invalid_file_format'));
              }
              $preview.find('.img-preview').fadeOut();
              $this.find('.form-file__button').removeClass('on-prev');
              $this.find('.file_map__name').text('');
              return $(this).replaceWith($(this).val('').clone(true));
            }
          });
        });
      }
    },
    modalToogle: function() {
      return $("body").on("click", '.show-more', function() {
        var $schedule;
        $schedule = $(this).closest(".model").find(".model-schedule");
        if ($schedule.is(":visible")) {
          return $schedule.slideUp();
        } else {
          $(".model-schedule:visible").slideUp();
          return $schedule.slideDown();
        }
      });
    },
    script_nologgin: function() {
      this.wavesInit();
      this.menuToggle();
      this.modalToogle();
      return $("#stick-content").stick_in_parent({
        offset_top: 60,
        spacer: false
      });
    },
    megabytes: function(mb) {
      return mb * 1024 * 1024;
    },
    openSupportEmailUser: function() {
      $(".twygo-mail-support-user-modal").modal({
        minWidth: 500,
        minHeight: 600,
        opacity: 50,
        position: [50],
        overlayClose: true
      });
      return this.countEmailCaracteresLimit();
    },
    sendExternalSupportMail: function() {
      var external_user_email, external_user_name, external_user_phone, message_text, send_copy;
      external_user_name = $("#external_user_name").val();
      external_user_email = $("#external_user_email").val();
      external_user_phone = $("#external_user_phone").val();
      message_text = $("#message_text").val();
      send_copy = $("#mail_myself").prop("checked");
      if (message_text === '') {
        return TwygoFlashMessage.setMessage("error", I18n.t("javascripts.you_must_to_write_a_message_to_send_the_email"));
      } else {
        return $.ajax({
          url: "/external/support/mail",
          dataType: 'json',
          data: {
            message_text: message_text,
            send_copy: send_copy,
            name: external_user_name,
            email: external_user_email,
            phone: external_user_phone
          },
          type: 'get',
          complete: function(response) {
            if (response.responseText === "ok") {
              TwygoFlashMessage.setMessage("success", I18n.t("javascripts.email_response_message_success"));
              return $.modal.close();
            } else {
              return TwygoFlashMessage.setMessage("error", I18n.t("javascripts.message_has_many_caracteres"));
            }
          }
        });
      }
    },
    countEmailCaracteresLimit: function() {
      $("#message_text").on("keyup", function() {
        var limit, text_length;
        limit = $(this).attr('data-limit');
        text_length = $(this).val().length;
        if (text_length > limit) {
          $("#" + ($(this).attr('data-limit-input'))).addClass('overLimit');
        } else {
          $("#" + ($(this).attr('data-limit-input'))).removeClass('overLimit');
        }
        return $("#" + ($(this).attr('data-limit-input'))).html(limit - text_length);
      });
      return $("#message_text").keyup();
    },
    clearLocalStorageNotification: function() {
      var notificate_token;
      notificate_token = localStorage.getItem('@notificate:token');
      if (notificate_token) {
        return localStorage.setItem('@notificate:token', '');
      }
    }
  };

}).call(this);
(function() {
  this.TwygoCommunity = {
    dismissModal: function(modalId) {
      var $inactivate;
      $inactivate = $('.inactivate-option');
      if (!$inactivate.hasClass('hidden')) {
        $inactivate.addClass('hidden');
      }
      modalId = $(modalId);
      return modalId.fadeOut();
    },
    showModalAlertDeactivatingCommunityChat: function(enabled) {
      var $inactivatingAlertModal, input;
      input = document.getElementById('community_enable_twygo_chat');
      if (enabled && !input.checked) {
        $inactivatingAlertModal = $('#community-disable-chat');
        TwygoUtility.toggleModal($inactivatingAlertModal);
        $inactivatingAlertModal.find('.inactiv_or_active').html(I18n.t('communities.disable_community_chat'));
        $inactivatingAlertModal.find('.modal-body').html("<p style='padding: 0px; background-color: transparent' >" + I18n.t('communities.alert_disable_chat_in_community') + "</p>");
        $inactivatingAlertModal.find('.modal-footer').html("<button class='btn btn-default btn-modal' type='button'>" + I18n.t('_sign_out'));
        return $inactivatingAlertModal.find('.btn-default').attr('onClick', 'TwygoCommunity.dismissModal("#community-disable-chat")');
      }
    }
  };

}).call(this);
(function() {
  this.TwygoCommunityComments = {
    seeAnswer: function(community_id, discussion_id, show_message) {
      var identifier, paginate;
      if (show_message == null) {
        show_message = true;
      }
      identifier = "#banner-" + discussion_id;
      if ($("#see_more_" + discussion_id).length === 0) {
        paginate = 1;
      } else {
        paginate = parseInt($("#see_more_" + discussion_id)[0].dataset.paginate);
        $("#see_more_" + discussion_id).remove();
      }
      return $.ajax({
        url: "/o/" + TwygoApplication.currentOrganizationId + "/communities/" + community_id + "/comments",
        type: 'GET',
        data: {
          community_id: community_id,
          discussion_id: discussion_id,
          page: paginate
        },
        beforeSend: function() {
          return $(identifier).parent().addClass("ajax-loading");
        },
        success: function(response) {
          if (response.status === 'error') {
            if (show_message) {
              TwygoFlashMessage.setMessage('error', I18n.t("communities.comments.no_comments"));
            }
          } else {
            $("#comments_" + discussion_id).append(response);
            $("#see_answer_" + discussion_id + " span").text(I18n.t("communities.discussions.banner.close_comments"));
            $("#see_answer_" + discussion_id + " .fa-sort-down").addClass("open");
          }
          return $("#see_answer_" + discussion_id).attr("onclick", "TwygoCommunityComments.hideComments(" + community_id + ", " + discussion_id + ")");
        },
        complete: function() {
          return $(identifier).parent().removeClass("ajax-loading");
        }
      });
    },
    hideComments: function(community_id, discussion_id) {
      $("#comments_" + discussion_id).empty();
      $("#see_answer_" + discussion_id).attr("onclick", "TwygoCommunityComments.seeAnswer(" + community_id + ", " + discussion_id + ")");
      $("#new_comment_" + discussion_id).attr("onclick", "TwygoCommunityComments.newComment(" + community_id + ", " + discussion_id + ")");
      $("#see_answer_" + discussion_id + " span").text(I18n.t("communities.discussions.banner.see_comment"));
      return $("#see_answer_" + discussion_id + " .fa-sort-down").removeClass("open");
    },
    showComments: function(community_id, discussion_id) {
      $("#comments_" + discussion_id).empty();
      TwygoCommunityComments.countComments(community_id, discussion_id);
      TwygoCommunityComments.seeAnswer(community_id, discussion_id, false);
      return $("#new_comment_" + discussion_id).attr("onclick", "TwygoCommunityComments.newComment(" + community_id + ", " + discussion_id + ")");
    },
    newComment: function(community_id, discussion_id) {
      var html, max_lenght;
      html = "<div class='new-comment container'> <div class='text-area container' style='text-align: start'> <textarea id='comment_editor_" + discussion_id + "' name= 'text_comment' required=true maxlength=3000 placeholder='" + (I18n.t('communities.comments.write_comment')) + "'x></textarea> </div> <div class='publish-button container'> <button class='button btn btn-primary' onclick='TwygoCommunityComments.createComment(" + community_id + "," + discussion_id + ")'>" + (I18n.t('communities.comments.publish_comment')) + "</button> </div> </div>";
      $("#comments_" + discussion_id).empty();
      $("#comments_" + discussion_id).prepend(html);
      TwygoCommunityComments.seeAnswer(community_id, discussion_id, false);
      max_lenght = TwygoMaxLengthTextArea;
      max_lenght.initialize($("#comment_editor_" + discussion_id)[0]);
      $("#new_comment_" + discussion_id).attr("onclick", "TwygoCommunityComments.showComments(" + community_id + ", " + discussion_id + ")");
      $("#see_answer_" + discussion_id).attr("onclick", "TwygoCommunityComments.hideComments(" + community_id + ", " + discussion_id + ")");
      return $("#see_answer_" + discussion_id + " span").text(I18n.t("communities.discussions.banner.close_comments"));
    },
    createComment: function(community_id, discussion_id) {
      var content;
      content = $("#comment_editor_" + discussion_id).val();
      return $.ajax({
        url: "/o/" + TwygoApplication.currentOrganizationId + "/communities/" + community_id + "/comments",
        type: 'POST',
        data: {
          community_id: community_id,
          community_discussion_id: discussion_id,
          content: content
        },
        beforeSend: function() {
          return $("#comment_editor_" + discussion_id).parent().addClass("ajax-loading");
        },
        success: function(response) {
          if (response.status === "success") {
            $("#comments_" + discussion_id).empty();
            TwygoCommunityComments.countComments(community_id, discussion_id);
            TwygoCommunityComments.newComment(community_id, discussion_id);
            TwygoFlashMessage.setMessage('notice', response.message);
            return $("#new_comment_" + discussion_id).attr("onclick", "TwygoCommunityComments.showComments(" + community_id + ", " + discussion_id + ")");
          } else {
            TwygoFlashMessage.setMessage('error', response.message);
            TwygoCommunityComments.newComment(community_id, discussion_id);
            return $("#new_comment_" + discussion_id).attr("onclick", "TwygoCommunityComments.showComments(" + community_id + ", " + discussion_id + ")");
          }
        },
        complete: function() {
          return $("#comment_editor_" + discussion_id).parent().removeClass("ajax-loading");
        }
      });
    },
    find_photo_url: function(user) {
      return user.photo.url;
    },
    find_name_user: function(comment) {
      var first_name, last_name;
      first_name = comment.first_name;
      last_name = comment.last_name;
      return first_name + " " + last_name;
    },
    "delete": function(community_id, discussion_id, id) {
      return $.ajax({
        url: "/o/" + TwygoApplication.currentOrganizationId + "/communities/" + community_id + "/comments/" + id,
        type: 'DELETE',
        data: {
          resource_type: 'CommunityDiscussionComment',
          comment_id: id
        },
        beforeSend: function() {
          return $("#comment_" + id).parent().addClass("ajax-loading");
        },
        error: function(response) {
          return TwygoFlashMessage.setMessage('error', response.message);
        },
        success: function(response) {
          $("#comment_" + id).empty();
          TwygoCommunityComments.countComments(community_id, discussion_id);
          return TwygoFlashMessage.setMessage('notice', response.message);
        },
        complete: function() {
          return $("#comment_" + id).parent().removeClass("ajax-loading");
        }
      });
    },
    countComments: function(community_id, discussion_id) {
      return $.ajax({
        url: "/o/" + TwygoApplication.currentOrganizationId + "/communities/" + community_id + "/comments",
        type: 'GET',
        data: {
          discussion_id: discussion_id,
          count: true
        },
        success: function(response) {
          return $("#number_comments_span_discussion_" + discussion_id).text(response.count);
        }
      });
    }
  };

}).call(this);
(function() {
  this.TwygoCommunityDiscussions = {
    context_feed: function(community_id) {
      return {
        container: {
          root: "#full-feed",
          show: "#full-feed"
        },
        routers: {
          "new": function(id) {
            return "/o/" + TwygoApplication.currentOrganizationId + "/communities/discussions/new";
          },
          edit: function(id) {
            return "/o/" + TwygoApplication.currentOrganizationId + "/communities/discussions/" + id + "/edit";
          },
          show: function(id) {
            return "/o/" + TwygoApplication.currentOrganizationId + "/communities/discussions/" + id;
          },
          destroy: function(id) {
            return "/o/" + TwygoApplication.currentOrganizationId + "/communities/" + community_id + "/discussions/" + id;
          },
          search: function() {
            return "/o/" + TwygoApplication.currentOrganizationId + "/discussions/search";
          }
        },
        back: function() {
          return {
            url: "/o/" + TwygoApplication.currentOrganizationId + "/feed",
            data: {
              layout: 'blank'
            },
            render: "#full-feed"
          };
        }
      };
    },
    context_discussions: function(community_id) {
      return {
        container: {
          root: "#organization-area",
          feed_card: "#feed-card",
          show: "#feed-card"
        },
        routers: {
          index: function() {
            return "/o/" + TwygoApplication.currentOrganizationId + "/communities/" + community_id + "/discussions/";
          },
          show: function(id) {
            return "/o/" + TwygoApplication.currentOrganizationId + "/communities/" + community_id + "/discussions/" + id;
          },
          edit: function(id) {
            return "/o/" + TwygoApplication.currentOrganizationId + "/communities/" + community_id + "/discussions/" + id + "/edit";
          },
          destroy: function(id) {
            return "/o/" + TwygoApplication.currentOrganizationId + "/communities/" + community_id + "/discussions/" + id;
          },
          "new": function() {
            return "/o/" + TwygoApplication.currentOrganizationId + "/communities/" + community_id + "/discussions/new";
          },
          search: function() {
            return "/o/" + TwygoApplication.currentOrganizationId + "/discussions/search";
          },
          create: function(data) {
            return "";
          }
        },
        back: function() {
          return {
            url: "/o/" + TwygoApplication.currentOrganizationId + "/communities/" + community_id,
            data: {
              layout: 'blank'
            },
            render: "#organization-area"
          };
        }
      };
    },
    submit: function(arg) {
      var callbacks, data, ref, ref1, ref2, ref3, ref4, refresh, render, type, url;
      url = arg.url, render = (ref = arg.render) != null ? ref : this.renders.root, type = (ref1 = arg.type) != null ? ref1 : "GET", data = (ref2 = arg.data) != null ? ref2 : null, refresh = (ref3 = arg.refresh) != null ? ref3 : false, callbacks = (ref4 = arg.callbacks) != null ? ref4 : {};
      return $.ajax({
        url: url,
        type: type,
        data: data,
        beforeSend: function() {
          if (callbacks.beforeSend) {
            callbacks.beforeSend();
            return;
          }
          return $(render).parent().addClass("ajax-loading");
        },
        success: function(response) {
          if (callbacks.success) {
            callbacks.success(response);
            return;
          }
          return $(render).html(response);
        },
        complete: function() {
          if (callbacks.complete) {
            callbacks.complete();
            return;
          }
          $(render).parent().removeClass("ajax-loading");
          if (refresh) {
            return window.location.reload(true);
          }
        }
      });
    },
    onClickCard: function(discussion_id) {
      return TwygoCommunityDiscussions.show(discussion_id);
    },
    viewMore: function(id) {
      $("#banner-content-body-" + id).toggleClass("open");
      $("#view-more-" + id).toggleClass("d-none");
      return $("#see-less-" + id).toggleClass("d-none");
    },
    show: function(id) {
      return TwygoCommunityDiscussions.submit({
        url: this.rota.show(id),
        render: this.renders.show
      });
    },
    edit: function(id) {
      return TwygoCommunityDiscussions.submit({
        url: this.rota.edit(id)
      });
    },
    neww: function() {
      return TwygoCommunityDiscussions.submit({
        url: this.rota["new"]()
      });
    },
    destroy: function(id) {
      if (!confirm("" + (I18n.t("communities.discussion.question_delete")))) {

      }
    },
    back: function() {
      if (window.location.href.includes("feed")) {
        return window.location.assign("/o/" + TwygoApplication.currentOrganizationId + "/feed");
      } else {
        return window.location.assign(this.context.back().url);
      }
    },
    createDiscussions: function() {
      return TwygoCommunityDiscussions.submit({
        url: this.rota["new"]()
      });
    },
    onClickItemSearch: function(e) {
      var community;
      community = $(e).data('community');
      $("#communities").addClass("d-none");
      $("#communities").html();
      $("#community_discussion_community").val(community.name);
      $("#community_discussion_community").prop("community_id", community.id);
      return $("#community_discussion_community").data("community", community);
    },
    closeOptions: function() {
      var callback;
      callback = function() {
        $("#communities").addClass("d-none");
        return $("#communities").html(" ");
      };
      return setTimeout(callback, 300);
    },
    search: function(name) {
      return TwygoCommunityDiscussions.submit({
        url: this.rota.search(),
        data: {
          name: name
        },
        callbacks: {
          beforeSend: function() {
            $("#communities").html(" ");
            return $("#communities").addClass("d-none");
          },
          success: function(response) {
            var communities;
            if (response.result) {
              communities = response.result;
              $("#communities").removeClass("d-none");
              $("#communities").html(" ");
              if (!communities.length) {
                $("#communities").html("<p style=\"text-align:center\"> " + (I18n.t("communities.not_found")) + " </p>");
                return;
              }
              return $.map(communities, function(community, i) {
                $("#communities").append("<div id='" + community.id + "' class=\"item\" onclick=\"TwygoCommunityDiscussions.onClickItemSearch(this)\"> " + community.name + " </div>");
                return $("#communities div#" + community.id).data("community", community);
              });
            }
          },
          complete: function() {
            return console.log("Complete");
          }
        }
      });
    },
    initSearchInput: function() {
      var inputField, search;
      inputField = $("#community_discussion_community");
      search = function() {
        var isEmpty, value;
        $("#community_discussion_community").prop("community_id", null);
        value = inputField.val();
        isEmpty = value.trim().length === 0;
        if (isEmpty) {
          $("#communities").html(" ");
          $("#communities").addClass("d-none");
          return;
        }
        return TwygoCommunityDiscussions.search(value);
      };
      return inputField.keydown(TwygoCommunityDiscussions.debounce(search, 500));
    },
    loadDiscussions: function(page) {
      return TwygoCommunityDiscussions.submit({
        url: this.rota.index(),
        data: {
          layout: 'blank',
          page: page
        }
      });
    },
    debounce: function(func, wait) {
      var timer;
      timer = null;
      return function() {
        clearTimeout(timer);
        return timer = setTimeout(func, wait);
      };
    },
    initialize: function(community_id, controller) {
      this.controller = controller;
      this.community_id = community_id;
      this.context = TwygoCommunityDiscussions.context_discussions(community_id);
      if (this.controller === 'feed') {
        this.context = TwygoCommunityDiscussions.context_feed(community_id);
      }
      this.rota = this.context.routers;
      this.renders = this.context.container;
      TwygoCommunityDiscussions.back_params = this.context.back();
      if (this.controller === 'feed') {
        $("#actions").remove();
      }
      return this.url = ("/o/" + TwygoApplication.currentOrganizationId + "/communities/") + ("" + community_id) + "/discussions";
    }
  };

}).call(this);
(function() {
  this.TwygoCommunityInteractions = {
    like: function(id, type) {
      var resource_type;
      resource_type = TwygoCommunityInteractions.discussion_or_comment(type);
      return $.ajax({
        url: "/o/" + TwygoApplication.currentOrganizationId + "/communities/interations",
        type: 'POST',
        data: {
          interaction_type: 0,
          resource_type: resource_type,
          resource_id: id
        },
        beforeSend: function() {
          return $("#banner-tal").parent().addClass("ajax-loading");
        },
        success: function(response) {
          $("#banner-tal").parent().removeClass("ajax-loading");
          TwygoCommunityInteractions.markLikeOrDislike(id, true, type);
          TwygoCommunityInteractions.markLikeOrDislike(id, false, type);
          TwygoCommunityInteractions.numberLikes(id, type);
          return TwygoCommunityInteractions.numberDisLikes(id, type);
        }
      });
    },
    dislike: function(id, type) {
      var resource_type;
      resource_type = TwygoCommunityInteractions.discussion_or_comment(type);
      return $.ajax({
        url: "/o/" + TwygoApplication.currentOrganizationId + "/communities/interations",
        type: 'POST',
        data: {
          interaction_type: 1,
          resource_type: resource_type,
          resource_id: id
        },
        beforeSend: function() {
          return $("#banner-tal").parent().addClass("ajax-loading");
        },
        success: function(response) {
          $("#banner-tal").parent().removeClass("ajax-loading");
          TwygoCommunityInteractions.markLikeOrDislike(id, true, type);
          TwygoCommunityInteractions.markLikeOrDislike(id, false, type);
          TwygoCommunityInteractions.numberLikes(id, type);
          return TwygoCommunityInteractions.numberDisLikes(id, type);
        }
      });
    },
    numberLikes: function(id, type) {
      var identifier, resource_type;
      resource_type = TwygoCommunityInteractions.discussion_or_comment(type);
      if (type) {
        identifier = "#number_likes_span_discussion_" + id;
      } else {
        identifier = "#number_likes_span_comment_" + id;
      }
      return $.ajax({
        url: "/o/" + TwygoApplication.currentOrganizationId + "/communities/interations",
        type: 'GET',
        data: {
          interaction_type: 0,
          resource_type: resource_type,
          resource_id: id
        },
        success: function(response) {
          return $(identifier).text(response.likes_or_dislikes);
        }
      });
    },
    numberDisLikes: function(id, type) {
      var identifier, resource_type;
      resource_type = TwygoCommunityInteractions.discussion_or_comment(type);
      if (type) {
        identifier = "#number_dislikes_span_discussion_" + id;
      } else {
        identifier = "#number_dislikes_span_comment_" + id;
      }
      return $.ajax({
        url: "/o/" + TwygoApplication.currentOrganizationId + "/communities/interations",
        type: 'GET',
        data: {
          interaction_type: 1,
          resource_type: resource_type,
          resource_id: id
        },
        success: function(response) {
          return $(identifier).text(response.likes_or_dislikes);
        }
      });
    },
    markLikeOrDislike: function(id, like_or_dislike, type) {
      var identifier_dislike, identifier_like, resource_type;
      resource_type = TwygoCommunityInteractions.discussion_or_comment(type);
      if (type) {
        identifier_like = "#number_likes_discussion_" + id;
        identifier_dislike = "#number_dislikes_discussion_" + id;
      } else {
        identifier_like = "#number_likes_comment_" + id;
        identifier_dislike = "#number_dislikes_comment_" + id;
      }
      return $.ajax({
        url: "/o/" + TwygoApplication.currentOrganizationId + "/communities/interations",
        type: 'GET',
        data: {
          resource_type: resource_type,
          resource_id: id,
          like_or_dislike: like_or_dislike
        },
        success: function(response) {
          if (like_or_dislike) {
            if (response.mark) {
              $(identifier_like).removeClass("far fa-thumbs-up");
              return $(identifier_like).addClass("fas fa-thumbs-up");
            } else {
              $(identifier_like).removeClass("fas fa-thumbs-up");
              return $(identifier_like).addClass("far fa-thumbs-up");
            }
          } else {
            if (response.mark) {
              $(identifier_dislike).removeClass("far fa-thumbs-down");
              return $(identifier_dislike).addClass("fas fa-thumbs-down");
            } else {
              $(identifier_dislike).removeClass("fas fa-thumbs-down");
              return $(identifier_dislike).addClass("far fa-thumbs-down");
            }
          }
        }
      });
    },
    discussion_or_comment: function(type) {
      var resource_type;
      if (type) {
        resource_type = 'CommunityDiscussion';
      } else {
        resource_type = 'CommunityDiscussionComment';
      }
      return resource_type;
    }
  };

}).call(this);
(function() {
  this.TwygoCompetencesManagement = {
    initialize: function() {
      this.organizationId = TwygoApplication.currentOrganizationId;
      TwygoProfilesManagement.initialize();
      this.bindEvents();
      return this.requirementsTab();
    },
    bindEvents: function() {
      $(".submenu_iten.requirements").click(this.requirementsTab);
      $(".submenu_iten.competencies").click(this.competenciesTab);
      $(".submenu_iten.professional_profile").click(this.professionalProfileTab);
      $(".submenu_iten.complete_requirements").click(this.completeRequirementsTab);
      return $(".submenu_iten.consultations").click(this.consultationsTab);
    },
    professionalProfileTab: function() {
      $(".div_submenu a").removeClass("tab_selected selected");
      $(".submenu_iten.professional_profile").addClass("tab_selected selected");
      return TwygoProfilesManagement.index();
    },
    completeRequirementsTab: function() {
      $(".div_submenu a").removeClass("tab_selected selected");
      $(".submenu_iten.complete_requirements").addClass("tab_selected selected");
      return TwygoProfilesManagement.completeRequirements();
    },
    consultationsTab: function() {
      $(".div_submenu a").removeClass("tab_selected selected");
      $(".submenu_iten.consultations").addClass("tab_selected selected");
      return TwygoCompetencesManagement.reportsIndex();
    },
    reportsIndex: function() {
      $("#competencies_area").fadeOut("fast");
      return $("#competencies_area").load("/o/" + this.organizationId + "/competencies/reports", function() {
        TwygoCompetencesManagement.initializeReports();
        return $("#competencies_area").fadeIn("fast");
      });
    },
    initializeReports: function() {},
    requirementsTab: function() {
      $(".div_submenu a").removeClass("tab_selected selected");
      $(".submenu_iten.requirements").addClass("tab_selected selected");
      return TwygoCompetencesManagement.requirementsIndex();
    },
    requirementsIndex: function() {
      $("#competencies_area").fadeOut("fast");
      return $("#competencies_area").load("/o/" + this.organizationId + "/requirements", function() {
        $("#add-requirement").click(TwygoCompetencesManagement.requirementsNew);
        $(".requirement-edit").click(TwygoCompetencesManagement.requirementsEdit);
        return $("#competencies_area").fadeIn("fast");
      });
    },
    requirementsNew: function() {
      $("#competencies_area").fadeOut("fast");
      return $("#competencies_area").load("/o/" + TwygoCompetencesManagement.organizationId + "/requirements/new", function() {
        TwygoCompetencesManagement.initForm();
        return $("#competencies_area").fadeIn("fast");
      });
    },
    requirementsEdit: function() {
      var requirement_id;
      $("#competencies_area").fadeOut("fast");
      requirement_id = this.getAttribute("requirement_id");
      return $("#competencies_area").load("/o/" + TwygoCompetencesManagement.organizationId + "/requirements/" + requirement_id + "/edit", function() {
        TwygoCompetencesManagement.initForm();
        return $("#competencies_area").fadeIn("fast");
      });
    },
    initForm: function() {
      $(".edit_requirement, .new_requirement").on("ajax:complete", function(e, response) {
        if (response.responseText.indexOf("error_explanation") === -1) {
          TwygoFlashMessage.setMessage("notice", I18n.t("requirement_save_success"));
          if (response.responseJSON && response.responseJSON.status === "ok") {
            TwygoCompetencesManagement.requirementsIndex();
            return;
          }
        }
        $("#competencies_area").html(response.responseText);
        return TwygoCompetencesManagement.initForm();
      });
      $("#requirement-cancel").on("click", function() {
        return TwygoCompetencesManagement.requirementsIndex();
      });
      if ($(".edit_requirement, .new_requirement").find(".field_with_errors:eq(1)").length > 0) {
        setTimeout((function() {
          return $(".edit_requirement, .new_requirement").find(".field_with_errors:eq(1)").children().focus();
        }), 400);
      } else {
        setTimeout((function() {
          return $("#requirement_description").focus();
        }), 400);
      }
      return $(".new_requirement").find(".save").click(function() {
        return $(".new_requirement").submit();
      });
    },
    requirementsDestroy: function(item) {
      var ModalRemoveRequirements, index_id, index_name;
      index_id = 0;
      index_name = 1;
      ModalRemoveRequirements = TwygoModalRemoveItem.initialize({
        id: 'modal-remove-requirement',
        configuration: {
          url: "/o/" + TwygoCompetencesManagement.organizationId + "/requirements/",
          reload: false
        },
        callbacks: {
          success: function(response) {
            if (response.status === "ok") {
              TwygoCompetencesManagement.requirementsIndex();
              return TwygoFlashMessage.setMessage("notice", I18n.t("requirement_destroy_success"));
            }
          }
        }
      });
      return ModalRemoveRequirements.open({
        id: item[index_id],
        name: item[index_name]
      });
    },
    openDetails: function(element) {
      var competency_id;
      if (element) {
        element = $(element);
        if (element.children("div").hasClass("div-table-arrow-down")) {
          element.children("div").removeClass("div-table-arrow-down").addClass("div-table-arrow-up");
        } else {
          element.children("div").removeClass("div-table-arrow-up").addClass("div-table-arrow-down");
        }
        competency_id = element.parent("tr").attr("id").substring(15);
        return $("#competency_area_" + competency_id).slideToggle("fast");
      }
    },
    addLevel: function(competency_id) {
      return TwygoCompetencesManagement.loadLevelModal(competency_id, "new");
    },
    addRequirementToLevel: function(competency_id, level_id) {
      return TwygoCompetencesManagement.loadLevelRequirementModal(competency_id, level_id);
    },
    loadLevelModal: function(competency_id, action) {
      return $(".twygo-level-modal").modal({
        minWidth: 400,
        minHeight: 200,
        maxHeight: 450,
        opacity: 50,
        position: [100],
        overlayClose: true,
        onShow: function() {
          $("#simplemodal-container").css("min-height", "250px").css("height", "200px");
          return TwygoCompetencesManagement.requestLevelForm(competency_id, action);
        }
      });
    },
    requestLevelForm: function(competency_id, action) {
      $(".simplemodal-close").click(function() {
        return TwygoCompetencesManagement.competenciesIndex(competency_id);
      });
      return $(".twygo-level-modal").load("/o/" + TwygoCompetencesManagement.organizationId + "/competencies/" + competency_id + "/levels/" + action, function() {
        $(".new_level").find(".save").click(function() {
          return $(".new_level").submit();
        });
        $("#level_name").focus();
        return $(".edit_level, .new_level").on("ajax:complete", function(e, response) {
          $("#level_name").focus();
          if (response.responseText.indexOf("error_explanation") === -1) {
            if (response.responseJSON && response.responseJSON.status === "ok") {
              TwygoCompetencesManagement.competenciesIndex(competency_id);
            } else if (response.responseJSON && response.responseJSON.status === "error") {
              TwygoFlashMessage.setMessage("error", "Informe o nome do Nível.");
            } else {
              $(".twygo-level-modal").html(response.responseText);
              TwygoCompetencesManagement.requestLevelForm(competency_id, "new");
            }
            if (response.responseJSON && response.responseJSON.status !== "error") {
              return TwygoFlashMessage.setMessage("notice", "Nível salvo com sucesso.");
            }
          }
        });
      });
    },
    loadLevelRequirementModal: function(competency_id, level_id) {
      return $(".twygo-level-requirement-modal").modal({
        minWidth: 400,
        minHeight: 420,
        opacity: 50,
        position: [50],
        overlayClose: true,
        onShow: function() {
          return TwygoCompetencesManagement.requestNewLevelRequirementForm(competency_id, level_id);
        }
      });
    },
    requestNewLevelRequirementForm: function(competency_id, level_id) {
      return $(".twygo-level-requirement-modal").load("/o/" + TwygoCompetencesManagement.organizationId + "/competencies/" + competency_id + "/levels/" + level_id + "/new_requirement", function() {
        $("#manager_name").focus();
        return $(".edit_level").on("ajax:complete", function(e, response) {
          if (response.responseText.indexOf("error_explanation") === -1) {
            TwygoFlashMessage.setMessage("notice", "Requisito(s) adicionado(s) com sucesso.");
            if (response.responseJSON && response.responseJSON.status === "ok") {
              return TwygoCompetencesManagement.competenciesIndex(competency_id, level_id);
            }
          }
        });
      });
    },
    editLevel: function(editLevel) {
      return TwygoCompetencesManagement.loadLevelModal(competency_id, "edit");
    },
    destroyLevel: function(competency_id, level_id) {
      var ModalRemoveLevel, name_level, url_delete_level;
      url_delete_level = "/o/" + TwygoCompetencesManagement.organizationId + "/competencies/" + competency_id + "/levels/";
      name_level = TwygoCompetencesManagement.getNameLevel(level_id);
      ModalRemoveLevel = TwygoModalRemoveItem.initialize({
        id: 'modal-remove-competency-nivel',
        configuration: {
          url: url_delete_level,
          reload: false
        },
        callbacks: {
          success: function(response) {
            if (response && response.status === "ok") {
              TwygoCompetencesManagement.removeLevelOfView(level_id);
              return TwygoFlashMessage.setMessage("notice", I18n.t('views.level.destroy_success'));
            }
          }
        }
      });
      return ModalRemoveLevel.open({
        id: level_id,
        name: name_level
      });
    },
    getNameLevel: function(level_id) {
      var html_element_level;
      html_element_level = $(".table_levels li[level_id=" + level_id + "]");
      return html_element_level.find('a').first().text().replace(/\n/g, '');
    },
    removeLevelOfView: function(level_id) {
      return $(".table_levels li[level_id=" + level_id + "]").remove();
    },
    competenciesTab: function() {
      $(".div_submenu a").removeClass("tab_selected selected");
      $(".submenu_iten.competencies").addClass("tab_selected selected");
      return TwygoCompetencesManagement.competenciesIndex();
    },
    competenciesIndex: function(competency_id, level_id) {
      return $("#competencies_area").load("/o/" + TwygoCompetencesManagement.organizationId + "/competencies", function() {
        var element, j, len, level, ref, results, ul;
        $(".add-competency").click(TwygoCompetencesManagement.competenciesNew);
        $(".edit-competency").click(TwygoCompetencesManagement.competenciesEdit);
        $(".destroy-competency").click(TwygoCompetencesManagement.competenciesDestroy);
        $("#table-competences-info").off().on("click", ".open-details", function() {
          return TwygoCompetencesManagement.openDetails(this);
        });
        if (competency_id > 0) {
          $("#competency_area_" + competency_id).show();
          $.modal.close();
        }
        if (level_id !== void 0 && level_id > 0) {
          level = $('.level_name[level_id="' + level_id + '"]');
          element = level.first().parent().parent().next();
          $(".table_levels .reqline").hide();
          element.show();
          $(".treeline").removeClass("less");
          level.parent().addClass("less");
        }
        $("ul.table_levels").sortable({
          handle: "span.handle",
          containment: ".competencies_table",
          placeholder: "ui-state-highlight",
          stop: function() {
            $("ul.table_levels li").css("overflow", "").css("height", "");
            return TwygoCompetencesManagement.triggerSortLevel(this);
          }
        });
        $('ul.table_levels .handle').click(function() {
          return $("ul.table_levels li").css("overflow", "").css("height", "");
        });
        $('ul.table_levels .handle').mousedown(function() {
          return $("ul.table_levels li").css("overflow", "hidden").css("height", "33px");
        });
        $("ul.table_levels").disableSelection();
        window.onbeforeunload = function() {
          if ($(".is-loading").length > 0) {
            return "Alguns dados ainda estão sendo salvos. Deseja continuar?";
          }
        };
        ref = $("ul.table_levels");
        results = [];
        for (j = 0, len = ref.length; j < len; j++) {
          ul = ref[j];
          results.push($(ul).data("currentOrder", $.map($(ul).find("li"), function(li) {
            return parseInt($(li).attr("level_id"));
          })));
        }
        return results;
      });
    },
    triggerSortLevel: function(ul) {
      var competency_id, sortTimeout;
      clearTimeout($(ul).data("sortTimeout"));
      competency_id = $(ul).attr("competency_id");
      sortTimeout = setTimeout(function() {
        return TwygoCompetencesManagement.saveCompetencyLevelOrder(ul);
      }, 1000);
      $("#competency_row_" + competency_id + " .competence-name").addClass("is-loading");
      return $(ul).data("sortTimeout", sortTimeout);
    },
    isDifferentOrder: function(oldOrder, newOrder) {
      var i, j, ref;
      if (oldOrder.length !== newOrder.length) {
        return true;
      }
      for (i = j = 0, ref = oldOrder.length - 1; 0 <= ref ? j <= ref : j >= ref; i = 0 <= ref ? ++j : --j) {
        if (oldOrder[i] !== newOrder[i]) {
          return true;
        }
      }
      return false;
    },
    saveCompetencyLevelOrder: function(ul) {
      var competency_id, currentOrder, newOrder;
      competency_id = $(ul).attr("competency_id");
      currentOrder = $(ul).data("currentOrder");
      newOrder = $.map($(ul).find("li"), function(li) {
        return parseInt($(li).attr("level_id"));
      });
      if (this.isDifferentOrder(currentOrder, newOrder)) {
        return $.ajax({
          type: "post",
          url: "/o/" + TwygoCompetencesManagement.organizationId + "/competencies/" + competency_id + "/save_level_order",
          data: {
            new_order: newOrder
          },
          success: function(response) {
            TwygoFlashMessage.setMessage("notice", "Ordem dos níveis foi salva com sucesso.");
            $("#competency_row_" + competency_id + " .competence-name").removeClass("is-loading");
            return $(ul).data("currentOrder", newOrder);
          }
        });
      } else {
        return $("#competency_row_" + competency_id + " .competence-name").removeClass("is-loading");
      }
    },
    competenciesNew: function() {
      return $("#competencies_area").load("/o/" + TwygoCompetencesManagement.organizationId + "/competencies/new", function() {
        return TwygoCompetencesManagement.initCompetencyForm();
      });
    },
    competenciesEdit: function() {
      var competency_id;
      competency_id = this.getAttribute("competency_id");
      return $("#competencies_area").load("/o/" + TwygoCompetencesManagement.organizationId + "/competencies/" + competency_id + "/edit", function() {
        return TwygoCompetencesManagement.initCompetencyForm();
      });
    },
    initCompetencyForm: function() {
      $(".edit_competency, .new_competency").on("ajax:complete", function(e, response) {
        if (response.responseText.indexOf("error_explanation") === -1) {
          TwygoFlashMessage.setMessage("notice", "Competência salva com sucesso.");
          if (response.responseJSON && response.responseJSON.status === "ok") {
            TwygoCompetencesManagement.competenciesIndex();
            return;
          }
        }
        $("#competencies_area").html(response.responseText);
        return TwygoCompetencesManagement.initCompetencyForm();
      });
      $(".new_competency").find(".save").click(function() {
        return $(".new_competency").submit();
      });
      if ($(".edit_competency, .new_competency").find(".field_with_errors:eq(1)").length > 0) {
        return setTimeout((function() {
          return $(".edit_competency, .new_competency").find(".field_with_errors:eq(1)").children().focus();
        }), 400);
      } else {
        return setTimeout((function() {
          return $("#competency_description").focus();
        }), 400);
      }
    },
    competenciesCancel: function() {
      return TwygoCompetencesManagement.competenciesIndex();
    },
    competenciesDestroy: function() {
      var ModalRemoveCompetencies, competency_id, competency_name, element;
      element = this;
      competency_id = element.getAttribute("competency_id");
      competency_name = element.getAttribute("name");
      ModalRemoveCompetencies = TwygoModalRemoveItem.initialize({
        id: 'modal-remove-competency',
        configuration: {
          url: "/o/" + TwygoCompetencesManagement.organizationId + "/competencies/",
          reload: false
        },
        callbacks: {
          success: function() {
            TwygoFlashMessage.setMessage("notice", I18n.t("views.competences.competency_destroy_success"));
            return $(element).parent().parent().remove();
          }
        }
      });
      return ModalRemoveCompetencies.open({
        id: competency_id,
        name: competency_name
      });
    },
    destroyRequirementRelation: function(competency_id, level_id, requirement_id, requirement_name) {
      var ModalRemoveRequirement;
      ModalRemoveRequirement = TwygoModalRemoveItem.initialize({
        id: 'modal-remove-requirement',
        configuration: {
          url: "/o/" + TwygoCompetencesManagement.organizationId + "/competencies/" + competency_id + "/levels/" + level_id + "/remove_requirement?requirement_id=" + requirement_id,
          subscribe_url: true,
          reload: false
        },
        callbacks: {
          success: function() {
            TwygoFlashMessage.setMessage("notice", "Requisito removido com sucesso.");
            return $("li[level_id=" + level_id + "] .requirement_" + requirement_id).remove();
          }
        }
      });
      return ModalRemoveRequirement.open({
        id: level_id,
        name: requirement_name
      });
    },
    bindRequirementsAssociation: function() {
      var requirements_array;
      requirements_array = [];
      return $(".requirement_item").on("click", function() {
        var element, index;
        element = $(this);
        if (element.hasClass("selectedRequirement")) {
          element.removeClass("selectedRequirement");
          index = requirements_array.indexOf(this.getAttribute("requirement_id"));
          requirements_array.splice(index, 1);
        } else {
          element.addClass("selectedRequirement");
          requirements_array.push(this.getAttribute("requirement_id"));
        }
        return $("#requirements_ids").val(requirements_array);
      });
    },
    requirementsFilter: function() {
      var element, filter_text, i, results, size;
      filter_text = $("#manager_name").val().toLowerCase().latinize();
      size = $(".requirement_item").size();
      i = 0;
      results = [];
      while (i < size) {
        element = $(".requirement_item:eq(" + i + ")");
        if (element.text().toLowerCase().latinize().indexOf(filter_text) > -1) {
          element.show();
        } else {
          element.hide();
        }
        results.push(i++);
      }
      return results;
    }
  };

}).call(this);
(function() {
  this.TwygoConfirmationOrganizationPassword = {
    showConfirmation: function(id, eventName, data) {
      if (document.getElementById(id)) {
        return document.getElementById(id).dispatchEvent(new CustomEvent(eventName, {
          detail: data
        }));
      }
    }
  };

}).call(this);
(function() {
  this.TwygoContent = {
    initialize: function() {
      ({
        curImages: new Array()
      });
      TwygoApplication.timeoutAlert();
      $('section').liveUrl({
        filterOutHost: true,
        loadStart: function() {
          $('.liveurl-loader').show();
          return $('.liveurl-loader').toggle();
        },
        loadEnd: function() {
          $('.liveurl-loader').hide();
          $('.liveurl').show();
          if (/msie/.test(navigator.userAgent.toLowerCase()) && $.browser.versionNumber < 10) {
            return $('.liveurl').toggle();
          }
        },
        success: function(data, el) {
          var curImages, div_id, info, output, ratioW, video;
          output = $(el).parent().find('.liveurl');
          div_id = output.find(".inner").find(".details").find(".info").length + 1;
          if (output.find(".inner").find(".details").find("#" + div_id).length === 0) {
            output.find(".inner").find(".details").append('<div class="info" id="' + div_id + '">');
          }
          info = output.find('#' + div_id);
          if (div_id > 1) {
            info.hide();
          }
          info.append('<div class="title_liveurl">');
          info.append('<div class="description_liveurl">');
          info.append('<div class="url">');
          info.find('.title_liveurl').html("<a href='" + data.url + "' style='color:#666 font-weight:bold'>" + data.title + "</a>");
          info.find('.description_liveurl').text(data.description);
          output.find('.controls .next').removeClass('active');
          output.find('.controls .prev').removeClass('active');
          info.find('.url').html("<a href='" + data.url + "'>" + data.url + "</a>");
          output.find('.thumbnail .current').text('1');
          output.find('.thumbnail .max').text(div_id);
          output.find('.thumbnail').show();
          output.find('.thumbnail').css("display", "block");
          output.find('.image_liveurl').show();
          output.find('.image_liveurl').css("display", "block");
          curImages = new Array();
          if (div_id > 1) {
            output.find('.controls .next').removeClass('inactive');
          }
          output.find('.close').one('click', function() {
            var liveUrl;
            liveUrl = $(this).parent();
            liveUrl.hide('fast');
            liveUrl.find('.video').html('').hide();
            liveUrl.find('.image_liveurl').html('');
            liveUrl.find('.controls .prev').addClass('inactive');
            liveUrl.find('.controls .next').addClass('inactive');
            liveUrl.find('.thumbnail').hide();
            liveUrl.find('.image_liveurl').hide();
            $('textarea').trigger('clear');
            return curImages = new Array();
          });
          output.show('fast');
          if (data.video !== null) {
            ratioW = data.video.width / 350;
            data.video.width = 350;
            data.video.height = data.video.height / ratioW;
            video = '<object width="' + data.video.width + '" height="' + data.video.height + '">' + '<param name="movie"' + 'value="' + data.video.file + '"></param>' + '<param name="allowScriptAccess" value="always"></param>' + '<embed src="' + data.video.file + '"' + 'type="application/x-shockwave-flash"' + 'allowscriptaccess="always"' + 'width="' + data.video.width + '" height="' + data.video.height + '"></embed>' + '</object>';
            return info.append(video);
          }
        }
      }, {
        addImage: function(image, url, el) {
          var activeId, id, jqImage, output;
          id = $(el).parent().find(".liveurl .info .url:contains('" + url + "')").parent().attr("id");
          activeId = $(".liveurl .info:visible").attr("id");
          output = $('.liveurl');
          jqImage = $(image);
          jqImage.attr('id', id);
          if ((image.width / image.height) > 7 || (image.height / image.width) > 4 || $(".liveurl .image img#" + id).length > 0) {
            return false;
          }
          curImages.push(jqImage.attr('src'));
          output.find('.image_liveurl').append("<a href='" + url + "'>");
          output.find('.image_liveurl a[href="' + url + '"]').append(jqImage);
          if (id === activeId) {
            return jqImage.show();
          }
        }
      });
      $('.liveurl').on('click', '.controls .button', function() {
        var activeDiv, content, divs, elem, liveUrl, other, self;
        self = $(this);
        liveUrl = $(this).parents('.liveurl');
        content = liveUrl.find('.details');
        divs = $('.info', content);
        activeDiv = $('.info:visible', content);
        if (self.hasClass('next')) {
          elem = activeDiv.next(".info");
        } else {
          elem = activeDiv.prev(".info");
        }
        if (elem.length > 0) {
          activeDiv.hide();
          $(".liveurl .inner .image_liveurl img#" + activeDiv.attr("id")).hide();
          elem.show();
          $(".liveurl .inner .image_liveurl img#" + elem.attr("id")).show();
          liveUrl.find('.thumbnail .current').text(elem.index() - 1);
          if (elem.index() - 1 === divs.length || elem.index() - 1 === 1) {
            self.addClass('inactive');
          }
        }
        if (self.hasClass('next')) {
          other = elem.prev(".info");
        } else {
          other = elem.next(".info");
        }
        if (other.length > 0) {
          if (self.hasClass('next')) {
            return self.prev().removeClass('inactive');
          } else {
            return self.next().removeClass('inactive');
          }
        } else {
          if (self.hasClass('next')) {
            return self.prev().addClass('inactive');
          } else {
            return self.next().addClass('inactive');
          }
        }
      });
      return $(".content .download-btn:not(.only-download)").appendTo(".green-btn-location");
    }
  };

}).call(this);
(function() {
  this.TwygoDashboard = {
    changeOrder: function(list_by) {
      var url;
      url = TwygoUtility.removeParam('order', TwygoDashboard.getFullURL());
      url = TwygoUtility.removeParam('field_order', url);
      url = url + '&field_order=' + list_by;
      url = url + '&order=';
      if ($('#icon-' + list_by)[0].getAttribute("order") === "" || $('#icon-' + list_by)[0].getAttribute("order") === "DESC") {
        return window.location.href = url + 'ASC';
      } else {
        return window.location.href = url + 'DESC';
      }
    },
    filterRanking: function() {
      var url;
      url = TwygoUtility.removeParam('search', TwygoDashboard.getFullURL());
      if ($("#rankingSearch").val()) {
        url = url + '&search=' + $("#rankingSearch").val();
      }
      return window.location.href = url;
    },
    exportRanking: function(filters) {
      return $.ajax({
        type: 'GET',
        dataType: 'json',
        url: "/dashboard_students/statistics/export",
        data: filters,
        beforeSend: function() {
          TwygoFlashMessage.setMessage('notice', I18n.t('wait_report_generate'));
          return $('#export_all').addClass('disabled').attr("disabled", "disabled");
        },
        success: function(success) {
          TwygoFlashMessage.setMessage('notice', I18n.t('report_generate'));
          return $('#export_all').removeClass('disabled').removeAttr("disabled", "disabled");
        },
        error: function() {
          return TwygoFlashMessage.setMessage('error', I18n.t('error_export_file'));
        },
        complete: function(data) {}
      });
    },
    getFullURL: function() {
      return location.pathname + location.search;
    },
    student_id: 0,
    animation_progress: function($selector, _color) {
      return $selector.find('[data-score]').each(function(el, i) {
        var _$this, _score;
        _$this = $(this);
        _score = $(this).attr('data-score');
        return $(this).find('.score-bar').circleProgress({
          emptyFill: '#e2ebf1',
          size: 140,
          thickness: 8,
          value: _score / 100,
          lineCap: 'round',
          animation: {
            duration: 6000,
            easing: "circleProgressEasing"
          },
          fill: {
            gradient: _color
          }
        }).on('circle-animation-progress', function(event, progress, stepValue) {
          return _$this.find('.score-text').html(Math.round(100 * stepValue.toFixed(2)) + '%');
        });
      });
    },
    animation_bar: function($selector) {
      return $selector.find('[data-progress]').each(function(el, i) {
        var _$this, _progress;
        _$this = $(this);
        _progress = $(this).attr('data-progress');
        return _$this.animate({
          width: _progress + "%"
        }, 1000);
      });
    },
    notfound: function(organization_id) {
      var html;
      return html = "<p class=\"not-found center\">\n  " + (I18n.t('views.dashboard.no_courses_to_show')) + "\n</p>\n<p class=\"not-found center\">\n <a href=\"/o/" + organization_id + "/events?tab=events\" class=\"btn btn-primary\"><i class='plus'></i>" + (I18n.t('views.dashboard.add_course')) + "</a>\n</p>";
    },
    notfoundstudent: function() {
      var html;
      return html = "<p class=\"not-found center clearfix\">\n  " + (I18n.t('views.dashboard.no_courses_to_show')) + "\n</p>";
    },
    notfoundranking: function() {
      var html;
      return html = "<p class=\"not-found center\">\n  " + (I18n.t('views.dashboard.no_score_to_display')) + "\n</p>";
    },
    notfoundcertificated: function() {
      var html;
      return html = "<p class=\"not-found center clearfix\">\n  " + (I18n.t('views.dashboard.no_certificate_to_display')) + "\n</p>";
    },
    animation_number: function($selector) {
      return $selector.find('.number-up').each(function(el, i) {
        return $(this).counterUp({
          delay: 1000,
          time: 1500
        });
      });
    },
    ajax_activities_summary: function(_url, $content, enterprise, department, role, event, learning_path) {
      if (event == null) {
        event = '';
      }
      return $.ajax({
        url: _url,
        type: 'GET',
        dataType: 'json',
        data: {
          user_id: TwygoDashboard.student_id,
          enterprise: enterprise,
          department: department,
          role: role,
          event: event,
          learning_path: learning_path
        },
        beforeSend: function() {
          return $content.addClass('ajax-loading');
        },
        success: function(json, textStatus, jqXHR) {
          var _out, _template;
          _template = $('#activities_summary').html();
          _out = Mustache.render(_template, json);
          if ($content.html() === '') {
            return $content.append(_out);
          } else {
            return $content.html(_out);
          }
        },
        complete: function(response) {
          $content.removeClass('ajax-loading');
          TwygoDashboard.animation_progress($content.find('.frequencia-progress'), ['#56BD5B', '#469C4A']);
          TwygoDashboard.animation_progress($content.find('.progresso-progress'), ['#FCC419', '#FBC02d']);
          return TwygoDashboard.animation_progress($content.find('.questionario-progress'), ['#1496D9', '#41CAB5']);
        }
      });
    },
    ajax_number_infor: function(_url, $content, enterprise, department, role, event, learning_path) {
      if (event == null) {
        event = '';
      }
      return $.ajax({
        url: _url,
        type: 'GET',
        dataType: 'json',
        data: {
          enterprise: enterprise,
          department: department,
          role: role,
          event: event,
          learning_path: learning_path
        },
        beforeSend: function() {
          return $content.addClass('ajax-loading');
        },
        success: function(json, textStatus, jqXHR) {
          var _out, _template;
          _template = $('#numbers_infor').html();
          _out = Mustache.render(_template, json);
          if ($content.html() === '') {
            return $content.append(_out);
          } else {
            return $content.html(_out);
          }
        },
        complete: function(response) {
          $content.removeClass('ajax-loading');
          TwygoDashboard.animation_bar($content);
          return TwygoDashboard.animation_number($content);
        }
      });
    },
    ajax_more_popular: function(_url, $content, enterprise, department, role, event, learning_path) {
      if (event == null) {
        event = '';
      }
      return $.ajax({
        url: _url,
        type: 'GET',
        dataType: 'json',
        data: {
          enterprise: enterprise,
          department: department,
          role: role,
          event: event,
          learning_path: learning_path
        },
        beforeSend: function() {
          return $content.addClass('ajax-loading');
        },
        success: function(json, textStatus, jqXHR) {
          var _out, _template;
          if (json.events.length) {
            _template = $('#more_popular').html();
            _out = Mustache.render(_template, json);
          } else {
            $content.closest('.box-element').find('.footer-element').fadeOut();
            _out = TwygoDashboard.notfound(TwygoApplication.currentOrganizationId);
          }
          if ($content.html() === '') {
            return $content.append(_out);
          } else {
            return $content.html(_out);
          }
        },
        complete: function(response) {
          return $content.removeClass('ajax-loading');
        }
      });
    },
    ajax_gamification: function(_url, $content) {
      return $.ajax({
        url: _url,
        type: 'GET',
        dataType: 'json',
        beforeSend: function() {
          return $content.addClass('ajax-loading');
        },
        success: function(json, textStatus, jqXHR) {
          var _out, _template;
          if (json.gamification_active === false) {
            $content.closest('.box-element').find('.title-element h3').text(I18n.t('views.dashboard.experience'));
            _template = $('#gamification_points_of_experience').html();
            _out = Mustache.render(_template, json);
          } else {
            _template = $('#gamification').html();
            _out = Mustache.render(_template, json);
          }
          return $content.append(_out);
        },
        complete: function(response) {
          TwygoDashboard.set_trophy_image(response, $content);
          return $content.removeClass('ajax-loading');
        }
      });
    },
    set_trophy_image: function(response, $content) {
      if (response.responseJSON.gamification_active === true && response.responseJSON.is_custom_trophy_setting && response.responseJSON.user_trophy !== '') {
        return TwygoDashboard.custom_image(response.responseJSON.user_trophy);
      } else {
        return TwygoDashboard.default_images(response.responseJSON.position, response.responseJSON.user_pontuation_by_weight);
      }
    },
    custom_image: function(url) {
      $(".ranking").removeClass("trophy-background-no-image");
      return $(".ranking").addClass("trophy-background-no-image").css('background-image', 'url(' + url + ')');
    },
    default_images: function(position, pontuation) {
      switch (position) {
        case 1:
          $(".ranking").attr('class', 'ranking');
          $(".ranking").addClass("trophy-background-image-gold");
          break;
        case 2:
          $(".ranking").attr('class', 'ranking');
          $(".ranking").addClass("trophy-background-image-silver");
          break;
        case 3:
          $(".ranking").attr('class', 'ranking');
          $(".ranking").addClass("trophy-background-image-bronze");
      }
      if (pontuation === 0) {
        $(".ranking").attr('class', 'ranking');
        return $(".ranking").addClass("trophy-background-image");
      }
    },
    ajax_my_certificates: function(_url, $content) {
      return $.ajax({
        url: _url,
        type: 'GET',
        dataType: 'json',
        beforeSend: function() {
          return $content.addClass('ajax-loading');
        },
        success: function(json, textStatus, jqXHR) {
          var _out, _template;
          if (json.events.length) {
            _template = $('#my_certificates').html();
            _out = Mustache.render(_template, json);
          } else {
            $content.closest('.box-element').find('.footer-element').fadeOut();
            _out = TwygoDashboard.notfoundcertificated();
          }
          return $content.append(_out);
        },
        complete: function(response) {
          $content.removeClass('ajax-loading');
          TwygoDashboard.animation_bar($content);
          return TwygoDashboard.animation_number($content);
        }
      });
    },
    ajax_courses_in_progress: function(_url, $content) {
      return $.ajax({
        url: _url,
        type: 'GET',
        dataType: 'json',
        beforeSend: function() {
          return $content.addClass('ajax-loading');
        },
        success: function(json, textStatus, jqXHR) {
          var _out, _template;
          if (json.events.length) {
            _template = $('#courses_in_progress').html();
            _out = Mustache.render(_template, json);
          } else {
            $content.closest('.box-element').find('.footer-element').fadeOut();
            _out = TwygoDashboard.notfoundstudent();
          }
          return $content.append(_out);
        },
        complete: function(response) {
          $content.removeClass('ajax-loading');
          TwygoDashboard.animation_bar($content);
          return TwygoDashboard.animation_number($content);
        }
      });
    },
    ajax_in_progress: function(_url, $content, enterprise, department, role, event, learning_path) {
      if (event == null) {
        event = '';
      }
      return $.ajax({
        url: _url,
        type: 'GET',
        dataType: 'json',
        data: {
          enterprise: enterprise,
          department: department,
          role: role,
          event: event,
          learning_path: learning_path
        },
        beforeSend: function() {
          return $content.addClass('ajax-loading');
        },
        success: function(json, textStatus, jqXHR) {
          var _out, _template;
          if (json.events.length) {
            _template = $('#in_progress').html();
            _out = Mustache.render(_template, json);
          } else {
            $content.closest('.box-element').find('.footer-element').fadeOut();
            _out = TwygoDashboard.notfound(TwygoApplication.currentOrganizationId);
          }
          if ($content.html() === '') {
            return $content.append(_out);
          } else {
            return $content.html(_out);
          }
        },
        complete: function(response) {
          $content.removeClass('ajax-loading');
          TwygoDashboard.animation_bar($content);
          return TwygoDashboard.animation_number($content);
        }
      });
    },
    exist_value: function(value) {
      if (value) {
        return value;
      } else {
        return null;
      }
    },
    show_clear_button: function(value) {
      return !value;
    },
    build_cards: function(Enterprise, Department, Role, Course, LearningPath) {
      var _html, data, out;
      if (Enterprise || Department || Role || Course || LearningPath) {
        data = {
          clear_filter: true
        };
      } else {
        data = {};
      }
      _html = $('#clean_filter').html();
      out = Mustache.render(_html, data);
      return $('#clean-filter').html(out);
    }
  };

}).call(this);
(function() {
  this.TwygoDomains = {
    addToTable: function(domain) {
      var $domain;
      $domain = $("#domains-table").find(".row.domain[data-id=" + domain.id + "]");
      if ($domain.length > 0) {
        $domain.find(".domain-name").html("<span>" + domain.name + "</span>");
        $domain.find(".domain-url").html("<span>" + domain.url + "<span>");
        $domain.find(".domain-dns").html("<span>" + (TwygoDomains.status_dns(domain.status)) + "<span>");
        $domain.removeClass("editing");
        if (domain.status === 0 || domain.status === 1) {
          $('#validate_dns').removeClass('disabled');
          $('#validate_dns').addClass('valid-dns');
          $domain.find(".icon-is_valid").removeClass('issued');
          return $domain.find(".icon-is_valid").addClass('pending_validation');
        } else if (domain.status === 2 || domain.status === 3) {
          $domain.find(".icon-is_valid").removeClass('pending_validation');
          return $domain.find(".icon-is_valid").addClass('issued');
        }
      } else {
        $("#domains-table").find(".body").append(this.newRow(domain));
        if (domain.status === 0 || domain.status === 1) {
          $('#validate_dns').removeClass('disabled');
          $('#validate_dns').addClass('valid-dns');
          $domain.find(".icon-is_valid").removeClass('issued');
          return $domain.find(".icon-is_valid").addClass('pending_validation');
        } else if (domain.status === 2 || domain.status === 3) {
          $domain.find(".icon-is_valid").removeClass('pending_validation');
          return $domain.find(".icon-is_valid").addClass('issued');
        }
      }
    },
    formCancel: function() {
      $("#domains-table").find(".editing").removeClass("editing");
      return $("#domain-quick-form").find("form").fadeOut("fast", function() {
        $(this).empty();
      });
    },
    isURL: function(_value) {
      return /^(?:http(s)?:\/\/)?[\w.-]+(?:\.[\w\.-]+)+[\w\-\._~:\/?#[\]@!\$&'\(\)\*\+,;=.]+$/igm.test(_value);
    },
    isCustom: function(_value) {
      return /(.*)(?:\.alpha|pre)?\.?twygo(?:ead)?\.com(?:\.br)?$/.test(_value);
    },
    newRow: function(domain) {
      var is_default, newRow, validate_class;
      is_default = domain.default_domain ? 'default-domain' : '';
      validate_class = TwygoDomains.isCustom(domain.url) ? 'issued' : 'pending_validation';
      return newRow = "<div class='row domain' data-id='" + domain.id + "''>\n  <div class='domain-controls minimal icons-content'>\n    <span class='domain-set-default " + is_default + "' title='" + (I18n.t('views.organizations.click_to_default_domain')) + "'></span>\n  </div>\n  <div class='domain-name ellipsis midle' title='" + domain.name + "'>\n    <span>" + domain.name + "</span>\n  </div>\n  <div class='domain-url ellipsis midle' title='" + domain.url + "'>\n    <span>" + domain.url + "</span>\n  </div>\n  <div class='domain-dns ellipsis midle' title='" + (TwygoDomains.status_dns(domain.status)) + "'>\n    <span>" + (TwygoDomains.status_dns(domain.status)) + "</span>\n  </div>\n  <div class='domain-validated status-content icons-content'>\n    <span class='icon-is_valid " + validate_class + "'></span>\n  </div>\n  <div class='domain-controls minimal midle icons-content'>\n    <span class='domain-edit' title='" + (I18n.t('views.organizations.edit_domain')) + "'></span>\n  </div>\n  <div class='domain-controls minimal midle icons-content'>\n    <span class='domain-destroy' title='" + (I18n.t('views.organizations.delete_domain')) + "'></span>\n  </div>\n</div>";
    },
    validation: function(_arn, _domain, _id) {
      var _modal;
      _modal = $('#view-certificate');
      return $.ajax({
        url: "/o/" + TwygoApplication.currentOrganizationId + "/domains/" + _id + "/verify_status/",
        type: 'GET',
        data: {
          arn: _arn,
          domain: _domain
        },
        cache: false,
        dataType: 'json',
        beforeSend: function() {
          return _modal.find('.inner-box').addClass('ajax-loading');
        },
        success: function(data, textStatus, jqXHR) {
          var $row, msg;
          $row = $('#domains-list').find(".domain[data-id='" + _id + "']");
          msg = null;
          if (data.status === 'issued' || data.status === 'ISSUED') {
            alert(I18n.t("javascripts.domain_validate_success"));
            location.reload();
          }
          if (data.status === 'pending_validation' || data.status === 'PENDING_VALIDATION') {
            msg = I18n.t('javascripts.certificate_status_pending_validation');
          }
          if (data.status === 'inactive' || data.status === 'INACTIVE') {
            msg = I18n.t('javascripts.javascripts.certificate_status_inactive');
          }
          if (data.status === 'expired' || data.status === 'EXPIRED') {
            msg = I18n.t('javascripts.certificate_status_expired');
          }
          if (data.status === 'validation_time_out' || data.status === 'VALIDATION_TIMED_OUT') {
            msg = I18n.t('javascripts.certificate_status_validation_timed_out');
          }
          if (data.status === 'revoked' || data.status === 'REVOKED') {
            msg = I18n.t('javascripts.certificate_status_revoked');
          }
          if (data.status === 'failed' || data.status === 'FAILED') {
            msg = I18n.t('javascripts.certificate_status_failed');
          }
          if (msg) {
            return TwygoFlashMessage.setMessage('alert', msg);
          }
        },
        error: function() {
          $('#view-request').fadeOut().find('.inner-box').removeClass('zoomIn');
          return setTimeout(function() {
            return TwygoFlashMessage.setMessage('error', I18n.t('javascripts.certificate_request_error'));
          }, 1000);
        },
        complete: function() {
          return _modal.find('.inner-box').removeClass('ajax-loading');
        }
      });
    },
    request_cert: function(_domain, _id) {
      return $.ajax({
        url: "/o/" + TwygoApplication.currentOrganizationId + "/domains/" + _id + "/request_ssl/",
        type: 'POST',
        data: {
          domain: _domain
        },
        cache: false,
        dataType: 'json',
        beforeSend: function() {},
        success: function(data, textStatus, jqXHR) {
          var $row;
          $row = $('#domains-list').find(".domain[data-id='" + _id + "']");
          TwygoFlashMessage.setMessage('success', I18n.t('certificate_successfully_requested'));
          $row.find('.view-certifcate').attr('data-arn', data.arn);
          $row.find('.view-certifcate').attr('data-name', data.name);
          $row.find('.view-certifcate').attr('data-value', data.value);
          return $('#view-request').fadeOut().find('.inner-box').removeClass('zoomIn');
        },
        error: function() {
          $('#view-request').fadeOut().find('.inner-box').removeClass('zoomIn');
          return setTimeout(function() {
            return TwygoFlashMessage.setMessage('error', I18n.t('certificate_request_error'));
          }, 1000);
        },
        complete: function() {
          return window.location.reload;
        }
      });
    },
    validate_dns_in_domain: function() {
      return $.ajax({
        url: "/o/" + TwygoApplication.currentOrganizationId + "/domains/validate_dns",
        method: 'post',
        success: function() {
          return TwygoFlashMessage.setMessage('sucess', I18n.t('javascripts.domain_being_registered'));
        },
        error: function(e) {
          return TwygoFlashMessage.setMessage('error', e);
        },
        complete: function() {}
      });
    },
    allow_validation_domain: function(all_validated) {
      if (all_validated) {
        return $('#validate_dns').addClass("disabled");
      } else {
        return $('#validate_dns').removeClass("disabled");
      }
    },
    status_dns: function(status) {
      var statusToHuman;
      return statusToHuman = (function() {
        switch (status) {
          case 0:
            return I18n.t('activerecord.attributes.domain.validate_dns');
          case 1:
            return I18n.t('activerecord.attributes.domain.validated_awaiting_publication');
          case 2:
            return I18n.t('activerecord.attributes.domain.validated_and_published');
          case 3:
            return I18n.t('activerecord.attributes.domain.inactivated');
        }
      })();
    },
    resizeForm: function() {
      TwygoDomains.windowResizeHandler();
      return $(window).resize(function() {
        return TwygoDomains.windowResizeHandler();
      });
    },
    windowResizeHandler: function() {
      var elements;
      elements = $('.domain-info-row').children().slice(0, 2);
      if (window.innerWidth >= 991 && window.innerWidth < 1200) {
        return elements.each(function() {
          return $(this).attr('class', 'col-md-6');
        });
      } else if (window.innerWidth < 991) {
        return elements.each(function() {
          return $(this).attr('class', 'col-md-12');
        });
      } else {
        return elements.each(function() {
          return $(this).attr('class', 'col-md');
        });
      }
    }
  };

}).call(this);
(function() {
  this.TwygoEventContent = {
    initialize: function(opts) {
      this.options = opts ? opts : {};
      this.event_id = opts && opts.event_id ? opts.event_id : TwygoEventManagement.currentEventData.eventId;
      this.doBindings();
      this.setupLists();
      return this.onResize();
    },
    exit: function() {
      if (this.hasListChanged()) {
        if (!confirm(I18n.t('content_not_saved_confirm'))) {
          return;
        }
      }
      return TwygoEventManagement.cancelButton();
    },
    hasListChanged: function() {
      return JSON.stringify($("#nestable-list").data("old-items")) !== JSON.stringify($("#nestable-list").nestable("serialize"));
    },
    addContent: function() {
      var count, item, newItem, ol;
      item = $("#contents-controls #new-list.dd .dd-handle");
      count = (item.parent("li.dd-item").data("count") || 0) + 1;
      item.parent("li.dd-item").data("count", count);
      newItem = item.parent("li.dd-item").clone();
      newItem.find(".dd-label").text(I18n.t("new") + " " + count);
      newItem.addClass("new");
      newItem.attr("id", "new_" + count);
      newItem.data("el", newItem.attr("id"));
      newItem.data("title", I18n.t("new") + " " + count);
      newItem.data("new", true);
      this.saveNewContent;
      $("#nestable-list .dd-empty").remove();
      $("#nestable-list .dd-empty-text").remove();
      if ($("#nestable-list > ol.dd-list").length > 0) {
        newItem.appendTo("#nestable-list > ol");
      } else {
        ol = $("<ol class='dd-list'>");
        ol.append(newItem);
        $("#nestable-list").append(ol);
      }
      return newItem;
    },
    saveNewContent: function() {
      var params;
      params = {
        list: $("#nestable-list .new").nestable("serialize"),
        deleted: []
      };
      return $.ajax({
        url: "/e/" + TwygoEventContent.event_id + "/contents/save_list",
        type: "post",
        data: params,
        error: function(response) {
          return TwygoFlashMessage.setMessage('error', response.responseJSON.message);
        },
        success: function(response) {
          var item, j, len, ref;
          if (response.status !== "ok") {
            $(".dd-error").removeClass("dd-error");
            ref = response.invalid_items;
            for (j = 0, len = ref.length; j < len; j++) {
              item = ref[j];
              $("#nestable-list").find("#" + item.el).addClass("dd-error");
            }
            return TwygoFlashMessage.setMessage('error', response.message);
          }
        }
      });
    },
    copyContent: function() {
      return $("#float_copy_event").load("/e/" + TwygoEventContent.event_id + "/contents/copy", function() {
        return $("#float_copy_event").modal({
          minHeight: 520,
          minWidth: 740,
          opacity: 50
        });
      });
    },
    doCopyContent: function() {
      var events_ids;
      events_ids = $("#events_ids").val();
      return $.ajax("/e/" + this.event_id + "/contents/create_queue", {
        data: {
          events_ids: events_ids
        },
        success: function(response) {
          if (response === "ok") {
            TwygoFlashMessage.setMessage("notice", I18n.t("javascripts.event_content_copy_activities"));
            $.modal.close();
            return TwygoEventManagement.cancelButton();
          } else {
            TwygoFlashMessage.setMessage("error", response);
            return $.modal.close();
          }
        }
      });
    },
    previewContent: function() {
      return window.open("/e/" + TwygoEventContent.event_id + "/learn?preview=1");
    },
    showIndex: function() {
      $("#contents-form").hide();
      return TwygoEventContent.reload();
    },
    reload: function() {
      return $("#manage-events").load("/e/" + this.event_id + "/contents", function() {
        return $("#manage-events").hide().fadeIn("slow");
      });
    },
    setupLists: function() {
      var deletedList, items, list;
      list = $("#nestable-list");
      deletedList = $("#deleted-list");
      list.find(".dd-item:not([data-id])").remove();
      deletedList.find(".dd-item:not([data-id])").remove();
      items = $('.dd-item[data-id]');
      items.sort(function(a, b) {
        a = $(a).data("sequence");
        b = $(b).data("sequence");
        if (parseInt(a, 10) >= parseInt(b, 10)) {
          return 1;
        } else {
          return -1;
        }
      });
      items.map(function() {
        var item, parent_id;
        item = $(this);
        item.data("el", item.attr("id"));
        $('#nestable-list').data("nestable").unsetParent(item);
        parent_id = item.data("parent");
        if (parent_id === void 0) {
          return TwygoEventContent.appendItemToList(item, item.is("[data-deleted=true]") ? deletedList : list);
        } else {
          return TwygoEventContent.appendItemToList(item, items.filter("[data-id=" + parent_id + "]"));
        }
      });
      items.data("released", false).children(".dd-released").removeClass("ok").attr("title", I18n.t("javascripts.blocked"));
      items.filter("[data-released=true]").data("released", true).children(".dd-released").addClass("ok").attr("title", "Liberado");
      $("#new-list li.dd-item").data("count", 0);
      items.find("ol.dd-list:empty").remove();
      if (list.find(".dd-item").length <= 0) {
        list.find("ol.dd-list").remove();
        list.append($("<div class='dd-empty'>"), $("<span class='dd-empty-text'>" + I18n.t('drag_here') + "</span>"));
      } else {
        list.children(".dd-empty", ".dd-empty-text").remove();
      }
      if (deletedList.find(".dd-item").length <= 0) {
        deletedList.find("ol.dd-list").remove();
        deletedList.append($("<div class='dd-empty'>"), $("<span class='dd-empty-text'>" + I18n.t('drag_here') + "</span>"));
      } else {
        deletedList.children(".dd-empty", ".dd-empty-text").remove();
      }
      list.hide().fadeIn("slow");
      deletedList.hide().fadeIn("slow");
      return list.data('old-items', list.nestable("serialize"));
    },
    appendItemToList: function(item, list) {
      if (list.children("ol.dd-list").length > 0) {
        list.children("ol.dd-list").append(item);
      } else {
        list.append($("<ol class='dd-list'>").append(item));
      }
      if (list.is(".dd-item") && list.children("[data-action]").length === 0) {
        return $('#nestable-list').data("nestable").setParent(list);
      }
    },
    showErrors: function(fields, messages, object) {
      var field, form, j, k, len, len1, msg, msgs, ul;
      form = $("#contents-form form");
      msgs = form.find("#error_explanation");
      ul = msgs.find("ul");
      ul.empty();
      for (j = 0, len = messages.length; j < len; j++) {
        msg = messages[j];
        ul.append($("<li>").text(msg));
      }
      form.find(".field_with_errors *").unwrap();
      for (k = 0, len1 = fields.length; k < len1; k++) {
        field = fields[k];
        if (object === void 0) {
          form.find("input[name$='[" + field + "]']").wrap("<div class='field_with_errors'>");
        } else {
          form.find("#" + object + "_" + field).wrap("<div class='field_with_errors'>");
        }
        if (field === "schedule_endtime" || field === "schedule_starttime") {
          $('.date_start').addClass("border_error");
          $('.date_end').addClass("border_error");
          $('.field_time').addClass("border_error");
        }
      }
      if (ul.find("li").length > 0) {
        return msgs.show();
      } else {
        return msgs.hide();
      }
    },
    recalculateProgress: function(event_id) {
      var ModalConfirm;
      ModalConfirm = TwygoModalConfirmItem.initialize({
        id: 'modal-confirm-event_contents',
        message: I18n.t('javascripts.confimat_msg_delayed'),
        configuration: {
          type: 'POST',
          url: "/e/" + event_id + "/recalculate_all_progress.json",
          async: true
        },
        callbacks: {
          beforeSend: function() {
            return $('#contents-list').addClass('ajax-loading');
          },
          complete: function() {
            return $('#contents-list').removeClass('ajax-loading');
          },
          success: function(response) {
            return TwygoFlashMessage.setMessage(response.type, response.msg);
          },
          error: function(xhr) {
            var response;
            response = xhr.responseJSON;
            return TwygoFlashMessage.setMessage(response.type, response.msg);
          }
        }
      });
      return TwygoModalConfirmItem.open(event_id);
    },
    setControlPosition: function() {
      var scrollTop;
      if (!$("#contents-controls").is(":visible")) {
        return;
      }
      scrollTop = $(document).scrollTop();
      return $("#contents-controls").css("top", 195 - scrollTop > 5 ? 195 - scrollTop : 5);
    },
    onResize: function() {
      var h;
      h = $(window).height() - 280;
      $("#nestable-list").css("max-height", h > 320 ? h : 320);
      h = $(window).height() - 415;
      return $("#deleted-list").css("max-height", h > 180 ? h : 180);
    },
    editContent: function(content_id) {
      return $("#contents-form").load("/e/" + TwygoEventContent.event_id + "/contents/" + content_id + "/edit", function() {
        $("#contents").hide();
        $("#contents-form").fadeIn();
        return $("#contents-form").bind("ajax:success", function(event, response) {
          var field, item, j, len, ref;
          if (response.status === void 0) {
            return;
          }
          if (response.status === "ok") {
            TwygoFlashMessage.setMessage("notice", I18n.t("activities_update_success"));
            item = $(".dd-item[data-id=" + response.content.id + "]");
            item.attr("data-title", response.content.title).children(".dd-handle").children(".dd-label").text(response.content.title);
            if (response.content.status === "released") {
              item.attr("data-released", true).data("released", true).children(".dd-released").addClass("ok").attr("title", "Liberado");
            } else {
              item.attr("data-released", false).data("released", false).children(".dd-released").removeClass("ok").attr("title", I18n.t("javascripts.blocked"));
            }
            $("#nestable-list").data('old-items', $("#nestable-list").nestable("serialize"));
            return TwygoEventContent.showIndex();
          } else {
            $('html, body').stop(true, true).animate({
              scrollTop: 0
            }, 'slow', function() {});
            if (response.is_question) {
              ref = response.fields;
              for (j = 0, len = ref.length; j < len; j++) {
                field = ref[j];
                $("input#" + field).addClass("field_with_errors");
              }
            }
            TwygoEventContent.showErrors(response.fields, response.messages, "content");
            return TwygoEventContent.unlockButtonSave();
          }
        });
      });
    },
    clearChatBox: function() {
      $('#enable_content_chat_external').prop("checked", false);
      return TwygoEventContent.unlockButtonSave();
    },
    doBindings: function() {
      $(".dd-label, .dd-right-button").disableSelection();
      if (this.options["static"]) {
        $('#nestable-list').addClass("static").nestable({
          maxDepth: 4,
          group: 1,
          handleClass: "none"
        });
        $('#deleted-list').addClass("static").nestable({
          maxDepth: 4,
          group: 1,
          handleClass: "none"
        });
      } else {
        $('#nestable-list').nestable({
          maxDepth: 4,
          group: 1
        });
        $('#deleted-list').nestable({
          maxDepth: 4,
          group: 1
        });
      }
      $(window).off("resize", this.onResize).on("resize", this.onResize);
      $("#nestable-list").off('change').on('change', function() {
        if ($("#deleted-list ol.dd-list").length > 0) {
          return $("#deleted-list .dd-empty-text").remove();
        }
      });
      $("#deleted-list").off('change').on('change', function() {
        if ($("#nestable-list ol.dd-list").length > 0) {
          return $("#nestable-list .dd-empty-text").remove();
        }
      });
      $("#contents-controls #new-list.dd .dd-handle").on("mousedown", function(e) {
        var newItem;
        e.preventDefault();
        newItem = TwygoEventContent.addContent();
        e.target = newItem;
        return $('#nestable-list').data("nestable").dragStart(e);
      });
      $("#nestable-list").off("click", ".dd-edit").on("click", ".dd-edit", function(e) {
        var id;
        e.preventDefault();
        if (TwygoEventContent.hasListChanged()) {
          return TwygoFlashMessage.setMessage("alert", I18n.t("javascripts.content_list_changed"));
        }
        id = $(this).parent().data("id");
        return TwygoEventContent.editContent(id);
      });
      $("#restart-message").off("change").on("change", function(e) {
        var event_id, url;
        event_id = $(this).attr("event_id");
        url = ("/" + event_id + "/restart_message/?restart_value=") + $(this).is(":checked");
        return $.ajax(url, {
          type: "get",
          data: {},
          success: function(response) {
            TwygoFlashMessage.setMessage('notice', I18n.t('javascripts.info_update_success'));
          },
          error: function(response) {
            var error_message, ref;
            error_message = (response != null ? (ref = response.responseJSON) != null ? ref.message : void 0 : void 0) || I18n.t("javascripts.info_save_fail");
            TwygoFlashMessage.setMessage('error', error_message);
          }
        });
      });
      $("#nestable-list").off("click", ".dd-public-chat").on("click", ".dd-public-chat", function(e) {
        var ModalConfirm, answer, content_id, data, event_id, id, message;
        e.preventDefault();
        content_id = $(e.target).parent().attr('data-id');
        event_id = TwygoEventManagement.currentEventData.eventId;
        ModalConfirm = TwygoModalConfirmItem;
        if ($(e.target).hasClass("dd-chat-opened")) {
          id = 'modal-confirm-close-public-chat';
          message = I18n.t('javascripts.confirm_close_public_chat');
          data = {
            is_open: false
          };
        } else {
          id = 'modal-confirm-open-public-chat';
          message = I18n.t('javascripts.confirm_open_public_chat');
          data = {
            is_open: true
          };
        }
        ModalConfirm.initialize({
          id: id,
          message: message,
          configuration: {
            type: 'PUT',
            url: "/e/" + event_id + "/contents/" + content_id + "/manage_public_chat_in_content",
            data: data,
            async: true,
            reload: false
          },
          callbacks: {
            success: function() {
              var li;
              li = $('[data-id=' + content_id + ']');
              if (li.children().hasClass('dd-chat-opened')) {
                $('[data-id=' + content_id + ']').children('.dd-public-chat').removeClass('dd-chat-opened').addClass('dd-chat-closed');
                $('[data-id=' + content_id + ']').children('.dd-public-chat').prop('title', I18n.t('open_public_chat_content'));
              } else {
                $('[data-id=' + content_id + ']').children('.dd-public-chat').removeClass('dd-chat-closed').addClass('dd-chat-opened');
                $('[data-id=' + content_id + ']').children('.dd-public-chat').prop('title', I18n.t('close_public_chat_content'));
              }
              return TwygoFlashMessage.setMessage('notice', I18n.t("activities_update_success"));
            },
            error: function(xhr) {
              var response;
              response = xhr.responseJSON;
              return TwygoFlashMessage.setMessage(response.type, response.msg);
            }
          }
        });
        return answer = TwygoModalConfirmItem.open();
      });
      $("#nestable-list").off("click", ".dd-released").on("click", ".dd-released", function(e) {
        var $this, item;
        e.preventDefault();
        $this = $(this);
        item = $this.parent();
        if (item.data("released")) {
          $this.removeClass("ok").attr("title", I18n.t("javascripts.blocked"));
          return item.data("released", false).find(".dd-item").data("released", false).children(".dd-released").removeClass("ok").attr("title", I18n.t("javascripts.blocked"));
        } else {
          $this.addClass("ok").attr("title", I18n.t("javascripts.released"));
          return item.data("released", true).parents(".dd-item").data("released", true).children(".dd-released").addClass("ok").attr("title", I18n.t("javascripts.released"));
        }
      });
      $("#nestable-list").off("click", ".dd-delete").on("click", ".dd-delete", function(e) {
        var ol, parentLi;
        e.preventDefault();
        $("#deleted-list .dd-empty").remove();
        $("#deleted-list .dd-empty-text").remove();
        parentLi = $(this).parent().parent().parent();
        if ($("#deleted-list ol.dd-list").length > 0) {
          $(this).parent().appendTo("#deleted-list > ol");
        } else {
          ol = $("<ol class='dd-list'>");
          ol.append($(this).parent());
          $("#deleted-list").append(ol);
        }
        if (parentLi.is("li.dd-item")) {
          if (parentLi.children("[data-action]").length > 0 && parentLi.find("ol.dd-list li.dd-item").length <= 0) {
            $('#nestable-list').data("nestable").unsetParent(parentLi);
          }
        }
        if ($("#nestable-list").find(".dd-item").length <= 0) {
          return $("#nestable-list").empty().append($("<div class='dd-empty'>"), $("<span class='dd-empty-text'>" + I18n.t('drag_here') + "</span>"));
        }
      });
      $("button.green_btn.save_list").click(function() {
        var params;
        params = {
          list: $("#nestable-list").nestable("serialize"),
          deleted: $("#deleted-list").nestable("serialize")
        };
        return $.ajax("/e/" + TwygoEventContent.event_id + "/contents/save_list", {
          type: "post",
          data: params,
          error: function(response) {
            return TwygoFlashMessage.setMessage('error', response.responseJSON.message);
          },
          success: function(response) {
            var item, j, len, ref;
            if (response.status === "ok") {
              TwygoEventContent.reload();
              return TwygoFlashMessage.setMessage('notice', I18n.t("activities_update_success"));
            } else {
              $(".dd-error").removeClass("dd-error");
              ref = response.invalid_items;
              for (j = 0, len = ref.length; j < len; j++) {
                item = ref[j];
                $("#nestable-list").find("#" + item.el).addClass("dd-error");
              }
              return TwygoFlashMessage.setMessage('error', response.message);
            }
          }
        });
      });
      return $("button.gray_btn.cancel").click(function() {
        return TwygoEventContent.setupLists();
      });
    },
    bindEventsCopy: function() {
      var events_array;
      events_array = [];
      return $(".event_item").on("click", function() {
        var element, i, index, size;
        element = $(this);
        if (element.hasClass("selectedEvent")) {
          element.removeClass("selectedEvent");
          index = events_array.indexOf(this.getAttribute("event_id"));
          events_array.splice(index, 1);
        } else {
          size = $(".event_item").size();
          i = 0;
          while (i < size) {
            $(".event_item:eq(" + i + ")").removeClass("selectedEvent");
            i++;
          }
          element.addClass("selectedEvent");
          events_array.pop();
          events_array.push(this.getAttribute("event_id"));
        }
        return $("#events_ids").val(events_array);
      });
    },
    eventsFilter: function() {
      var element, filter_text, i, results, size;
      filter_text = $("#event-filter").val().toLowerCase().latinize();
      size = $(".event_item").size();
      i = 0;
      results = [];
      while (i < size) {
        element = $(".event_item:eq(" + i + ")");
        if (element.text().toLowerCase().latinize().indexOf(filter_text) > -1) {
          element.show();
        } else {
          element.hide();
        }
        results.push(i++);
      }
      return results;
    },
    addRequirementToContent: function(event_id, content_id) {
      return $(".twygo-content-requirement-modal").modal({
        minWidth: 400,
        minHeight: 420,
        opacity: 50,
        position: [50],
        overlayClose: true,
        onShow: function() {
          return $(".twygo-content-requirement-modal").load("/e/" + event_id + "/contents/" + content_id + "/new_requirement", function() {
            $("#content_title_search").focus();
            return $(".edit_event_content").on("ajax:complete", function(e, response) {
              var ref;
              if ((response != null ? (ref = response.responseJSON) != null ? ref.status : void 0 : void 0) === "ok") {
                TwygoFlashMessage.setMessage("notice", I18n.t("javascripts.requirements_add_success"));
                return $.modal.close();
              }
            });
          });
        }
      });
    },
    bindContentsAssociation: function() {
      var contents_array;
      contents_array = $("#contents_ids").val() === "" ? [] : $("#contents_ids").val().split(",");
      return $(".content_item").on("click", function() {
        var element, index;
        element = $(this);
        if (element.hasClass("selectedRequirement")) {
          element.removeClass("selectedRequirement");
          index = contents_array.indexOf(this.getAttribute("content_id"));
          contents_array.splice(index, 1);
        } else {
          element.addClass("selectedRequirement");
          contents_array.push(this.getAttribute("content_id"));
        }
        return $("#contents_ids").val(contents_array);
      });
    },
    contentsFilter: function() {
      var element, filter_text, i, results, size;
      filter_text = $("#content_title_search").val().toLowerCase().latinize();
      size = $(".content_item").size();
      i = 0;
      results = [];
      while (i < size) {
        element = $(".content_item:eq(" + i + ")");
        if (element.text().toLowerCase().latinize().indexOf(filter_text) > -1) {
          element.show();
        } else {
          element.hide();
        }
        results.push(i++);
      }
      return results;
    },
    bindDateInputs: function(options) {
      var date, date_end, date_start, endDate, max_retries;
      endDate = $("#date_end").val();
      $(":input.date").setMask({
        mask: '99/99/9999',
        autoTab: false
      });
      $(":input.field_time").setMask({
        mask: '99:99',
        autoTab: false
      });
      $(":input.date").datepicker({
        changeMonth: true,
        changeYear: true
      });
      date = new Date();
      date_start = $("#date_start").val() || date;
      date_end = $("#date_end").val() || date;
      if (options && options.event && options.event.date_time_start) {
        date = options.event.date_time_start.split('T')[0].split('-');
        date = new Date(date[0], parseInt(date[1], 10) - 1, date[2]);
      }
      $(":input.date").datepicker("option", {
        dateFormat: I18n.t("date.formats.date_on_js"),
        dayNames: I18n.t("date.day_names"),
        dayNamesMin: I18n.t("date.abbr_day_names"),
        monthNames: I18n.t("date.monthNames"),
        monthNamesShort: I18n.t("date.monthNames"),
        nextText: I18n.t("common.next"),
        prevText: I18n.t("common.prev"),
        yearRange: (date.getFullYear() - 5) + ":" + (date.getFullYear() + 5),
        showOtherMonths: true,
        selectOtherMonths: true
      });
      $("#eventsFromDate").datepicker("setDate", date);
      $("#date_start").datepicker("setDate", date_start);
      if ($("#date_start").attr("date")) {
        $("#date_start").val($("#date_start").attr("date"));
      }
      $("#date_end").datepicker("setDate", date_end);
      if ($("#date_end").attr("date")) {
        $("#date_end").val($("#date_end").attr("date"));
      }
      if ($("form").length > 0 && $("form:first").attr("id") !== "new_event" && $("form:first").attr("id").substring(0, 10) !== "edit_event") {
        if ($(".border_error:first").length > 0) {
          max_retries = 0;
          return setTimeout((function() {
            var results;
            $(".border_error:first").focus();
            results = [];
            while ($(".border_error:first:focus").length === 0 && max_retries < 10) {
              max_retries = max_retries + 1;
              results.push($(".border_error:first").focus());
            }
            return results;
          }), 500);
        }
      } else {
        if ($("form").length > 0 && $("form:eq(1)").find(".border_error:first").length > 0) {
          max_retries = 0;
          return setTimeout((function() {
            var results;
            $("form:eq(1)").find(".border_error:first").focus();
            results = [];
            while ($("form:eq(1)").find(".border_error:first:focus").length === 0 && max_retries < 10) {
              max_retries = max_retries + 1;
              results.push($("form:eq(1)").find(".border_error:first").focus());
            }
            return results;
          }), 500);
        }
      }
    },
    loadGoToWebinarEvents: function() {
      $('.refresh-icon').addClass('loading-refresh');
      return $.ajax("/go_to_webinar/get_upcoming_webinars", {
        success: function(response) {
          if (response.errorCode !== void 0) {
            TwygoFlashMessage.setMessage("error", I18n.t('javascripts.event_contents.webinar_error_found_webinar'));
            return $('.refresh-icon').removeClass('loading-refresh');
          } else if (response.err === 429 && response.category === 'Rate limit quota') {
            TwygoFlashMessage.setMessage("error", I18n.t('javascripts.event_contents.webinar_rate_limit_quota'));
            return $('.refresh-icon').removeClass('loading-refresh');
          } else {
            TwygoEventContent.webinar_events = response;
            $('#content_webinar_key').empty();
            $('#content_webinar_key').append($('<option>').text(I18n.t('javascripts.create_new_webinar')).attr('value', '').attr('data-index', ''));
            $.each(response, function(i, obj) {
              return $('#content_webinar_key').append($('<option>').text(obj.subject + " (" + obj.webinarKey + ")").attr('value', "" + obj.webinarKey).attr('data-index', i));
            });
            $('.refresh-icon').removeClass('loading-refresh');
            $('#content_webinar_key').change(function() {
              return TwygoEventContent.fillWebinarFields();
            });
            return $('#content_webinar_key').prop('disabled', false);
          }
        }
      });
    },
    refreshGoToWebinarEvent: function() {
      var webinar_key;
      $('.refresh-icon').addClass('loading-refresh');
      webinar_key = $('#content_webinar_key').val();
      return $.ajax("/go_to_webinar/get_webinar?webinar_key=" + webinar_key, {
        success: function(response) {
          var value_present;
          TwygoEventContent.webinar_events = response;
          if (response.errorCode === "NotFound") {
            if (confirm(I18n.t('javascripts.event_contents.webinar_not_found'))) {
              $('.refresh-icon').addClass('loading-refresh');
              TwygoEventContent.loadGoToWebinarEvents();
              return $('#send_gotowebinar_updates').click();
            } else {
              return $('.refresh-icon').removeClass('loading-refresh');
            }
          } else if (response.errorCode !== void 0) {
            if (confirm(I18n.t('javascripts.event_contents.webinar_error_found_webinar'))) {
              return TwygoEventContent.loadGoToWebinarEvents();
            } else {
              return $('.refresh-icon').removeClass('loading-refresh');
            }
          } else if (response.err === 429 && response.category === 'Rate limit quota') {
            TwygoFlashMessage.setMessage("error", I18n.t('javascripts.event_contents.webinar_rate_limit_quota'));
            return $('.refresh-icon').removeClass('loading-refresh');
          } else {
            $('.refresh-icon').removeClass('loading-refresh');
            value_present = $('#content_schedule_subject').val() !== "" || $('#content_schedule_description').val() !== "";
            if (value_present) {
              if (confirm(I18n.t('javascripts.event_contents.webinar_update_content_for_new'))) {
                return TwygoEventContent.populateFields(response);
              }
            } else {
              return TwygoEventContent.populateFields(response);
            }
          }
        }
      });
    },
    fillWebinarFields: function() {
      var selected_webinar, value_present, webinar_index_id;
      webinar_index_id = $('#content_webinar_key').children(":selected").attr('data-index');
      if (webinar_index_id !== '') {
        selected_webinar = TwygoEventContent.webinar_events[webinar_index_id];
        if (selected_webinar === void 0) {
          selected_webinar = TwygoEventContent.webinar_events;
        }
        value_present = $('#content_schedule_subject').val() !== "" || $('#content_schedule_description').val() !== "";
        if (value_present) {
          if (confirm(I18n.t('javascripts.event_contents.webinar_update_content_for_new'))) {
            return TwygoEventContent.populateFields(selected_webinar);
          }
        } else {
          return TwygoEventContent.populateFields(selected_webinar);
        }
      }
    },
    populateFields: function(selected_webinar) {
      $('#content_schedule_subject').val(selected_webinar.subject);
      $('#content_schedule_description').val(selected_webinar.description);
      $('#content_schedule_timezone').val(selected_webinar.timeZone);
      $('#content_webinar_id').val(selected_webinar.webinarID);
      $('#content_webinar_type').val("gotowebinar");
      $('#date_start:enabled').val(selected_webinar.times[0].startDate);
      $('#date_end:enabled').val(selected_webinar.times[0].endDate);
      $('#time_start:enabled').val(selected_webinar.times[0].startTime);
      return $('#time_end:enabled').val(selected_webinar.times[0].endTime);
    },
    tempLockButtonSave: function(duration) {
      if (duration == null) {
        duration = false;
      }
      TwygoEventContent.lockButtonSave();
      if (duration) {
        return setTimeout((function() {
          return TwygoEventContent.unlockButtonSave();
        }), duration);
      }
    },
    lockButtonSave: function() {
      TwygoEventContent.setEventialInput();
      return setTimeout((function() {
        $('.edit_content #button_send_form').addClass('locked');
        $('.edit_content #button_send_form').prop('disabled', true);
        return $('.edit_content .loader-content-form').fadeIn('fast');
      }), 1);
    },
    unlockButtonSave: function() {
      $('.edit_content #button_send_form').removeClass('locked');
      $('.edit_content #button_send_form').prop('disabled', false);
      return $('.edit_content .loader-content-form').fadeOut('fast');
    },
    setEventialInput: function() {
      $('#eventials_video_hidden').val($('#eventials_video').text());
      return $('#eventials_chat_hidden').val($('#eventials_chat').text());
    },
    handleDisableChatButton: function() {
      var enable_chat_check;
      enable_chat_check = $('#enable_content_chat_external').is(":checked");
      $('#disable_chat_at_end_external').prop('disabled', !enable_chat_check);
      if (!enable_chat_check) {
        return $('#disable_chat_at_end_external').prop('checked', false);
      }
    },
    handleDisableEventialsChat: function() {
      var enable_chat_check;
      enable_chat_check = $('#enable_content_chat_external').is(":checked");
      $('#eventials_chat').prop('contenteditable', !enable_chat_check);
      $('#div_eventials_chat').removeClass('d-none');
      if (enable_chat_check) {
        $('#div_eventials_chat').addClass('d-none');
        return $('#eventials_chat').html(null);
      }
    },
    hiddenEnableContentChat: function(hidden) {
      return $('#enable_content_chat').toggle(hidden);
    },
    setEnabledContentChatExternal: function(checked) {
      return $('#enable_content_chat_external').prop("checked", checked);
    },
    hiddenDisableContentChat: function(hidden) {
      return $('#disable_chat_at_video_end').toggle(hidden);
    },
    setDisableChatAtEndExternal: function(checked) {
      return $('#disable_chat_at_end_external').prop("checked", checked);
    },
    bindFieldValidationInput: function() {
      return $('input[id$="content_title"]').on('input', function() {
        return TwygoEventContent.checkValidationFieldError($(this), 255);
      });
    },
    checkValidationFieldError: function($element, max_length) {
      $element.val($element.val().substr(0, max_length));
      if ($element.val().length >= max_length && $element.parent().find('.validate-field-error').length === 0) {
        $element.parent().append("<span class='validate-field-error'>" + (I18n.t("max_characteres")) + "</span>");
        return setTimeout(function() {
          return $element.parent().children().remove('.validate-field-error');
        }, 5000);
      }
    },
    showGameKeyAlert: function() {
      return $('#button_send_form').on('click', function(e) {
        var game_key;
        game_key = $('#game-key').val().toString();
        if (game_key.length > 0 && !/(?:<iframe[^>]*)(?:(?:\/>)|(?:>.*?<\/iframe>))/.test(game_key)) {
          safePreventEvent(e);
          return document.getElementById('game-key-alert-dialog').dispatchEvent(new CustomEvent('showgamekeyalert'));
        }
      });
    }
  };

}).call(this);
(function() {
  this.TwygoEventGrid = {
    dayScrollPosition: 0,
    stageScrollPosition: 0,
    numberDaysShown: 4,
    numberStagesShown: 4,
    tasksNotChecked: function() {
      return $(".task:not(:has(:checked))");
    },
    initialize: function() {
      this.bindEvents();
      this.nDays = parseInt($(".daylist-container #ndays").val(), 10);
      this.nStages = parseInt($("#calendar-area #nstages").val(), 10);
      this.updateStyles();
      return this.baseUrl = "/e/" + TwygoApplication.object.id;
    },
    bindEvents: function() {
      $(document).on("change", "#calendar-area :checkbox", this.addToMyAgenda);
      $(".arrow-select, .event-date, .only-my-schedule").click(safePreventEvent);
      $(".only-my-schedule").click(this.toggleOnlyMySchedule);
      $(document).on("click", ".task", this.showDescriptionModal);
      return this.bindScrollings();
    },
    bindScrollings: function() {
      $(".event-date").click(this.loadProgramsAtDate);
      $(".dayscroll.arrright").click(function() {
        if (TwygoEventGrid.dayScrollPosition + TwygoEventGrid.numberDaysShown + 1 > TwygoEventGrid.nDays) {
          return;
        }
        TwygoEventGrid.dayScrollPosition++;
        return TwygoEventGrid.scrollDay("-=62px");
      });
      $(".dayscroll.arrleft").click(function() {
        if (TwygoEventGrid.dayScrollPosition - 1 < 0) {
          return;
        }
        TwygoEventGrid.dayScrollPosition--;
        return TwygoEventGrid.scrollDay("+=62px");
      });
      $("#map-to-right").click(function() {
        var g;
        if ((g = TwygoEventGrid).stageScrollPosition + g.numberStagesShown + 1 > g.nStages) {
          return;
        }
        g.stageScrollPosition++;
        return g.scrollStage("-=160px");
      });
      return $("#map-to-left").click(function() {
        var g;
        if ((g = TwygoEventGrid).stageScrollPosition - 1 < 0) {
          return;
        }
        g.stageScrollPosition--;
        return g.scrollStage("+=160px");
      });
    },
    scrollDay: function(param) {
      return $(".days-list").animate({
        left: param
      }, "fast");
    },
    scrollStage: function(param) {
      return $("#overflow").animate({
        left: param
      }, "fast");
    },
    updateStyles: function() {
      $(".task, .fade").removeClass("selected").addClass("selected");
      return this.tasksNotChecked().removeClass("selected").children().find(".fade").removeClass("selected");
    },
    addToMyAgenda: function() {
      var go_text, r;
      $.post(TwygoEventGrid.baseUrl + "/stage_programs/" + this.value + "/toggle", function(r) {
        $(".user_programs_selected_count a").html(I18n.t("events.grid.programs_selected", {
          count: Number(r)
        }));
        return $("#how-many-selected").html(I18n.t("events.grid.programs_selected", {
          count: Number(r)
        }));
      });
      if ($.trim((r = $("#action_result")).text()) === "") {
        r.text(I18n.t("views.actions.i_have_interest"));
      }
      go_text = $("#ev-go").show().text();
      if ($("#ev-go").text().indexOf("Tenho interesse") === -1) {
        $("#ev-go").show().text("Tenho interesse / " + go_text + " ");
      }
      return TwygoEventGrid.updateStyles();
    },
    loadProgramsAtDate: function() {
      $(".event-date").removeClass("pressed");
      $(this).addClass("pressed");
      return $.get(TwygoEventGrid.baseUrl + "/stage_programs/for_day", {
        date: $(this).attr("data-date")
      }, function(response) {
        $("#overflow").html(response);
        TwygoApplication.markCheckboxes();
        if (TwygoEventGrid.showOnlyMySchedule) {
          TwygoEventGrid.tasksNotChecked().hide();
        }
        return TwygoEventGrid.updateStyles();
      });
    },
    toggleOnlyMySchedule: function() {
      $(".only-my-schedule").toggleClass("pressed");
      TwygoEventGrid.showOnlyMySchedule = $(this).hasClass("pressed");
      return TwygoEventGrid.tasksNotChecked()[TwygoEventGrid.showOnlyMySchedule ? 'hide' : 'show']();
    },
    showDescriptionModal: function(e) {
      var g, logged, stageProgramId;
      if ($(e.target).is(":checkbox")) {
        return;
      }
      logged = TwygoApplication.currentUserId !== 0;
      (g = TwygoEventGrid).modalRelatedCheck = $(":checkbox", this);
      $.modal("<div class=\"program\"> <h1 style=\"width:295px;\">" + ($(this).attr("data-program-name")) + "</h1> <div class=\"ev-clock\" style=\"top: 20px;position: absolute;right: 5px;\"> <span>" + ($(this).attr("data-start-end")) + "</span> </div> </div> <div class=\"program-description\"> <div class=\"desc\">" + ($(this).attr("data-description")) + "</div> <div class=\"program_speakers_list\"></div> </div> <div id=\"moderateDiv\"> </div>", {
        focus: false,
        minWidth: 476
      });
      $(".program-description").css("height", (262 - $(".program").height()) + "px");
      stageProgramId = $(this).attr('data-program-id');
      return $.ajax({
        url: "/e/" + TwygoApplication.object.id + "/stage_programs/" + ($(this).attr('data-program-id')) + "/load_speakers_details",
        dataType: 'json',
        type: 'get',
        success: function(response) {
          var i, invisible_class, len, modalCheckbox, ref, speaker;
          if (response.is_moderator) {
            $("#moderateDiv").append("<a href=\"#\" class=\"stage_program_link\" style=\"width: 140px\" id=\"questionsButton\" name=\"commit\"><div class=\"question_icon\"></div><p class=\"program_text\">" + (I18n.t('view_questions')) + "</p></a> <a href=\"#\" class=\"stage_program_link\" style=\"padding-left: 10px;padding-right: 25px; padding-right: 10px\\9\" id=\"moderateButton\" name=\"commit\"><div class=\"moderation_icon\"></div><p class=\"program_text\">" + (I18n.t('moderate_or_respond')) + "</p></a> <div class=\"check stage_program_link\"><div class=\"schedule_icon\"></div><label><p>" + (I18n.t('add_to_calendar')) + "</p><input type=\"checkbox\" style=\"margin-top: 2px\"></label></div>");
            $("#moderateButton").click(function() {
              window.open("/e/" + TwygoApplication.object.id + "/stage_programs/" + stageProgramId + "/moderate");
              return false;
            });
          } else {
            $("#moderateDiv").append("<a href=\"#\" class=\"stage_program_link\" style=\"width: 140px\" id=\"questionsButton\" name=\"commit\"><div class=\"question_icon\"></div><p class=\"program_text\">" + (I18n.t('view_questions')) + "</p></a> <div class=\"check stage_program_link\"><div class=\"schedule_icon\"></div><label><p>" + (I18n.t('add_to_calendar')) + "</p><input type=\"checkbox\" style=\"margin-top: 2px\"></label></div>");
          }
          $("#questionsButton").click(function() {
            window.open("/e/" + TwygoApplication.object.id + "/stage_programs/" + stageProgramId + "/questions", '', "menubar=1,scrollbars=1,resizable=1");
            return false;
          });
          ref = response.speakers;
          for (i = 0, len = ref.length; i < len; i++) {
            speaker = ref[i];
            if (($.trim(speaker.short_resume)) === "null" || ($.trim(speaker.short_resume)) === "" || ($.trim(speaker.short_resume)) === null) {
              invisible_class = "nodisplay";
            } else {
              invisible_class = "";
            }
            $(".program_speakers_list").append("<div class='one-speaker'> <div class='user-img'> <a href='#' onclick='$.modal.close();window.location.href=\"" + speaker.profile_url + "\"'> <img src='" + speaker.avatar_url + "' height='30'></img> </a> </div> <div id='text-people'> <div class='name'> <a href='#' onclick='$.modal.close();window.location.href=\"" + speaker.profile_url + "\"' style='font-weight:bold'>" + ((speaker.first_name + " " + speaker.last_name).truncate(35)) + " </a> <a class='" + invisible_class + " more-information' href='#'> <div class='expand' onclick='TwygoTimeTable.expandSpeaker(this, " + speaker.id + ");'>" + (I18n.t('views.stage_programs.more_information')) + "</div> </a> </div> </div> <div class='speaker-resume resume-" + speaker.id + "'> <p>" + speaker.short_resume + "</p> </div> </div>");
          }
          if (logged) {
            modalCheckbox = $(".simplemodal-wrap :checkbox");
            if (g.modalRelatedCheck.get(0).checked) {
              modalCheckbox.attr("checked", "checked");
            }
          }
          if (TwygoApplication.currentUserId === 0) {
            $(".simplemodal-wrap .check").remove();
            $(".stage_program_link").remove();
          }
          if (logged) {
            return modalCheckbox.unbind().click(function() {
              g.modalRelatedCheck.click();
              if ($.browser.msie) {
                return g.modalRelatedCheck.change();
              }
            });
          }
        }
      });
    }
  };

}).call(this);
(function() {
  var dates;

  dates = {
    "fromDate": "",
    "toDate": ""
  };

  this.TwygoEventManagement = {
    organization_desc: null,
    changeToSpeaker: false,
    stageProgramId: null,
    isNewLearningPathFeatureFlagEnabled: false,
    eventID: null,
    defautURL: null,
    defautTab: null,
    currentStatus: "confirmed",
    xhr: {
      confirmed: null,
      pending: null,
      canceled: null
    },
    certificateDescriptionFields: {
      "type": "#event_event_type_id",
      "name": "#event_name",
      "date_start": "#date_start",
      "date_end": "#date_end",
      "city": "#event_city",
      "state": "#event_state"
    },
    courseComponentParams: null,
    IAButtonComponentParams: null,
    initialize: function(options) {
      if (options) {
        TwygoEventManagement.courseComponentParams = options;
        TwygoEventManagement.IAButtonComponentParams = options;
        TwygoEventManagement.isNewLearningPathFeatureFlagEnabled = options.isNewLearningPathFeatureFlagEnabled;
        if (options.event) {
          TwygoEventManagement.kind = options.event.kind;
          TwygoEventManagement.page().show();
          TwygoEventManagement.page().siblings().not("#events-page").hide();
        } else if (isNaN(TwygoEventManagement.kind)) {
          TwygoEventManagement.kind = 1;
        }
      }
      this.bindDateInputs(options);
      if (TwygoEventManagement.kind !== 0) {
        this.loadEvents(options);
      }
      this.bindEvents();
      if (TwygoEventManagement.kind === 0) {
        return $("#table-events-info").hide();
      }
    },
    initializeForm: function(eventId) {
      var formClass, formType;
      TwygoEventManagement.bindDateInputs();
      TwygoEventManagement.applyTimeMask();
      TwygoEventManagement.saveNotRepeat();
      TwygoEventManagement.changeBanner();
      if ($(".field_with_errors:eq(1)").length > 0) {
        setTimeout((function() {
          return $(".field_with_errors:eq(1)").children().focus();
        }), 400);
      } else if ($(".border_error:first").length > 0) {
        setTimeout((function() {
          return $(".border_error:first").focus();
        }), 400);
      } else {
        setTimeout((function() {
          return $("#event_name").focus();
        }), 400);
      }
      if (eventId) {
        formClass = "edit_event";
        formType = "put";
      } else {
        eventId = null;
        formClass = "new_event";
        formType = "post";
      }
      return $("." + formClass).ajaxpost({
        complete: function(response) {
          if (response.indexOf("error_explanation") === -1) {
            return TwygoEventManagement.eventSaveSuccess(response);
          } else {
            TwygoEventManagement.eventSaveError(response);
            return TwygoEventManagement.initializeForm(eventId);
          }
        }
      });
    },
    initializeGrouper: function() {
      return $(".show_event_object").children(".event-secion").children(".title-of-section").click(function() {
        $(this).siblings(".the-crowd").addClass("focus");
        $(".show_event_object").children(".event-secion").children(".the-crowd:not(.focus)").slideUp("fast");
        $(".show_event_object").children(".event-secion").children(".the-crowd:not(.focus)").siblings(".title-of-section").removeClass("title-colapse").addClass("title-expand");
        $(this).siblings(".the-crowd").slideToggle("fast", function() {
          if ($(this).is(':visible')) {
            return $(this).siblings(".title-of-section").removeClass("title-expand").addClass("title-colapse");
          } else {
            return $(this).siblings(".title-of-section").removeClass("title-colapse").addClass("title-expand");
          }
        });
        return $(this).siblings(".the-crowd").removeClass("focus");
      });
    },
    initializeEventObject: function(objId, objType) {
      var formClass;
      TwygoEventManagement.bindDateInputs();
      TwygoEventManagement.applyTimeMask();
      TwygoEventManagement.saveNotRepeat();
      if (objId) {
        formClass = "edit_" + objType;
      } else {
        formClass = "new_" + objType;
      }
      return $("." + formClass).ajaxpost({
        complete: function(response) {
          if (response.indexOf("error_explanation") === -1) {
            return TwygoEventManagement.eventSaveSuccess(response, objType);
          } else {
            TwygoEventManagement.magickInputs(response);
            TwygoEventManagement.initializeEventObject(objId, objType);
            return TwygoEventManagement.eventSaveError(response, objType);
          }
        }
      });
    },
    transferClassManager: function() {
      var event_id, manager_id, selected_manager_id;
      event_id = $("#class-manager-transfer-modal").attr('event_id');
      selected_manager_id = parseInt($('#select-managers').val());
      manager_id = $('#class-manager-transfer-modal').attr('manager_id');
      if (isNaN(selected_manager_id)) {
        return;
      }
      return $.ajax({
        method: 'POST',
        url: 'transfer-class-managers',
        data: {
          manager_id: manager_id,
          selected_manager_id: selected_manager_id,
          event_id: event_id
        },
        success: function(result) {
          $('.class-manager-row#' + selected_manager_id + '> td > .class-manager-assignment').addClass('assigned');
          $('.class-manager-row#' + selected_manager_id + '> td > .class-manager-assignment').removeClass('not_assigned');
          TwygoEventManagement.closeClassManagerModal();
          TwygoFlashMessage.setMessage('success', I18n.t('views.class_managers.pending_students_transfer'));
          return setTimeout((function() {
            return $('#select-managers').val('nulo');
          }), 700);
        }
      });
    },
    setTipText: function() {
      var tipText;
      $('#transfer_tip').tipsy({
        opacity: 0.95,
        html: true,
        fade: true
      });
      tipText = $('#transfer_tip').attr('original-title');
      tipText = tipText.slice(0, 1).toUpperCase() + tipText.slice(1);
      return $('#transfer_tip').attr('original-title', tipText);
    },
    eventSaveSuccessCallbacks: {
      event: function() {
        return TwygoEventManagement.cancelButton();
      },
      event_stage: function() {
        return TwygoEventManagement.loadEventStageForm(TwygoEventManagement.currentEventData.eventId);
      },
      stage_program: function() {
        return TwygoEventManagement.loadStageProgramForm(TwygoEventManagement.currentEventData.eventId);
      }
    },
    eventSaveSuccess: function(response, objType) {
      var callback, successMessage;
      if (objType == null) {
        objType = "event";
      }
      successMessage = TwygoEventManagement.isNewLearningPathFeatureFlagEnabled ? I18n.t("views.events.success_save_message") : I18n.t("event_save_success");
      if (response === "ok") {
        if (TwygoEventManagement.kind === 0) {
          TwygoFlashMessage.setMessage("notice", successMessage);
        } else if (TwygoEventManagement.kind === 1) {
          TwygoFlashMessage.setMessage("notice", I18n.t("model_save_success"));
        } else if (TwygoEventManagement.kind === 2) {
          TwygoFlashMessage.setMessage("notice", I18n.t("library_save_success"));
        } else if (TwygoEventManagement.kind === 3) {
          TwygoFlashMessage.setMessage("notice", I18n.t("views.events.success_save_message"));
        }
        callback = TwygoEventManagement.eventSaveSuccessCallbacks[objType];
        if (callback !== void 0) {
          callback();
        }
      } else {
        TwygoEventManagement.magickInputs(response);
        if (objType === "event") {
          TwygoEventManagement.initializeForm();
        } else {
          TwygoEventManagement.initializeEventObject(null, objType);
        }
        $("body").animate({
          scrollTop: 165
        }, "fast");
      }
      if (objType === "event") {
        if ($.browser.msie) {
          return setTimeout("TwygoEventManagement.loadEvents()", 200);
        } else {
          return TwygoEventManagement.loadEvents();
        }
      }
    },
    eventSaveError: function(response, objType) {
      var eventId;
      if (objType == null) {
        objType = "event";
      }
      if (TwygoEventManagement.currentEventData) {
        eventId = TwygoEventManagement.currentEventData.eventId;
      } else {
        eventId = "";
      }
      TwygoEventManagement.magickInputs(response);
      if (objType === "event") {
        return TwygoEventManagement.initializeForm();
      } else {
        return TwygoEventManagement.initializeEventObject(null, objType);
      }
    },
    magickInputs: function(response) {
      var form, j, len, magicwords, param, params, results;
      magicwords = ["utf8", "_method", "authenticity_token", "organization_id"];
      form = $("#manage-events form");
      if (response.indexOf("form") === -1) {
        params = form.serializeArray();
        form.html(response);
        results = [];
        for (j = 0, len = params.length; j < len; j++) {
          param = params[j];
          if (jQuery.inArray(param.name, magicwords) !== -1) {
            results.push(form.append("<input type='hidden' name='" + param.name + "' value='" + param.value + "'>"));
          } else {
            results.push(void 0);
          }
        }
        return results;
      } else {
        return $("#manage-events").html(response);
      }
    },
    bindDateInputs: function(options) {
      var date, date_end, date_start, endDate, max_retries;
      endDate = $("#date_end").val();
      $(":input.date").mask('00/00/0000');
      $(":input.date").datepicker({
        changeMonth: true,
        changeYear: true
      });
      date = new Date();
      date_start = $("#date_start").val() || date.setMonth(date.getMonth() - 6);
      date_end = $("#date_end").val() || date;
      if (options && options.event && options.event.date_time_start) {
        date = options.event.date_time_start.split('T')[0].split('-');
        date = new Date(date[0], parseInt(date[1], 10) - 1, date[2]);
      }
      $(":input.date").datepicker("option", {
        dateFormat: I18n.t("date.formats.date_on_js"),
        dayNames: I18n.t("date.day_names"),
        dayNamesMin: I18n.t("date.abbr_day_names"),
        monthNames: I18n.t("date.monthNames"),
        monthNamesShort: I18n.t("date.monthNames"),
        nextText: I18n.t("common.next"),
        prevText: I18n.t("common.prev"),
        yearRange: (date.getFullYear() - 5) + ":" + (date.getFullYear() + 5),
        showOtherMonths: true,
        selectOtherMonths: true
      });
      $("#eventsFromDate").datepicker("setDate", date);
      $("#date_start").datepicker("setDate", date_start);
      if ($("#date_start").attr("date")) {
        $("#date_start").val($("#date_start").attr("date"));
      }
      $("#date_end").datepicker("setDate", date_end);
      if ($("#date_end").attr("date")) {
        $("#date_end").val($("#date_end").attr("date"));
      }
      if ($("form").length > 0 && $("form:first").attr("id") !== "new_event" && $("form:first").attr("id").substring(0, 10) !== "edit_event") {
        if ($(".border_error:first").length > 0) {
          max_retries = 0;
          return setTimeout((function() {
            var results;
            $(".border_error:first").focus();
            results = [];
            while ($(".border_error:first:focus").length === 0 && max_retries < 10) {
              max_retries = max_retries + 1;
              results.push($(".border_error:first").focus());
            }
            return results;
          }), 500);
        }
      } else {
        if ($("form").length > 0 && $("form:eq(1)").find(".border_error:first").length > 0) {
          max_retries = 0;
          return setTimeout((function() {
            var results;
            $("form:eq(1)").find(".border_error:first").focus();
            results = [];
            while ($("form:eq(1)").find(".border_error:first:focus").length === 0 && max_retries < 10) {
              max_retries = max_retries + 1;
              results.push($("form:eq(1)").find(".border_error:first").focus());
            }
            return results;
          }), 500);
        }
      }
    },
    applyTimeMask: function() {
      $('.field_time').setMask({
        mask: '99:99',
        autoTab: false
      });
      return $('.field_time').blur(function() {
        var time;
        time = $(this).attr("value");
        switch (time.length) {
          case 0:
            return $(this).attr("value", "00:00");
          case 1:
            return $(this).attr("value", "0" + time + ":00");
          case 2:
            return $(this).attr("value", time + ":00");
          case 4:
            return $(this).attr("value", time + "0");
        }
      });
    },
    setFocus: function() {
      return setTimeout((function() {
        var max_retries, ok, results;
        ok = true;
        max_retries = 0;
        results = [];
        while (ok && max_retries < 10) {
          max_retries = max_retries + 1;
          if ($("form:first").attr("id") !== "new_event" && $("form:first").attr("id").substring(0, 10) !== "edit_event") {
            if ($("form:first").find(".field_with_errors:eq(1)").length === 0 && $("form:first").find(".border_error:first").length === 0) {
              $("form:first").children("div:eq(1)").children("input:first").focus();
              if ($("form:first").children("div:eq(1)").children("input:first:focus").length > 0) {
                results.push(ok = false);
              } else {
                results.push(void 0);
              }
            } else {
              results.push(ok = false);
            }
          } else {
            if ($("form:eq(1)").find(".field_with_errors:eq(1)").length === 0 && $("form:eq(1)").find(".border_error:first").length === 0) {
              $("form:eq(1)").children("div:eq(1)").children("input:first").focus();
              if ($("form:eq(1)").children("div:eq(1)").children("input:first:focus").length > 0) {
                results.push(ok = false);
              } else {
                results.push(void 0);
              }
            } else {
              results.push(ok = false);
            }
          }
        }
        return results;
      }), 500);
    },
    loadEvents: function(options) {
      var indicator, t;
      $("#event-details").hide();
      $("#ajax-loader").hide();
      (t = TwygoEventManagement).defaultHeader();
      t.clearTable();
      indicator = !(options != null ? options.hideLoadingIndicator : void 0);
      if (indicator) {
        this.showLoadingIndicator();
      }
      return this.requestEvents(function(events) {
        var event, j, len, no_information;
        if (events.length > 0) {
          $("#event-header.content-header").show();
          t.table().show();
          t.table().parent().find("#no-information").hide();
          for (j = 0, len = events.length; j < len; j++) {
            event = events[j];
            t.table().append(t.eventRow(event));
          }
          if (options && options.event) {
            $('#row' + String(options.event.id)).children('td:first').click();
            $('html, body').animate({
              scrollTop: $("#row" + String(options.event.id)).offset().top - 90
            }, 500);
          }
          $('.pendency-warning').tipsy({
            gravity: 'w'
          });
        } else {
          no_information = t.table().parent().find("#no-information");
          if (no_information.className === "first") {
            $("#event-header.content-header").hide();
          }
          t.table().hide();
          no_information.show();
        }
        return TwygoEventManagement.hideLoadingIndicator();
      });
    },
    requestEvents: function(success) {
      var fromDate, orderby, situation, title, toDate;
      if (window.$loadingEvents) {
        return;
      }
      window.$loadingEvents = true;
      fromDate = $("#eventsFromDate").val();
      toDate = $("#eventsToDate").val();
      title = $("#eventsTitle").val();
      situation = $("#eventsSituations").val();
      orderby = $("#eventsOrderBy").val();
      return $.ajax({
        url: "/o/" + TwygoApplication.currentOrganizationId + "/adm_events.json",
        data: {
          from_date: fromDate,
          to_date: toDate,
          kind: TwygoEventManagement.kind,
          title: title,
          situation: situation,
          orderby: orderby
        },
        success: success,
        complete: function() {
          return window.$loadingEvents = false;
        }
      });
    },
    showLoadingIndicator: function() {
      return this.loadingIndicator().show();
    },
    hideLoadingIndicator: function() {
      return this.loadingIndicator().hide();
    },
    loadingIndicator: function() {
      return $(".loading-org");
    },
    showDetailsLoadingIndicator: function() {
      if ($("#event-details").is(":visible")) {
        $("#ajax-loader").children("img:first").css("left", "-27px");
        $("#ajax-loader").children("img:first").css("top", "17px");
      } else {
        $("#ajax-loader").children("img:first").css("left", "-27px");
        $("#ajax-loader").children("img:first").css("top", "17px");
      }
      return $("#ajax-loader").fadeIn("fast");
    },
    hideDetailsLoadingIndicator: function() {
      return $("#ajax-loader").fadeOut("fast");
    },
    untilDateLabel: function(event) {
      if (event.date_start && event.date_end) {
        return I18n.t("views.from_until", {
          from: event.date_start,
          until: event.date_end
        });
      } else if (event.date_start) {
        return event.date_start;
      } else if (event.date_end) {
        return I18n.t("views.until", {
          until: event.date_end
        });
      } else {
        return I18n.t("views.no_date");
      }
    },
    eventRow: function(event) {
      var $row, create, custom_url_name_sanitized, del, edit, event_json, row, text, visible;
      text = event.name.replace(/&(?!\w+([;\s]|$))/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;");
      custom_url_name_sanitized = event.name.replace(/\//g, '-');
      edit = I18n.t("common.edit");
      del = I18n.t("common.delete");
      event_json = JSON.stringify({
        id: event.id,
        name: event.name
      });
      if (TwygoEventManagement.kind === 0) {
        row = "<tr id=\"row" + event.id + "\" mobile=\"" + event.mobile + "\" class=\"event-row\">\n  <td align=\"center\" style=\"z-index: 1\" class=\"linkv open-details\">\n    <button class=\"div-event-cell div-table-arrow-down btn btn-default\">\n      <i class=\"icon-chevron-down-1\"></i>\n    </button>\n  </td>\n  <td align=\"left\" class=\"event-name\">\n    <a href=\"/e/" + event.custom_url_name + "\" class=\"common-link\" target=\"blank\">\n      <span class=\"ellipsis\">" + text + "<i class=\"icon-external-link\"></i></span>\n    </a>\n  </td>\n  <td align=\"center\" style=\"z-index: 1\">\n    <div class=\"div-event-cell text-green\">" + event.confirmed_count + "</div>\n  </td>\n  <td align=\"center\" style=\"z-index: 1\">\n    <div class=\"div-event-cell text-green\">" + event.pending_count + "</div>\n  </td>\n  <td align=\"center\" style=\"z-index: 1\">\n    <div class=\"div-event-cell div-event-cell__date\">" + (TwygoEventManagement.untilDateLabel(event)) + "</div>\n  </td>\n  <td align=\"center\" style=\"z-index: 1\">";
        if (!event.is_partner) {
          row += "<div class=\"actions\">\n  <a href=\"#\" class=\"event-edit\" onclick=\"TwygoEventManagement.loadEventForm(" + event.id + ")\" title=\"" + edit + "\">\n    <i class=\"icon-pencil\"></i>\n    <small>" + edit + "</small>\n  </a>\n  <a href=\"#\" class=\"event-remove\" onclick=\"TwygoEventManagement.destroy(" + event.id + ")\" title=\"" + del + "\">\n    <i class=\"icon-times\"></i>\n    <small>" + del + "</small>\n  </a>\n</div>";
        }
        row += "  </td>\n</tr>\n<tr id=\"hidden" + event.id + "\" class=\"hidden-row\">\n  <td></td>\n  <td class=\"td-event-details\" colspan=5><div style=\"display:none\"></div></td>\n</tr>";
        $row = $(row);
        $row.attr("name", event.name);
        $row.find(".event-name").attr("title", event.name);
        return $row;
      } else if (TwygoEventManagement.kind === 1) {
        visible = event.situation === 1 ? I18n.t("javascripts.yes") : I18n.t("javascripts.no");
        create = I18n.t("common.create_event");
        row = $("<tr id=\"row" + event.id + "\" class=\"event-row\">\n  <td align=\"center\" style=\"z-index: 1\" class=\"linkv open-details\">\n    <button class=\"div-event-cell div-table-arrow-down btn btn-default\">\n      <i class=\"icon-chevron-down-1\"></i>\n    </button>\n  </td>\n  <td align=\"left\" class=\"event-name\">\n    <a href=\"/e/" + event.id + "-" + (event.custom_url_name !== '' && event.custom_url_name !== null ? event.custom_url_name : custom_url_name_sanitized) + "\" class=\"common-link\" target=\"blank\">\n      <span class=\"ellipsis\">" + text + "<i class=\"icon-external-link\"></i></span>\n    </a>\n  </td>\n  <td align=\"center\" style=\"z-index: 1\">\n    <div class=\"div-event-cell div-event-cell__date\">" + visible + "</div>\n  </td>\n  <td align=\"center\" class=\"list-link\" style=\"z-index: 1\" width=\"200px;\">\n    <div class=\"actions\">\n      <a href=\"#\" class=\"event-edit\" onclick=\"TwygoEventManagement.loadEventForm(" + event.id + ")\" title=\"" + edit + "\">\n        <i class=\"icon-pencil\"></i>\n        <small>" + edit + "</small>\n      </a>\n      <a href=\"#\" class=\"event-remove\" onclick=\"TwygoEventManagement.destroy(" + event.id + ")\" title=\"" + del + "\">\n        <i class=\"icon-times\"></i>\n        <small>" + del + "</small>\n      </a>\n      " + (visible === I18n.t("javascripts.yes") ? '<a href="#" class="model-add" onclick="TwygoEventManagement.applyModel(' + ("" + event.id) + ')" title="' + ("" + create) + '"><i class="icon-clipboard"></i><small>' + ("" + create) + '</small></a>' : '') + "\n    </div>\n  </td>\n</tr>\n<tr id=\"hidden" + event.id + "\" class=\"hidden-row\">\n  <td></td>\n  <td class=\"td-event-details\" colspan=3><div style=\"display:none\"></div></td>\n</tr>");
        row.attr("name", event.name);
        row.find(".event-name").attr("title", event.name);
        return row;
      } else if (TwygoEventManagement.kind === 2) {
        row = $("<tr class=\"event-row\" id=\"" + event.id + "\">\n  <td align=\"left\" class=\"event-name\"><div class=\"div-event-cell\"><div class=\"ellipsis\">" + text + "</div></div></td>\n  <td align=\"center\" style=\"z-index: 1\">\n    <div class=\"div-event-cell\">\n      <button class=\"btn btn-primary ghost inline\" onClick=\"TwygoEventManagement.loadContentPage($(this))\">" + (I18n.t('views.event_management.activity')) + "</button>\n    </div>\n  </td>\n  <td align=\"center\" style=\"z-index: 1\" class=\"list-link\">\n    <div class=\"actions\">\n      <a href=\"#\" class=\"event-edit\" onclick=\"TwygoEventManagement.loadEventForm(" + event.id + ")\" title=\"" + edit + "\">\n      </a>\n      <a href=\"#\" class=\"event-remove\" onclick=\"TwygoEventManagement.destroy(" + event.id + ")\" title=\"" + del + "\">\n      </a>\n    </div>\n  </td>\n</tr>");
        row.attr("name", event.name);
        row.find(".event-name").attr("title", event.name);
        return row;
      }
    },
    showHiddenLine: function(id) {
      var openRowId;
      if ($('#hidden' + String(id)).children('td:eq(1)').children('div:first').css("display") === "none") {
        $('#row' + String(id)).children('td:first').children('button').removeClass("div-table-arrow-down");
        openRowId = $('.div-table-arrow-up').parent('td').parent('tr').attr("id");
        if (openRowId !== void 0) {
          openRowId = openRowId.substring(3);
          $('#hidden' + openRowId).children('td:eq(1)').children('div:first').fadeOut(100);
          $('#hidden' + openRowId).slideUp("fast");
          $('.div-table-arrow-up').addClass("div-table-arrow-down");
          $('.div-table-arrow-up').removeClass("div-table-arrow-up");
        }
        $('#row' + String(id)).children('td:first').children('button').addClass("div-table-arrow-up");
        $('#hidden' + String(id)).children('td:eq(1)').children('div:first').fadeIn(100);
        return $('#hidden' + String(id)).slideDown("fast");
      } else {
        $('#row' + String(id)).children('td:first').children('button').removeClass("div-table-arrow-up");
        $('#row' + String(id)).children('td:first').children('button').addClass("div-table-arrow-down");
        $('#hidden' + String(id)).children('td:eq(1)').children('div:first').fadeOut(100);
        return $('#hidden' + String(id)).slideUp("fast");
      }
    },
    clearTable: function() {
      $("#event-header").prepend($("#ajax-loader"), $("#event-details").hide());
      return TwygoEventManagement.table().find("tr:not(:has(th))").remove();
    },
    table: function() {
      if (TwygoEventManagement.kind === 0) {
        return $(".event-table-list");
      } else if (TwygoEventManagement.kind === 1) {
        return $(".models-portfolio-list");
      } else if (TwygoEventManagement.kind === 2) {
        return $(".library-table-list");
      } else {
        return $(".event-table-list");
      }
    },
    page: function() {
      if (TwygoEventManagement.kind === 0) {
        return $(".list #table-events-info");
      } else if (TwygoEventManagement.kind === 1) {
        return $(".list #table-models-info");
      } else if (TwygoEventManagement.kind === 2) {
        return $(".list #table-libraries-info");
      } else if (TwygoEventManagement.kind === 3) {
        return $(".list #table-events-info");
      }
    },
    editMiniOrg: function(element) {
      TwygoEventManagement.showDetailsLoadingIndicator();
      $("#manage-events").load("" + ($(element).attr('href')), function() {
        $(".save_and_new").hide();
        TwygoEventManagement.showEventObject(I18n.t("javascripts.partner_edit"));
        return TwygoEventManagement.setupDetailsForms();
      });
      return false;
    },
    removeMiniOrg: function(element) {
      var answer;
      answer = confirm(I18n.t("views.organizations.are_you_sure_destroy", {
        org_type: $(element).closest('.organization').attr('type')
      }));
      if (answer) {
        TwygoEventManagement.showDetailsLoadingIndicator();
        $.ajax({
          url: $(element).attr('href'),
          dataType: 'json',
          type: 'delete'
        });
        element = $(element).closest('.organization');
        element.fadeOut(50, function() {
          if ($(".organization[type=" + (element.attr('type')) + "]").length === 1) {
            $("[type=" + (element.attr('type')) + "]").fadeOut("fast");
          }
          return element.remove();
        });
        return false;
      } else {
        return false;
      }
    },
    bindSearchInputs: function() {
      return $("#organization_name").on("keyup", function() {
        if (!($.trim($(this).val()).length < 2 || $(this).is("[readonly]"))) {
          return TwygoEventManagement.triggerSearch();
        }
      });
    },
    bindPartnershipSearchInputs: function() {
      return $("#partnership_name").on("keyup", function() {
        if (!($.trim($(this).val()).length < 2)) {
          TwygoEventManagement.triggerPartnershipSearch();
        }
        return $('#partnership_id').val('');
      });
    },
    bindSpeakerSearchInputs: function() {
      return $("#speaker_name input, input#speaker_name").on("focusout", function(e) {
        var keycode, name;
        keycode = e.keyCode ? e.keyCode : e.which;
        name = $.trim($(this).val());
        if (event.type === 'input' && keycode !== 13) {
          return true;
        }
        if (name.length > 5) {
          return TwygoEventManagement.triggerSpeakerSearch();
        }
      });
    },
    bindEvents: function() {
      var shouldPreventEvent;
      $("#table-events-info").off().on("click", ".open-details", this.openDetails).on("click", "#add-event", function() {
        return TwygoEventManagement.newEvent();
      }).on("click", "#filter", function() {
        return TwygoEventManagement.loadEvents();
      });
      $(".modal-welcome-video").off().on("click", "#add-event", function() {
        TwygoEventManagement.newEvent();
        $('#inform_twygo_video_modal').addClass('hidden');
        return localStorage.setItem("new_modal_video" + TwygoApplication.currentUserId, new Date().getDate());
      });
      $("#table-models-info").off().on("click", ".open-details", this.openDetails).on("click", "#add-model", function() {
        return TwygoEventManagement.newEvent();
      });
      $("#table-libraries-info").on("click", "#add-library", function() {
        return TwygoEventManagement.newEvent();
      });
      $("#event-details").off().on("click", ".level-link", function() {
        $(this).toggleClass("expanded");
        return $(this).parent().find(">.level").toggle();
      }).on("mouseover", ".level.first", function() {
        return $(this).children(".edit-option").toggle();
      }).on("click", ".event-menu", this.loadForm).on("click", ".icon-share", function() {
        return TwygoEventManagement.showShareSoc(this);
      }).on("click", "#icon-app", function() {
        return TwygoEventManagement.updateMobile(this);
      }).on("click", "#recommend_event", function() {
        return TwygoRecommend.loadRecommendModal(this);
      }).on("click", ".share-email", function() {
        return TwygoEvent.recommendedMail(this);
      }).on("click", ".facebook-share", function() {
        var height, left, opts, top, url, width;
        width = 650;
        height = 400;
        left = ($(window).width() - width) / 2;
        top = ($(window).height() - height) / 2;
        url = this.href;
        opts = 'status=1' + ',width=' + width + ',height=' + height + ',top=' + top + ',left=' + left;
        window.open('http://www.facebook.com/sharer.php?u=' + encodeURI(url), 'Facebook', opts);
        return false;
      });
      shouldPreventEvent = ["a:not(.common-link)"];
      TwygoEventManagement.page().on("click", shouldPreventEvent.join(","), function(e) {
        return safePreventEvent(e);
      });
      return $('.menu-cell').click(function() {
        var btn, old;
        btn = $(this);
        if (btn.attr('page') !== void 0 && !btn.is('.selected')) {
          old = $('.menu-cell.selected');
          old.removeClass('selected');
          btn.addClass('selected');
          if (btn.attr('page') === "event-list") {
            TwygoEventManagement.cancelButton();
          } else if (btn.attr('page') === "professionals") {
            TwygoProfessionalManagement.defaultHeader();
            $('#professional-cancel').click();
          } else if (btn.attr('page') === "question_lists") {
            TwygoQuestionListManagement.defaultHeader();
            $("#question_lists-page a.back").click();
          } else if (btn.attr('page') === "question_lists") {
            TwygoGroupManagement.defaultHeader();
            $("#groups-page a.back").click();
          }
          return $("." + (old.attr('page'))).fadeOut('fast', function() {
            $(".page-header").text(btn.attr('title'));
            return $("." + (btn.attr('page'))).fadeIn('fast', function() {
              if (btn.attr('page') === "org-edit") {
                return $("#organization_name").focus();
              } else if (btn.attr('page') === "partners") {
                return $("#partner_name").focus();
              } else if (btn.attr('page') === "administrators-list") {
                return $("#userfind").focus();
              }
            });
          });
        } else if (btn.attr('page') !== void 0 && btn.is('.selected')) {
          if (btn.attr('page') === "event-list") {
            TwygoEventManagement.cancelButton();
            return TwygoEventManagement.loadEvents();
          } else if (btn.attr('page') === "org-edit") {
            CKEDITOR.instances['organization_description'].destroy();
            CKEDITOR.instances['organization_general_information'].destroy();
            $("#edit-area-admin").children("form:first")[0].reset();
            CKEDITOR.replace('organization_description');
            CKEDITOR.replace('organization_general_information');
            return setTimeout((function() {
              $("#organization_name").focus();
              return $("body").scrollTop(0);
            }), 50);
          } else if (btn.attr('page') === "partners") {
            $("#partner_name").attr("value", "");
            TwygoOrganization.closeOrgList();
            return $("#partner_name").focus();
          } else if (btn.attr('page') === "templates") {
            return $('#model-cancel').click();
          } else if (btn.attr('page') === "professionals") {
            $('#professional-cancel').click();
            return $('#professionals-profile-page .header li a:first:visible').click();
          } else if (btn.attr('page') === "plugins") {
            $(".plugins").children("div:first").children().remove();
            $(".miniColors").remove();
            return TwygoShortListEvents.initialize(TwygoApplication.object.id);
          }
        }
      });
    },
    eventsTab: function() {
      $(".div_submenu a").removeClass("tab_selected");
      $(".submenu_iten.events").addClass("tab_selected");
      TwygoEventManagement.kind = 0;
      TwygoEventManagement.loadEvents();
      $(".list #manage-events").hide();
      $(".list #table-models-info").hide();
      $(".list #table-libraries-info").hide();
      return $(".list #table-events-info").show();
    },
    portfolioItensTab: function() {
      $(".div_submenu a").removeClass("tab_selected");
      $(".submenu_iten.portfolio_itens").addClass("tab_selected");
      TwygoEventManagement.kind = 1;
      TwygoEventManagement.loadEvents();
      $(".list #manage-events").hide();
      $(".list #table-events-info").hide();
      $(".list #table-libraries-info").hide();
      return $(".list #table-models-info").show();
    },
    librariesTab: function() {
      $(".div_submenu a").removeClass("tab_selected");
      $(".submenu_iten.libraries").addClass("tab_selected");
      TwygoEventManagement.kind = 2;
      TwygoEventManagement.loadEvents();
      $(".list #manage-events").hide();
      $(".list #table-events-info").hide();
      $(".list #table-models-info").hide();
      return $(".list #table-libraries-info").show();
    },
    updateMobile: function(element) {
      return $.ajax({
        url: "/e/" + this.currentEventData.eventId + "/update_app",
        dataType: "json",
        type: 'GET',
        success: function() {
          return TwygoFlashMessage.setMessage("notice", I18n.t("javascripts.mobile_data_updated"));
        },
        error: function() {
          return TwygoFlashMessage.setMessage("notice", I18n.t('javascripts.event_does_not_have_mobile_app'));
        }
      });
    },
    showShareSoc: function(element) {
      return $("#shasoc").slideDown("fast", function() {
        var that;
        that = $(this);
        return $(document).bind("mouseup", function(e) {
          if ($(e.target).attr("id") !== that.attr("id")) {
            that.hide();
            return $(this).unbind("mouseup");
          }
        });
      });
    },
    changeHeader: function(edit, text) {
      if (edit) {
        if (TwygoEventManagement.kind === 0) {
          return $(".page-title__inner").text(I18n.t("javascripts.event_details"));
        } else if (TwygoEventManagement.kind === 1) {
          return $(".page-title__inner").text(I18n.t("javascripts.portfolio_details"));
        } else if (TwygoEventManagement.kind === 2) {
          return $(".page-title__inner").text(I18n.t("javascripts.library_details"));
        }
      } else {
        return $(".page-title__inner").text(text);
      }
    },
    defaultHeader: function() {
      $('#breadcrumb').text('');
      if (TwygoEventManagement.kind === 0) {
        return $(".page-header").text(I18n.t("javascripts.events"));
      } else if (TwygoEventManagement.kind === 1) {
        return $(".page-header").text(I18n.t("javascripts.portfolio_items"));
      } else if (TwygoEventManagement.kind === 2) {
        return $(".page-header").text(I18n.t("javascripts.libraries"));
      }
    },
    loadEventForm: function(eventId) {
      return this.editEvent(eventId, true);
    },
    loadEventStageForm: function(eventId) {
      return $("#manage-events").load("/e/" + eventId + "/event_stages/new", function() {
        TwygoEventManagement.changeHeader(true);
        return TwygoEventManagement.page().fadeOut("fast", function() {
          return $("#manage-events").fadeIn("fast", function() {
            return TwygoEventManagement.initializeEventObject(null, "event_stage");
          });
        });
      });
    },
    loadStageProgramForm: function(eventId) {
      return $("#manage-events").load("/e/" + eventId + "/stage_programs/new", function() {
        TwygoEventManagement.changeHeader(true);
        return TwygoEventManagement.page().fadeOut("fast", function() {
          return $("#manage-events").fadeIn("fast", function() {
            return TwygoEventManagement.initializeEventObject(null, "stage_program");
          });
        });
      });
    },
    loadPartnerForm: function(eventId, orgId, saveAndNew) {
      return $("#manage-events").load("/" + eventId + "/partner/" + orgId, function() {
        window.scrollTo(0, 0);
        TwygoEventManagement.changeHeader(true);
        if (saveAndNew) {
          $(".show_event_object").hide();
          $(".hidden_event_object").show();
          $("#manage-events").children().children(".detail_title").text(I18n.t('new_partner'));
          TwygoEventManagement.page().hide();
          $("#manage-events").show();
          TwygoEventManagement.initializeEventObject(null, "organization");
          TwygoEventManagement.setupDetailsForms();
          return TwygoEventManagement.bindPartnershipSearchInputs();
        } else {
          return TwygoEventManagement.page().fadeOut("fast", function() {
            return $("#manage-events").fadeIn("fast", function() {
              TwygoEventManagement.initializeEventObject(null, "organization");
              TwygoEventManagement.setupDetailsForms();
              TwygoEventManagement.bindPartnershipSearchInputs();
              TwygoEventManagement.moving_partner = false;
              $(".move_up").click(function() {
                return TwygoEventManagement.movePartnershipUp(this);
              });
              $(".move_down").click(function() {
                return TwygoEventManagement.movePartnershipDown(this);
              });
              $(".delete_mini_org").on('click', function(e) {
                TwygoEventManagement.removeMiniOrg(this);
                e.preventDefault();
              });
              return $(".edit_mini_org").click(function() {
                return TwygoEventManagement.editMiniOrg(this);
              });
            });
          });
        }
      });
    },
    loadSpeakerForm: function(eventId) {
      TwygoEventManagement.setEventData({
        eventId: eventId
      });
      return $("#manage-events").load("/e/" + eventId + "/new_speaker", function() {
        window.scrollTo(0, 0);
        TwygoEventManagement.changeHeader(true);
        return TwygoEventManagement.page().fadeOut("fast", function() {
          return $("#manage-events").fadeIn("fast");
        });
      });
    },
    loadParticipantsPage: function(eventId, tab) {
      var parameter;
      if (tab == null) {
        tab = void 0;
      }
      parameter = "";
      if (tab) {
        parameter = "?tab=" + tab;
      }
      return $("#manage-events").load("/e/" + eventId + "/participants" + parameter, function() {
        window.scrollTo(0, 0);
        TwygoEventManagement.changeHeader(true);
        return TwygoEventManagement.page().fadeOut("fast", function() {
          var confirmed_count, event_id, pending_count;
          $("#manage-events").fadeIn("fast");
          event_id = eventId;
          confirmed_count = $('a.tab_selector[list=confirmed]').data("count");
          pending_count = $('a.tab_selector[list=pending]').data("count");
          $("table.event-table-list tr#row" + event_id + " td:nth(2) div").text(confirmed_count);
          return $("table.event-table-list tr#row" + event_id + " td:nth(3) div").text(pending_count);
        });
      });
    },
    resetPagination: function() {
      return $('#manage-events').find('.selector-div .tab_selector').attr('paged', 1);
    },
    loadContentPage: function(eventId, name) {
      var contentBreadcrumb, linkOpen;
      if (name == null) {
        name = null;
      }
      TwygoEventManagement.setEventData({
        eventId: eventId,
        name: name
      });
      contentBreadcrumb = TwygoEventManagement.isNewLearningPathFeatureFlagEnabled ? I18n.t("javascripts.activities_breadcumb") : I18n.t("javascripts.event_details");
      if (typeof eventId === "object") {
        linkOpen = eventId;
        eventId = linkOpen.parents("tr:first").attr("id");
        name = linkOpen.parents("tr:first").attr("name");
        TwygoEventManagement.setEventData({
          eventId: eventId,
          linkOpen: linkOpen,
          name: name
        });
      }
      return $("#manage-events").load("/e/" + eventId + "/contents", function() {
        window.scrollTo(0, 0);
        TwygoEventManagement.changeHeader(false, contentBreadcrumb);
        TwygoEventManagement.page().fadeOut("fast");
        $("#manage-events").fadeIn("fast");
        return TwygoApplication.changeBreadcrumOnEvents(TwygoEventManagement.eventData().name);
      });
    },
    loadGroupsPage: function(eventId) {
      return $("#manage-events").load("/e/" + eventId + "/groups", function() {
        TwygoEventManagement.changeHeader(true);
        return TwygoEventManagement.page().fadeOut("fast", function() {
          return $("#manage-events").fadeIn("fast");
        });
      });
    },
    loadStudentsPage: function(eventId, data) {
      if (data == null) {
        data = {
          page: 1
        };
      }
      TwygoApplication.loader();
      return $("#manage-events").load("/e/" + eventId + "/students?" + (jQuery.param(data)), function() {
        window.scrollTo(0, 0);
        TwygoEventManagement.changeHeader(true);
        return TwygoEventManagement.page().fadeOut("fast", function() {
          return $("#manage-events").fadeIn("fast", function() {
            return TwygoApplication.loader();
          });
        });
      });
    },
    loadClassManagersPage: function(eventId) {
      return $("#manage-events").load("/e/" + eventId + "/class_managers", function() {
        window.scrollTo(0, 0);
        TwygoEventManagement.changeHeader(true);
        return TwygoEventManagement.page().fadeOut("fast", function() {
          return $("#manage-events").fadeIn("fast");
        });
      });
    },
    increasePageHeight: function() {
      var current_height;
      current_height = $("#new-master").height();
      return $("#new-master").height(current_height + 350);
    },
    decreasePageHeight: function() {
      var current_height;
      current_height = $("#new-master").height();
      return $("#new-master").height(current_height - 350);
    },
    newParticipant: function(eventId) {
      return $("#manage-events").load("/e/" + eventId + "/participants/new", function() {
        return $("#table-info").fadeOut("fast", function() {
          return $("#manage-events").fadeIn("fast");
        });
      });
    },
    editParticipant: function(eventId, participantId) {
      $('.participant_loading').show();
      return $("#manage-events").load("/e/" + eventId + "/participants/" + participantId + "/edit");
    },
    participantFinancials: function(eventId, participantId) {
      return $.ajax({
        url: "/e/" + eventId + "/participants/" + participantId + "/financials",
        type: 'GET',
        success: function(json) {
          var $financialDialog, element, errorToHuman, event_participant, installment_number, j, len, message, paid_value, payment, payment_method, payment_transaction, refund_code, row, status, statusToHuman, templateTable, thead, updated_at, user;
          if (!!json) {
            row = "";
            for (j = 0, len = json.length; j < len; j++) {
              element = json[j];
              payment = element.payment, user = element.user, event_participant = element.event_participant, refund_code = element.refund_code, payment_method = element.payment_method, installment_number = element.installment_number, paid_value = element.paid_value, payment_transaction = element.payment_transaction, message = element.message, status = element.status, updated_at = element.updated_at;
              errorToHuman = "---";
              if (payment && !!payment.error_code) {
                errorToHuman = I18n.t("erede_code_" + payment.error_code) || I18n.t('erede_payment_error_generic');
              }
              statusToHuman = (function() {
                switch (status) {
                  case 1:
                    return "payment.status.success";
                  case 2:
                    return "payment.status.failed";
                  case 3:
                    return "payment.status.reversed";
                  case 4:
                    return "payment.status.canceled";
                  case 5:
                    return "payment.status.verifying";
                  case 6:
                    return "payment.status.refund_solicitation";
                  case 7:
                    return "payment.status.refund_sent";
                  case 8:
                    return "payment.status.reversed";
                  case 9:
                    return "payment.status.refund_fail";
                  case 10:
                    return "payments.status.payment_overdue";
                  default:
                    return "payment.status.pending";
                }
              })();
              row += "<tr style='text-align: center; vertical-align: middle; border-width: 2px; border-style: solid'>" + "<td style='padding: 10px'> " + event_participant.first_name + " " + event_participant.last_name + " </td> " + "<td style='padding: 10px'> " + (user ? user.first_name + " " + user.last_name : "---") + " </td> " + "<td style='padding: 10px'> " + (paid_value ? paid_value : "---") + " </td> " + "<td style='padding: 10px'> " + (event_participant.coupon ? event_participant.coupon.code : "---") + " </td> " + "<td style='padding: 10px'> " + (event_participant.coupon ? event_participant.coupon.discount_type : "---") + " </td> " + "<td style='padding: 10px'> " + (installment_number ? installment_number : "---") + " </td> " + "<td style='padding: 10px'> " + (payment_method ? payment_method.toUpperCase() : "---") + " </td> " + "<td style='padding: 10px'> " + (payment_transaction ? payment_transaction : "---") + " </td> " + "<td style='padding: 10px'> " + (refund_code ? refund_code : "---") + " </td> " + "<td style='padding: 10px'> " + errorToHuman + " </td> " + "<td style='padding: 10px'> " + I18n.t(statusToHuman) + " </td>" + "<td style='padding: 10px'> " + (message ? message : "---") + " </td>" + "<td style='padding: 10px'> " + new Date(updated_at).toLocaleDateString() + ", " + new Date(updated_at).toLocaleTimeString() + " </td>" + "</tr>";
            }
            thead = "<thead><tr style='text-align: center; vertical-align: middle'>" + "<th style='padding: 10px'><strong style='font-weight: bold'>" + I18n.t('activerecord.attributes.professional.student') + "</strong></th>" + "<th style='padding: 10px'><strong style='font-weight: bold'>" + I18n.t('payment.made_by') + "</strong></th>" + "<th style='padding: 10px'><strong style='font-weight: bold'>" + I18n.t('activerecord.attributes.financial.paid_value') + "</strong></th>" + "<th style='padding: 10px'><strong style='font-weight: bold'>" + I18n.t('activerecord.attributes.coupon.code') + "</strong></th>" + "<th style='padding: 10px'><strong style='font-weight: bold'>" + I18n.t('activerecord.attributes.coupon.discount_type') + "</strong></th>" + "<th style='padding: 10px'><strong style='font-weight: bold'>" + I18n.t('activerecord.attributes.financial.installment_number') + "</strong></th>" + "<th style='padding: 10px'><strong style='font-weight: bold'> " + I18n.t('payment.method') + "</strong></th>" + "<th style='padding: 10px'><strong style='font-weight: bold'> " + I18n.t('activerecord.attributes.financial.payment_transaction') + " </strong></th>" + "<th style='padding: 10px'><strong style='font-weight: bold'> " + I18n.t('activerecord.attributes.financial.refund_code') + " </strong></th>" + "<th style='padding: 10px'><strong style='font-weight: bold'> " + I18n.t('activerecord.attributes.payment.error_code') + " </strong></th>" + "<th style='padding: 10px'><strong style='font-weight: bold'> " + I18n.t('activerecord.attributes.financial.status') + " </strong></th>" + "<th style='padding: 10px'><strong style='font-weight: bold'> " + I18n.t('activerecord.attributes.financial.message') + " </strong></th>" + "<th style='padding: 10px'><strong style='font-weight: bold'>" + I18n.t('activerecord.attributes.financial.date') + "</strong></th>" + "</tr></thead>";
            templateTable = "<div class='display: flex; justify-content: center' >" + "<table style='border-collapse: collapse; border-width: 2px; border-style: solid'>" + thead + "<tbody style='padding-top: 2em'>" + row + "</tbody></table></div>";
            $financialDialog = $("#financials_modal").clone();
            $financialDialog.html(templateTable);
            $financialDialog.removeClass("hidden");
            return $financialDialog.modal({
              minWidth: 1400,
              minHeight: 100,
              opacity: 50,
              position: [50],
              overlayClose: true
            });
          }
        }
      });
    },
    destroy: function(eventId) {
      var ModalRemoveCoupons, event_name, message_title;
      event_name = $("#row" + eventId).attr("name");
      if (TwygoEventManagement.kind === 0) {
        message_title = I18n.t("views.events.are_you_sure_destroy");
      } else if (TwygoEventManagement.kind === 1) {
        message_title = I18n.t("views.model.are_you_sure_destroy");
      } else if (TwygoEventManagement.kind === 2) {
        message_title = I18n.t("views.library.are_you_sure_destroy");
      }
      message_title += "\n\n";
      message_title += I18n.t("_action_warning");
      ModalRemoveCoupons = TwygoModalRemoveItem;
      ModalRemoveCoupons.initialize({
        id: 'modal-remove-events-index',
        sub_title: event_name,
        message_title: message_title,
        configuration: {
          url: "/e/" + eventId,
          dataType: "json",
          type: "delete",
          reload: false
        },
        callbacks: {
          success: function(response) {
            TwygoEventManagement.loadEvents();
            if (TwygoEventManagement.kind === 0) {
              return TwygoFlashMessage.setMessage("notice", I18n.t("destroy_success"));
            } else if (TwygoEventManagement.kind === 1) {
              return TwygoFlashMessage.setMessage("notice", I18n.t("model_destroy_success"));
            } else if (TwygoEventManagement.kind === 2) {
              return TwygoFlashMessage.setMessage("notice", I18n.t("library_destroy_success"));
            } else if (TwygoEventManagement.kind === 3) {
              return TwygoFlashMessage.setMessage("notice", I18n.t("learning_path_destroy_success"));
            }
          },
          error: function(response) {
            return TwygoFlashMessage.setMessage("error", I18n.t("destroy_fail"));
          }
        }
      });
      return ModalRemoveCoupons.open(eventId);
    },
    deleteEvent: function(eventId) {
      return $.ajax({
        url: "/e/" + eventId,
        dataType: "json",
        type: "delete",
        success: function(response) {
          TwygoEventManagement.loadEvents();
          if (TwygoEventManagement.kind === 0) {
            return TwygoFlashMessage.setMessage("notice", I18n.t("destroy_success"));
          } else if (TwygoEventManagement.kind === 1) {
            return TwygoFlashMessage.setMessage("notice", I18n.t("model_destroy_success"));
          } else if (TwygoEventManagement.kind === 2) {
            return TwygoFlashMessage.setMessage("notice", I18n.t("library_destroy_success"));
          }
        },
        error: function(response) {
          return TwygoFlashMessage.setMessage("error", I18n.t("destroy_fail"));
        }
      });
    },
    applyModel: function(modelId) {
      $("#table-info").hide();
      TwygoEventManagement.currentEventData = null;
      TwygoEventManagement.eventsTab();
      return $("#manage-events").load("/o/" + TwygoApplication.currentOrganizationId + "/events/new?model=" + modelId, function() {
        return $("#table-events-info").fadeOut("fast", function() {
          $("#manage-events").fadeIn("fast");
          return TwygoEventManagement.bindEventForm();
        });
      });
    },
    bindEventForm: function() {
      t.common.datepicker(":input.date");
      t.common.timeMask(".field_time");
      this.changeBanner();
      this.bindCustomUrlField();
      return $("#manage-events").find("form").off("ajax:complete").on("ajax:complete", function(e, responseObj) {
        var _new_reponse, response;
        response = responseObj.responseText.replace("<textarea data-type=\"text/html\" data-status=\"200\" data-statusText=\"OK\">", '');
        response = response.replace("<textarea data-type=\"text/javascript\" data-status=\"200\" data-statusText=\"OK\">", '');
        _new_reponse = responseObj.responseText.replace('<script type=\"text/javascript\">try{window.parent.document;}catch(err){document.domain=document.domain;}</script>', '');
        _new_reponse = _new_reponse.replace('<textarea data-type=\"text/javascript\" data-status=\"200\" data-statusText=\"OK\">', '');
        if (response.trim() === "ok" || _new_reponse.trim() === 'ok') {
          return TwygoEventManagement.responseMessageBind(TwygoEventManagement.kind);
        } else {
          $("#manage-events").html(response);
          return TwygoEventManagement.bindEventForm();
        }
      });
    },
    responseMessageBind: function(event_kind) {
      var successMessage;
      successMessage = TwygoEventManagement.isNewLearningPathFeatureFlagEnabled ? I18n.t("views.events.success_save_message") : I18n.t("event_save_success");
      if (event_kind === 0) {
        TwygoFlashMessage.setMessage("notice", successMessage);
      } else if (event_kind === 1) {
        TwygoFlashMessage.setMessage("notice", I18n.t("model_save_success"));
      } else if (event_kind === 2) {
        TwygoFlashMessage.setMessage("notice", I18n.t("library_save_success"));
      } else if (event_kind === 3) {
        TwygoFlashMessage.setMessage("notice", I18n.t("views.events.success_save_message"));
      }
      TwygoEventManagement.loadEvents();
      return TwygoEventManagement.cancelButton();
    },
    newEvent: function(event_kind) {
      var newEventBreadcrumb, t;
      localStorage.setItem('element_top', 0);
      TwygoApplication.loader();
      if (event_kind !== void 0) {
        TwygoEventManagement.kind = event_kind;
      }
      newEventBreadcrumb = TwygoEventManagement.isNewLearningPathFeatureFlagEnabled ? I18n.t("javascripts.new_content") : I18n.t("javascripts.new_event");
      return $("#manage-events").load(("/o/" + TwygoApplication.currentOrganizationId + "/events/new?kind=") + (t = TwygoEventManagement).kind, function() {
        TwygoEventManagement.changeHeader(false, t.kind === 0 || t.kind === 3 ? newEventBreadcrumb : t.kind === 1 ? I18n.t("javascripts.new_portfolio_item") : I18n.t("javascripts.new_library"));
        return TwygoEventManagement.page().fadeOut("fast", function() {
          TwygoEventManagement.currentEventData = null;
          return $("#manage-events").fadeIn("fast", function() {
            TwygoApplication.loader("hide");
            return TwygoEventManagement.bindEventForm();
          });
        });
      });
    },
    editEvent: function(eventId, _history) {
      if (_history == null) {
        _history = false;
      }
      if (_history) {
        TwygoEventManagement.defautURL = TwygoUtility.removeParam('object_id', window.location.href);
        TwygoHistory.setURL('edit', eventId, 'edit-event', TwygoEventManagement.defautURL + "&object_id=" + eventId);
      }
      TwygoApplication.loader();
      return $("#manage-events").load("/e/" + eventId + "/edit", function() {
        window.scrollTo(0, 0);
        if (TwygoEventManagement.kind === 0) {
          TwygoEventManagement.changeHeader(false, I18n.t("javascripts.event_details"));
        } else if (TwygoEventManagement.kind === 1) {
          TwygoEventManagement.changeHeader(false, I18n.t("javascripts.portfolio_details"));
        } else if (TwygoEventManagement.kind === 2) {
          TwygoEventManagement.changeHeader(false, I18n.t("javascripts.library_details"));
        }
        TwygoEventManagement.page().fadeOut("fast");
        $("#manage-events").fadeIn("fast", function() {
          TwygoApplication.loader("hide");
          TwygoEventManagement.bindEventForm();
          return $("body").animate({
            scrollTop: 0
          }, "slow");
        });
        return $('#organization-area').removeClass('ajax-loading');
      });
    },
    bindObjectActions: function() {
      return $(".event-table-list .edit, .event-table-list .delete, .event-stage-list .edit, .event-stage-list .delete, .stage-table-list .edit, .stage-table-list .delete").click(function(e) {
        var element, id, res;
        safePreventEvent(e);
        element = this;
        id = $(this).attr("href").substring(1);
        res = $(this).attr("data-resource");
        if ($(this).attr("class") === "edit event-edit") {
          return $('#manage-events').fadeOut("fast", function() {
            return $("#manage-events").load("/" + res + "/" + id + "/edit", function() {
              $('#manage-events').fadeIn("fast");
              TwygoEventManagement.setupDetailsForms();
              TwygoEventManagement.bindDateInputs();
              return TwygoEventManagement.applyTimeMask();
            });
          });
        } else {
          if (!confirm(I18n.t("confirm_delete_" + res))) {
            return;
          }
          return $.ajax({
            type: "delete",
            url: "/" + res + "/" + id,
            success: function() {
              return $(element).parent().parent().fadeOut("fast");
            }
          });
        }
      });
    },
    showEventObject: function(title) {
      var currentTitle;
      currentTitle = $("#manage-events").children().children(".detail_title").text();
      TwygoEventManagement.cancelButtonOverride = function() {
        TwygoEventManagement.cancelButtonOverride = void 0;
        TwygoApplication.loader();
        return $(".hidden_event_object").fadeOut("fast", function() {
          $(".show_event_object").fadeIn("fast");
          $("#manage-events").children().children(".detail_title").text(currentTitle);
          return TwygoApplication.loader();
        });
      };
      TwygoApplication.loader();
      return $(".show_event_object").fadeOut("fast", function() {
        $(".hidden_event_object").fadeIn("fast");
        $("#manage-events").children().children(".detail_title").text(title);
        return TwygoApplication.loader();
      });
    },
    populateDetails: function() {
      var eventId, kind, linkOpen;
      linkOpen = this.currentEventData.linkOpen;
      eventId = this.currentEventData.eventId;
      kind = this.currentEventData.kind;
      $(".table-marker").removeClass("table-marker");
      linkOpen.addClass("table-marker");
      TwygoEventManagement.showDetailsLoadingIndicator();
      return $("#ajax-result").load("/o/" + TwygoApplication.currentOrganizationId + "/load_details?event_id=" + eventId, function() {
        $("#ajax-loader").fadeOut("fast", function() {
          if (!$("#event-details").is(":visible")) {
            return $("#event-details").fadeIn("fast");
          }
        });
        $("#event-stage-link").parent("div:first").on("click", function() {
          TwygoEventManagement.loadEventStageForm(eventId);
          return TwygoApplication.changeBreadcrumOnEvents(TwygoEventManagement.eventData().name);
        });
        $("#stage-program-link").parent("div:first").on("click", function() {
          TwygoApplication.changeBreadcrumOnEvents(TwygoEventManagement.eventData().name);
          return TwygoEventManagement.loadStageProgramForm(eventId);
        });
        $("#partner-link").parent("div:first").on("click", function() {
          TwygoApplication.changeBreadcrumOnEvents(TwygoEventManagement.eventData().name);
          return TwygoEventManagement.loadPartnerForm(eventId, TwygoApplication.object.id);
        });
        $("#speaker-link").parent("div:first").on("click", function() {
          TwygoApplication.changeBreadcrumOnEvents(TwygoEventManagement.eventData().name);
          return TwygoEventManagement.loadSpeakerForm(eventId);
        });
        $("#participants-link").parent("div:first").on("click", function() {
          TwygoEventManagement.eventID = eventId;
          TwygoApplication.changeBreadcrumOnEvents(TwygoEventManagement.eventData().name);
          return TwygoEventManagement.loadParticipantsPage(eventId);
        });
        $("#content-link").parent("div:first").on("click", function() {
          return TwygoEventManagement.loadContentPage(eventId, TwygoEventManagement.eventData().name);
        });
        $("#groups-link").parent("div:first").on("click", function() {
          TwygoApplication.changeBreadcrumOnEvents(TwygoEventManagement.eventData().name);
          return TwygoEventManagement.loadGroupsPage(eventId);
        });
        $("#students-link").parent("div:first").on("click", function() {
          TwygoApplication.changeBreadcrumOnEvents(TwygoEventManagement.eventData().name);
          return TwygoEventManagement.loadStudentsPage(eventId, {
            page: 1
          });
        });
        $("#icon-edit").on("click", function() {
          TwygoApplication.changeBreadcrumOnEvents(TwygoEventManagement.eventData().name);
          return TwygoEventManagement.loadEventForm(eventId);
        });
        $("#class-manager-link").parent("div:first").on("click", function() {
          TwygoApplication.changeBreadcrumOnEvents(TwygoEventManagement.eventData().name);
          return TwygoEventManagement.loadClassManagersPage(eventId);
        });
        $(".show-agenda").on("click", function() {
          return $(".show-on-agenda").click();
        });
        $(".show-on-agenda").attr("href", "/e/" + eventId + "/agenda").popupWindow({
          width: 750,
          height: 500,
          top: 200,
          left: 200,
          resizable: false,
          scrollbars: 1
        });
        $(".level:not(:has(.level))").find(".level-link").addClass("empty").off("click");
        return $("#icon-delete").off("click").on("click", function(e) {
          return showDeleteEventModal(eventId);
        });
      });
    },
    showDetailsDiv: function(link) {
      var border, calculatedSize, detailsDivHeight, listHeight, marginTop, maxSize, numRows, rowHeight, selectedRow, selectedRowTop, tr;
      numRows = $(".event-table-list tr").size();
      rowHeight = parseInt($(".event-table-list td:last").css("line-height"));
      if (numRows === 2) {
        rowHeight = rowHeight + 1;
      }
      tr = link.parents("tr:first");
      selectedRow = tr.index() + 1;
      listHeight = $(".event-table-list").height();
      detailsDivHeight = $("#event-details").height();
      selectedRowTop = selectedRow * rowHeight;
      border = numRows > 2 ? 2 : 1;
      calculatedSize = Math.max(selectedRowTop, 0) + border;
      maxSize = Math.max(listHeight - detailsDivHeight, border + rowHeight);
      marginTop = Math.min(maxSize, calculatedSize);
      return $("body").animate({
        scrollTop: tr.position().top - Math.ceil(Math.PI * Math.E + 1)
      });
    },
    formUrlFor: function(element) {
      var action, eventId;
      action = $(element).attr("id");
      eventId = TwygoEventManagement.currentEventData.eventId;
      switch (action) {
        case "event-stage-link":
          return "/e/" + eventId + "/event_stages/new";
        case "stage-program-link":
          return "/e/" + eventId + "/stage_programs/new";
        default:
          return $(element).attr("href");
      }
    },
    loadForm: function() {
      var url;
      TwygoEventManagement.showDetailsLoadingIndicator();
      url = TwygoEventManagement.formUrlFor(this);
      return TwygoEventManagement.callbackFor("loadForm", this)();
    },
    submitForm: function(e) {
      var form, linkOpen;
      TwygoEventManagement.showDetailsLoadingIndicator();
      safePreventEvent(e);
      form = $("#details-body form");
      linkOpen = TwygoEventManagement.currentEventData.linkOpen;
      return $.ajax({
        url: form.attr("action"),
        dataType: "json",
        data: form.serialize(),
        type: form.attr("method"),
        async: false,
        success: TwygoEventManagement.callbackFor("saveSuccess", linkOpen),
        error: TwygoEventManagement.callbackFor("saveError", linkOpen)
      });
    },
    callbackFor: function(type, element) {
      var action, ref;
      action = $(element).attr("id");
      return ((ref = TwygoEventManagement.callback[action]) != null ? ref[type] : void 0) || TwygoEventManagement.callback.$default[type];
    },
    eventData: function() {
      return this.currentEventData;
    },
    setEventData: function(currentEventData) {
      this.currentEventData = currentEventData;
      return true;
    },
    openDetails: function(browserEvent) {
      var _id, eventId, linkOpen, name;
      if (browserEvent) {
        safePreventEvent(browserEvent);
        linkOpen = $(this);
        _id = linkOpen.parents("tr:first").attr("id");
        localStorage.setItem('element_top', $('#' + _id).offset().top);
        eventId = linkOpen.parents("tr:first").attr("id").substring(3);
        name = linkOpen.parents("tr:first").attr("name");
        TwygoEventManagement.setEventData({
          eventId: eventId,
          linkOpen: linkOpen,
          name: name,
          kind: TwygoEventManagement.kind
        });
        TwygoEventManagement.showHiddenLine(eventId);
        $("#event-details").hide();
        $("#hidden" + eventId).children("td.td-event-details:first").children("div:first").append($("#ajax-loader"));
        $("#hidden" + eventId).children("td.td-event-details:first").children("div:first").append($("#event-details"));
      }
      return TwygoEventManagement.populateDetails();
    },
    callback: {
      $default: {
        addPartnerSuccess: function(response) {
          $("#org_id").val(response.partner_id);
          $("#organization_name").val(response.partner_name);
          if (!response.can_edit_org) {
            $("#organization_name").attr('readonly', 'readonly');
          }
          $("#organization_website").val(response.partner_website);
          if (!response.can_edit_org) {
            $("#organization_website").attr('readonly', 'readonly');
          }
          if (response.real_org) {
            $("#event_administrator").removeAttr("disabled");
          } else {
            $("#event_administrator").attr('checked', false).attr('disabled', 'disabled');
          }
          return TwygoEventManagement.hideDetailsLoadingIndicator();
        },
        saveSuccess: function(response) {
          TwygoEventManagement.hideDetailsLoadingIndicator();
          return TwygoEventManagement.openDetails();
        },
        saveError: function(response) {
          TwygoEventManagement.hideDetailsLoadingIndicator();
          $("#details-body").html(response.responseText);
          TwygoEventManagement.bindDateInputs();
          return $(document).ready(function() {
            return setTimeout((function() {
              return $(".field_with_errors:eq(1)").children().focus();
            }), 500);
          });
        },
        loadForm: function(response) {
          TwygoEventManagement.hideDetailsLoadingIndicator();
          $("#details-body").html(response);
          return setTimeout((function() {
            TwygoEventManagement.bindDateInputs();
            TwygoEventManagement.bindSearchInputs();
            TwygoEventManagement.bindPartnershipSearchInputs();
            TwygoEventManagement.setupDetailsForms();
            return TwygoEventManagement.applyTimeMask();
          }), 500);
        }
      }
    },
    saveNotRepeat: function() {
      return $(".save, .save_and_new").not('.not').click(function(e) {
        return $(this).off().on("click", function(e) {
          return safePreventEvent(e);
        });
      });
    },
    setupDetailsForms: function() {
      var form_id;
      TwygoEventManagement.hideDetailsLoadingIndicator();
      TwygoEventManagement.saveNotRepeat();
      form_id = $("#manage-events form").attr("id");
      return $("#manage-events form").not('#create_speaker_form').filter(":not([action='/event_stages'])").filter(":not([action='/stage_programs'])").ajaxpost({
        complete: function(response) {
          switch (response) {
            case "ok":
              return true;
            case "ok_new_partner":
              return TwygoEventManagement.loadPartnerForm(TwygoEventManagement.currentEventData.eventId, TwygoApplication.object.id, true);
            default:
              $("#manage-events").html(response);
              TwygoEventManagement.bindSearchInputs();
              TwygoEventManagement.bindPartnershipSearchInputs();
              TwygoEventManagement.focusFirst();
              TwygoEventManagement.setupDetailsForms();
              TwygoEventManagement.bindDateInputs();
              TwygoEventManagement.applyTimeMask();
              if (response.indexOf("error") === -1) {
                $("#organization_name").attr("value", "");
                $("#organization_website").attr("value", "");
              }
              return $(document).ready(function() {
                return setTimeout((function() {
                  return $(".field_with_errors:eq(1)").children().focus();
                }), 500);
              });
          }
        }
      });
    },
    focusFirst: function() {
      return $("#details-body .field_with_errors :input:first").focus();
    },
    triggerSearch: function() {
      clearTimeout(TwygoMyNetwork.searchTrigger);
      return TwygoMyNetwork.searchTrigger = setTimeout(TwygoEventManagement.search, 350);
    },
    triggerPartnershipSearch: function() {
      clearTimeout(TwygoEventManagement.searchPartershipTrigger);
      return TwygoEventManagement.searchPartershipTrigger = setTimeout(TwygoEventManagement.partnershipSearch, 350);
    },
    triggerSpeakerSearch: function() {
      clearTimeout(TwygoEventManagement.searchSpeakerTrigger);
      return TwygoEventManagement.searchSpeakerTrigger = setTimeout(TwygoEventManagement.speakerSearch, 350);
    },
    search: function() {
      var associationType, organizationName;
      organizationName = $.trim($("#organization_name").val());
      associationType = $('#association_type').val();
      TwygoEventManagement.showDetailsLoadingIndicator();
      return $.ajax({
        url: "/o/search",
        data: {
          name: organizationName,
          e: TwygoEventManagement.currentEventData.eventId,
          associationType: associationType
        },
        dataType: 'json',
        type: 'post',
        success: function(response) {
          TwygoEventManagement.hideDetailsLoadingIndicator();
          return TwygoEventManagement.newOrganizationLists(response);
        }
      });
    },
    partnershipSearch: function() {
      var partnershipName;
      partnershipName = $.trim($("#partnership_name").val());
      TwygoEventManagement.showDetailsLoadingIndicator();
      return $.ajax({
        url: "/e/" + TwygoEventManagement.currentEventData.eventId + "/partnership_search",
        data: {
          name: partnershipName
        },
        dataType: 'json',
        type: 'get',
        success: function(response) {
          TwygoEventManagement.hideDetailsLoadingIndicator();
          return TwygoEventManagement.partnershipLists(response);
        }
      });
    },
    addNewPartners: function(event_id) {
      var org_ids, uncheked_org_ids;
      org_ids = [];
      uncheked_org_ids = [];
      $('.organization_partner_item').each(function(i, e) {
        if ($(this).is(":checked")) {
          org_ids.push($(this).val());
        }
        if (!$(this).is(":checked")) {
          return uncheked_org_ids.push($(this).val());
        }
      });
      return $.ajax({
        url: "/e/" + event_id + "/add_new_partner",
        data: {
          partners: org_ids,
          uncheked_partners: uncheked_org_ids
        },
        dataType: 'json',
        type: 'post',
        beforeSend: function() {
          return $('#partners-container').addClass('ajax-loading');
        },
        success: function(response) {
          return TwygoFlashMessage.setMessage(response.type, response.message);
        },
        error: function(error) {
          var response;
          response = error.responseJSON;
          return TwygoFlashMessage.setMessage("error", response.message);
        },
        complete: function() {
          return $('#partners-container').removeClass('ajax-loading');
        }
      });
    },
    speakerSearch: function() {
      var addToEvent, data, speakerName;
      speakerName = $.trim($("#speaker_name input, input#speaker_name, #user_first_name").val());
      addToEvent = $("#speaker_name input, input#speaker_name").is('.addToEvent');
      if (addToEvent) {
        $('#search-speark').closest('.autocomplet--content').addClass('searching');
        data = {
          q: speakerName,
          event_id: "" + TwygoEventManagement.currentEventData.eventId
        };
      } else {
        data = {
          q: speakerName,
          stage_program_id: "" + TwygoEventManagement.stageProgramId
        };
      }
      TwygoEventManagement.showDetailsLoadingIndicator();
      return $.ajax({
        url: "/users/search",
        data: data,
        dataType: 'json',
        type: 'GET',
        success: function(response) {
          TwygoEventManagement.hideDetailsLoadingIndicator();
          return TwygoEventManagement.speakerLists(response, addToEvent);
        },
        complete: function() {
          return $('#search-speark').closest('.autocomplet--content').removeClass('searching');
        }
      });
    },
    organizationLists: function(response) {
      var addFunction, j, len, ref, result;
      if (response.results.length === 0) {
        $(".organizationList").hide();
      } else {
        $(".organizationList").show();
      }
      $(".organizationList").html("<ul>");
      if (response.status !== "3") {
        addFunction = 'TwygoEventManagement.addSponsorOrExpositor(this);$(this).removeAttr("onclick");';
      } else {
        addFunction = 'TwygoEventManagement.addEventPartner(this);$(this).removeAttr("onclick");';
      }
      ref = response.results;
      for (j = 0, len = ref.length; j < len; j++) {
        result = ref[j];
        $(".organizationList ul").append("<li> <div class='orgLogo' style='background-image: url(" + (TwygoEventManagement.logo_src(result)) + ")'></div> <div class='orgName'>" + (result.name.truncate(30)) + "</div> <div class='fadeOrg'></div> <div class='addOrg'> <a id='" + result.id + "' class='btn btn-add ghost inline' href='#' onClick='" + addFunction + "'>" + (I18n.t('views.associate')) + "</a> </div> </li>");
        $("#" + result.id).data("result", result);
        $(".organizationList").show();
      }
      if (response.status !== "3") {
        return $(".organizationList ul").append("<li class='otherOrg' onClick='TwygoEventManagement.closeOrgList(this)'>" + (I18n.t('views.other_organization')) + "</li>");
      } else {
        return $(".organizationList ul").append("<li class='otherOrg btn-cancel' onClick='TwygoEventManagement.closePartnerList(this)'>" + (I18n.t('views.cancel')) + "</li>");
      }
    },
    newOrganizationLists: function(response) {
      var addFunction, j, len, ref, result;
      if (response.results.length === 0) {
        $(".organizationList").hide();
      } else {
        $(".organizationList").show();
      }
      $(".organizationList").html("<ul>");
      addFunction = 'TwygoEventManagement.addPartner(this);$(this).removeAttr("onclick");';
      ref = response.results;
      for (j = 0, len = ref.length; j < len; j++) {
        result = ref[j];
        $(".organizationList ul").append("<li> <img src='" + (TwygoEventManagement.logo_src(result)) + "' height='30'></img> <div class='orgName'>" + (result.name.truncate(30)) + "</div> <div class='fadeOrg'></div> <div class='addOrg'> <a id='" + result.id + "' class='btn btn-add ghost inline' href='#' onClick='" + addFunction + "'>" + (I18n.t('views.associate')) + "</a> </div> </li>");
        $("#" + result.id).data("result", result);
        $(".organizationList").show();
      }
      return $(".organizationList ul").append("<li class='otherOrg btn-cancel' onClick='TwygoEventManagement.closeOrgList(this)'>" + (I18n.t('views.other_organization')) + "</li>");
    },
    partnershipLists: function(response) {
      var addFunction, j, len, ref, result;
      if (response.results.length === 0) {
        $(".partnershipList").hide();
      } else {
        $(".partnershipList").show();
      }
      $(".partnershipList").html("<ul>");
      addFunction = 'TwygoEventManagement.setPartnership(this);$(this).removeAttr("onclick");';
      ref = response.results;
      for (j = 0, len = ref.length; j < len; j++) {
        result = ref[j];
        $(".partnershipList ul").append("<li> <div class='orgName'>" + (result.name.truncate(30)) + "</div> <div class='fadeOrg'></div> <div class='addOrg'> <a id='" + result.id + "' class='btn btn-add ghost inline' partnership_id='" + result.id + "' partnership_name='" + result.name + "' href='#' onClick='" + addFunction + "'>" + (I18n.t('views.associate')) + "</a> </div> </li>");
        $("#" + result.id).data("result", result);
        $(".partnershipList").show();
      }
      $(".partnershipList ul").append("<li class='otherOrg' onClick='TwygoEventManagement.newPartnership(this)'>Nova Parceria</li>");
      return $(".partnershipList ul").append("<li class='otherOrg btn-cancel' onClick='TwygoEventManagement.closeParnershipList(this)'>" + (I18n.t('views.cancel')) + "</li>");
    },
    speakerLists: function(response, addToEvent) {
      var employ, emply_from, from, j, len, maxScroll, ref, scrollHeight, user;
      scrollHeight = $('#details-body').scrollTop();
      if ($("a[list=tab_add_speaker]").length < 1) {
        maxScroll = 77;
      } else {
        maxScroll = 109;
      }
      if (scrollHeight > -1 && scrollHeight < maxScroll) {
        $(".speakerList:first").css("margin-top", "-" + scrollHeight + "px");
      }
      $('#details-body').scroll(function() {
        scrollHeight = $('#details-body').scrollTop();
        if (scrollHeight > -1 && scrollHeight < maxScroll) {
          return $(".speakerList:first").css("margin-top", "-" + scrollHeight + "px");
        } else {
          return $(".speakerList:first").css("margin-top", "-" + (maxScroll - 1) + "px");
        }
      });
      if (response.users.length === 0) {
        $(".speakerList").hide();
        $(".msg_error").text("" + (I18n.t('contact_search_no_results', {
          query: $('#speaker_name').children('input').val()
        })));
      } else {
        $(".speakerList").show();
        $(".msg_error").text("");
      }
      $(".speakerList").html("<ul>");
      ref = response.users;
      for (j = 0, len = ref.length; j < len; j++) {
        user = ref[j];
        employ = jQuery.map([user.enterprise, user.role], function(n, i) {
          if (n !== "") {
            return n;
          }
        }).join(", ");
        from = jQuery.map([user.city, user.state], function(n, i) {
          if (n !== "") {
            return n;
          }
        }).join("/");
        emply_from = jQuery.map([employ, from], function(n, i) {
          if (n !== "") {
            return n;
          }
        }).join(" - ");
        $(".speakerList ul").append("<li> <img src='" + user.small_avatar_url + "' height='30'></img> <div class='speakerDetails'> <div class='speakerName'>" + ((user.first_name + " " + user.last_name).truncate(28)) + "</div> <br/> <div class='speakerEmail'>" + (emply_from.truncate(28)) + "</div> </div> <div class='fadeSpeaker'></div> <div class='addSpeaker'> <a id='" + user.id + "' class='btn btn-add ghost inline' href='#'>" + (I18n.t('views.associate')) + "</a> </div> </li>");
        $("#" + user.id).data("user", user);
        $("#" + user.id).click(function() {
          user = $(this).data("user");
          if (addToEvent) {
            TwygoEventManagement.addSpeakerToEvent(this, user.id, user.profile_url, user.first_name || '', user.last_name || '', user.small_avatar_url || '', user.enterprise || '', user.role || '', user.city || '', user.state || '');
            return $(this).off('click');
          } else {
            TwygoEventManagement.addSpeaker(this, user.id, user.profile_url, user.first_name || '', user.last_name || '', user.small_avatar_url || '', user.enterprise || '', user.role || '', user.city || '', user.state || '');
            return $(this).off('click');
          }
        });
        $(".speakerList").show();
      }
      return $(".speakerList ul").append("<li class='otherSpeaker btn-cancel' onClick='TwygoEventManagement.closeSpeakerList(this)'>" + (I18n.t('views.close')) + "</li>");
    },
    setPartnership: function(element) {
      $('#partnership_id').val($(element).attr('partnership_id'));
      $('#partnership_name').val($(element).attr('partnership_name'));
      return $(".partnershipList").hide();
    },
    newPartnership: function(element) {
      return $(".partnershipList").hide();
    },
    closeParnershipList: function(element) {
      $(".partnershipList").hide();
      $("#partnership_name").focus();
      return $("#partnership_name").val("");
    },
    closeSpeakerList: function(element) {
      $(".speakerList").hide();
      return $("#speaker_name").val("");
    },
    openNewSpeaker: function() {
      $("#add_speaker_container").fadeOut("fast");
      $("#manage-events").children().children(".detail_title").text("" + (I18n.t('views.event_management.new_speaker')));
      return $("#new_speaker_container").fadeIn("fast", function() {
        return $("#user_first_name").focus();
      });
    },
    short_resume_limit: function() {
      $("#user_short_resume").on("keyup", function() {
        var limit, text_length;
        limit = $(this).attr('data-limit');
        text_length = $(this).val().length;
        if (text_length > limit) {
          $("#" + ($(this).attr('data-limit-input'))).addClass('overLimit');
        } else {
          $("#" + ($(this).attr('data-limit-input'))).removeClass('overLimit');
        }
        return $("#" + ($(this).attr('data-limit-input'))).html(limit - text_length);
      });
      return $("#user_short_resume").keyup();
    },
    movePartnershipUp: function(element) {
      var partnership;
      if (!TwygoEventManagement.moving_partner) {
        if ($(element).is($('.move_up:first'))) {
          return TwygoFlashMessage.setMessage("alert", I18n.t("javascripts.first_partnership"));
        } else {
          TwygoEventManagement.moving_partner = true;
        }
        partnership = $(element).parents(".partnership");
        return TwygoEventManagement.permuteParnershipPosition(partnership.attr('partnership_id'), partnership.prev().attr('partnership_id'), function() {
          return partnership.insertBefore(partnership.prev());
        });
      }
    },
    movePartnershipDown: function(element) {
      var partnership;
      if (!TwygoEventManagement.moving_partner) {
        if ($(element).is($('.move_down:last'))) {
          return TwygoFlashMessage.setMessage("alert", I18n.t("javascripts.last_partnership"));
        } else {
          TwygoEventManagement.moving_partner = true;
        }
        partnership = $(element).parents(".partnership");
        return TwygoEventManagement.permuteParnershipPosition(partnership.attr('partnership_id'), partnership.next().attr('partnership_id'), function() {
          return partnership.insertAfter(partnership.next());
        });
      }
    },
    permuteParnershipPosition: function(partnership1, partnership2, callback) {
      return $.ajax({
        url: "/e/" + TwygoEventManagement.currentEventData.eventId + "/permute_partnership/" + partnership1 + "/" + partnership2,
        dataType: 'json',
        type: 'put',
        success: function(response) {
          callback();
          return TwygoEventManagement.moving_partner = false;
        }
      });
    },
    addPartner: function(element) {
      var object;
      safePreventEvent(element);
      TwygoEventManagement.showDetailsLoadingIndicator();
      object = $(element).data().result;
      return $.ajax({
        url: "/e/" + TwygoEventManagement.currentEventData.eventId + "/add_partner",
        data: {
          partner_id: "" + object.id
        },
        dataType: 'json',
        type: 'put',
        success: function(response) {
          TwygoEventManagement.callback.$default.addPartnerSuccess(response);
          return TwygoEventManagement.closeOrgList(element);
        }
      });
    },
    addSpeakerToEvent: function(element, user_id, url, first_name, last_name, avatar, enterprise, role, city, state) {
      safePreventEvent(element);
      return $.ajax({
        url: "/e/" + TwygoEventManagement.currentEventData.eventId + "/add_speaker",
        data: {
          speaker_id: "" + user_id
        },
        dataType: 'json',
        type: 'put',
        success: function(response) {
          var employ, emply_from, from, new_speaker;
          $("#speaker_name input").val("");
          if ($("#speakers tbody").size() > 0) {
            $("#speakers tbody tr").removeClass('new');
            employ = jQuery.map([enterprise, role], function(n, i) {
              if (n !== "") {
                return n;
              }
            }).join(", ");
            from = jQuery.map([city, state], function(n, i) {
              if (n !== "") {
                return n;
              }
            }).join("/");
            emply_from = jQuery.map([employ, from], function(n, i) {
              if (n !== "") {
                return n;
              }
            }).join(" - ").truncate(47).toString();
            new_speaker = $("<tr>").addClass("speaker").addClass('speaker new').append($("<td>").append($("<a>").addClass("speaker_photo-content").attr("href", "#").attr("onclick", "window.location.href='/p/" + user_id + "'").append("<div class='speaker_photo'><img src='" + avatar + "'/></div>")).append($("<div>").addClass("speaker_details-content").append($("<div>").addClass("user_name ellipsis").append($("<a>").addClass("speaker_name").attr("href", "#").attr("onclick", "window.location.href='/p/" + user_id + "'").html(first_name + " " + last_name))).append($("<div>").addClass("user_employ ellipsis").html(emply_from)))).append($("<td>").attr("align", "center").attr("valign", "top").attr("width", "20").append($("<a>").addClass("name").attr("href", "").attr("onclick", "TwygoEventManagement.excludeSpeakerFromEvent(this," + user_id + ");return false;").html($("<img>").attr("src", TwygoApplication.assets["delete"]))));
            new_speaker.hide();
            $("#speakers tbody").prepend(new_speaker);
            $("#speakers #details-title").fadeIn("fast");
            new_speaker.fadeIn("fast", function() {
              return new_speaker.css("display", "table-row");
            });
          }
          return TwygoEventManagement.closeSpeakerList(element);
        }
      });
    },
    addSpeaker: function(element, user_id, url, first_name, last_name, avatar, enterprise, role, city, state) {
      safePreventEvent(element);
      return $.ajax({
        url: "/e/" + TwygoEventManagement.currentEventData.eventId + "/add_speaker",
        data: {
          speaker_id: "" + user_id,
          stage_program_id: "" + TwygoEventManagement.stageProgramId
        },
        dataType: 'json',
        type: 'put',
        success: function(response) {
          var employ, emply_from, from;
          $("#speaker_name input").val("");
          employ = jQuery.map([enterprise, role], function(n, i) {
            if (n !== "") {
              return n;
            }
          }).join(", ");
          from = jQuery.map([city, state], function(n, i) {
            if (n !== "") {
              return n;
            }
          }).join("/");
          emply_from = jQuery.map([employ, from], function(n, i) {
            if (n !== "") {
              return n;
            }
          }).join(" - ");
          $(".list_speakers").append("<li class='desc_speakers speaker_" + user_id + "' style='display:none'> <a href='#' onclick='window.location.href=\"" + url + "\"'> <div class='friend_photo'> <img src='" + avatar + "' width='30px' height='30px'/> </div> </a> <div class='friend_name'> <a href='#' onclick='window.location.href=\"" + url + "\"' class='friend_name'> " + ((first_name + " " + last_name).truncate(35)) + " </a> </div> <div class='friend_employ'> " + (emply_from.truncate(35)) + " </div> <div class='relation_buttons'> <a class='friend_relation gray_btn' href='#' onclick='TwygoEventManagement.excludeSpeaker(this," + user_id + ");return false;'> " + (I18n.t('views.events.destroy')) + " </a> </div> </li>");
          $(".desc_speakers:last").fadeIn("fast");
          return TwygoEventManagement.closeSpeakerList(element);
        }
      });
    },
    excludeSpeaker: function(element, speaker_id) {
      var answer;
      safePreventEvent(element);
      answer = confirm(I18n.t("views.stage_programs.are_you_sure_destroy"));
      if (answer) {
        return $.ajax({
          url: " /e/" + TwygoEventManagement.currentEventData.eventId + "/stage_programs/" + TwygoEventManagement.stageProgramId + "/exclude_speaker",
          type: "post",
          data: {
            speaker_id: "" + speaker_id,
            stage_program_id: "" + TwygoEventManagement.stageProgramId
          },
          dataType: "json",
          success: function(response) {
            return $("li.speaker_" + speaker_id).fadeOut("fast");
          }
        });
      }
    },
    excludeSpeakerFromEvent: function(element, speaker_id) {
      var answer;
      safePreventEvent(element);
      answer = confirm(I18n.t("views.event_speaker.are_you_sure_destroy"));
      if (answer) {
        return $.ajax({
          url: " /e/" + TwygoEventManagement.currentEventData.eventId + "/remove_speaker/" + speaker_id,
          type: "post",
          dataType: "json",
          error: function(response) {
            return TwygoFlashMessage.setMessage("error", response.responseJSON.message);
          },
          success: function(response) {
            return $(element).parents('tr.speaker').fadeOut("fast", function() {
              $(element).parents('tr.speaker').remove();
              if ($('tr.speaker').length === 0) {
                return $("#speakers #details-title").fadeOut("fast");
              }
            });
          }
        });
      }
    },
    setStageProgramId: function(id) {
      return TwygoEventManagement.stageProgramId = id;
    },
    closeOrgList: function(element) {
      safePreventEvent(element);
      $(".organizationList").hide();
      return $("#organization_name").focus();
    },
    closePartnerList: function(element) {
      safePreventEvent(element);
      $(".organizationList").hide();
      $("#organization_name").focus();
      return $("#organization_name").val("");
    },
    cancelButton: function() {
      var _top, options_course_list, text;
      _top = localStorage.getItem("element_top");
      if (_top !== void 0) {
        $("html, body").stop().animate({
          scrollTop: _top - 100
        }, 500, 'swing');
      }
      if (TwygoEventManagement.defautURL !== null && TwygoEventManagement.defautURL !== window.location.href) {
        TwygoHistory.setReplaceURL('edit', _top, 'list-course', "" + TwygoEventManagement.defautURL);
      } else {
        TwygoEventManagement.defautURL = TwygoUtility.removeParam('object_id', window.location.href);
        TwygoHistory.setReplaceURL('edit', _top, 'list-course', "" + TwygoEventManagement.defautURL);
      }
      text = $("#menu a[link='" + TwygoEventManagement.getPathNameWithSearch() + "']").html() !== void 0 ? $("#menu a[link='" + TwygoEventManagement.getPathNameWithSearch() + "']").html() : $("#menu a[href='" + TwygoEventManagement.getPathNameWithSearch() + "']").html();
      TwygoMenu.setHeader(text);
      if (TwygoEventManagement.cancelButtonOverride) {
        return TwygoEventManagement.cancelButtonOverride();
      }
      TwygoApplication.loader();
      TwygoEventManagement.defaultHeader();
      options_course_list = TwygoEventManagement.courseComponentParams;
      if (TwygoEventManagement.kind === 0 || TwygoEventManagement.kind === 3) {
        $("#manage-events").fadeOut("fast");
        return window.renderCourseList(options_course_list);
      } else {
        return $("#manage-events").fadeOut("fast", function() {
          return TwygoEventManagement.page().fadeIn("fast", function() {
            return TwygoApplication.loader();
          });
        });
      }
    },
    getPathNameWithSearch: function() {
      return location.pathname + location.search.replace("&profile=admin", '');
    },
    addEventPartner: function(element) {
      var object;
      safePreventEvent(element);
      TwygoEventManagement.showDetailsLoadingIndicator();
      object = $(element).data().result;
      return $.ajax({
        url: "/add_event_partner",
        data: {
          id: "" + object.id,
          event_id: "" + TwygoEventManagement.currentEventData.eventId,
          association_type: "" + ($('#association_type').val())
        },
        dataType: 'json',
        type: 'put',
        success: function(response) {
          return TwygoEventManagement.callback.$default.saveSuccess(response);
        }
      });
    },
    addSponsorOrExpositor: function(element) {
      var object;
      safePreventEvent(element);
      TwygoEventManagement.showDetailsLoadingIndicator();
      object = $(element).data().result;
      return $.ajax({
        url: "/add_sponsor_or_expositor",
        data: {
          id: "" + object.id,
          event_id: "" + TwygoEventManagement.currentEventData.eventId,
          association_type: "" + ($('#association_type').val())
        },
        dataType: 'json',
        type: 'put',
        success: function(response) {
          return TwygoEventManagement.callback.$default.saveSuccess(response);
        }
      });
    },
    logo_src: function(org) {
      if (org.logo_url) {
        return org.logo_url;
      } else if (org.logo) {
        return "/system/organizations/logos/" + org.id + "/list_thumb/" + org.logo;
      } else {
        return "/images/nopic-event_list_thumb.jpg";
      }
    },
    changeBanner: function() {
      return $("#change-event-banner").on("click", function() {
        return $(".event-banner").fadeOut("fast", function() {
          return $("#event_banner").fadeIn("fast");
        });
      });
    },
    buildDefaultCertificateDescription: function($this) {
      $("#certificate_description").prop("readonly", $this.is(":checked"));
      if ($this.is(":checked")) {
        return $("#certificate_description").val(TwygoEventManagement.organization_desc);
      } else {
        return $("#certificate_description").val(TwygoEventManagement.event_desc);
      }
    },
    bind_tabs: function() {
      var oid;
      if (TwygoEventManagement.changeToSpeaker === true) {
        TwygoEventManagement.changeToSpeaker = false;
        if ($("#error_explanation").length === 0) {
          $(".show_event_object").hide();
          $(".hidden_event_object").show();
          $(".tab").hide().removeClass("opened");
          $(".tab_selector").removeClass("selected");
          $("#manage-events .tab_selector:last").addClass("selected");
          oid = $("#manage-events .tab_selector:last").attr("list");
          $("#" + oid).fadeIn("slow");
        }
      }
      return $("#manage-events .tab_selector").click(function() {
        if ($(this).attr("class").indexOf("selected") < 0 && !TwygoEventManagement.changeToSpeaker) {
          if ($(this).attr("list") === "tab_add_speaker") {
            TwygoEventManagement.changeToSpeaker = true;
            $(".actions #edit").attr("value", "edit");
            if ($("#new_stage_program").length > 0) {
              return $("#new_stage_program").submit();
            } else {
              return $(".edit_stage_program").submit();
            }
          } else {
            $(".tab").hide().removeClass("opened");
            $(".tab_selector").removeClass("selected");
            $(this).addClass("selected");
            oid = $(this).attr("list");
            return $("#" + oid).fadeIn("slow");
          }
        } else {
          return false;
        }
      });
    },
    confirmPendingParticipants: function() {
      var ids;
      ids = $.map($("#pending .participant_check input[type='checkbox']:checked, #canceled .participant_check input[type='checkbox']:checked"), function(e) {
        return e.value;
      });
      if (ids.length > 0) {
        $('.participant_loading').show();
        return $.ajax({
          url: "/e/" + TwygoEventManagement.currentEventData.eventId + "/participants/confirm",
          data: {
            "ids": ids
          },
          dataType: 'script',
          type: 'put',
          beforeSend: function() {
            return $('#manage-events').addClass('ajax-loading');
          },
          complete: function() {
            return $('#manage-events').removeClass('ajax-loading');
          }
        });
      } else {
        return TwygoFlashMessage.setMessage('error', I18n.t("controllers.event_participant.none_selected"));
      }
    },
    cancelParticipants: function(status) {
      var ids;
      ids = $.map($("#" + status + " .participant_check input[type='checkbox']:checked"), function(e) {
        return e.value;
      });
      if (ids.length > 0) {
        return $('.cancel_message').attr('status', status).modal({
          overlayClose: true,
          position: [50]
        });
      } else {
        return TwygoFlashMessage.setMessage('error', I18n.t('controllers.event_participant.none_selected'));
      }
    },
    doCancelParticipants: function() {
      var ids, msg, status;
      msg = $.trim($('.cancel_message .message textarea').val());
      $('.cancel_message .loading').show();
      status = $('#simplemodal-data.cancel_message').attr('status');
      ids = $.map($("#" + status + " .participant_check input[type='checkbox']:checked"), function(e) {
        return e.value;
      });
      if (ids.length > 0) {
        return $.ajax({
          url: "/e/" + TwygoEventManagement.currentEventData.eventId + "/participants/cancel",
          data: {
            "ids": ids,
            "message": msg
          },
          dataType: 'script',
          type: 'put',
          beforeSend: function() {
            return $('#manage-events').addClass('ajax-loading');
          },
          complete: function() {
            return $('#manage-events').removeClass('ajax-loading');
          }
        });
      } else {
        return TwygoFlashMessage.setMessage('error', I18n.t("controllers.event_participant.none_selected"));
      }
    },
    classManagerAssociation: function(class_manager_id, event_id, class_manager_status) {
      var manager;
      manager = $(".table--new.default tr.class-manager-row#" + class_manager_id).find(".class-manager-assignment");
      if (isNaN(class_manager_id) || isNaN(event_id)) {
        return false;
      }
      if (manager.hasClass("not_assigned")) {
        return $.ajax({
          url: "/e/" + event_id + "/class_manager_assign",
          dataType: 'json',
          data: {
            class_manager_id: class_manager_id
          },
          type: 'post',
          beforeSend: function() {
            return $('#manage-events').addClass('ajax-loading');
          },
          success: function(response) {
            manager.removeClass("not_assigned");
            manager.addClass("assigned");
            $('#manage-events').removeClass('ajax-loading');
            return TwygoFlashMessage.setMessage("success", response.success_message);
          },
          error: function(response) {
            var error_message, ref, ref1;
            error_message = (response != null ? (ref = response.responseJSON) != null ? ref.message : void 0 : void 0) || (response != null ? (ref1 = response.responseJSON) != null ? ref1.error_message : void 0 : void 0);
            $('#manage-events').removeClass('ajax-loading');
            return TwygoFlashMessage.setMessage("error", error_message);
          }
        });
      } else {
        if (confirm(I18n.t("views.class_managers.confirm_class_manager_unassign"))) {
          return $.ajax({
            url: "/e/" + event_id + "/class_manager_unassign",
            dataType: 'json',
            data: {
              class_manager_id: class_manager_id
            },
            type: 'post',
            beforeSend: function() {
              return $('#manage-events').addClass('ajax-loading');
            },
            success: function(response) {
              manager.removeClass("assigned");
              manager.addClass("not_assigned");
              $('#manage-events').removeClass('ajax-loading');
              return TwygoFlashMessage.setMessage("success", response.success_message);
            },
            error: function(response) {
              var error_message, ref, ref1;
              error_message = (response != null ? (ref = response.responseJSON) != null ? ref.message : void 0 : void 0) || (response != null ? (ref1 = response.responseJSON) != null ? ref1.error_message : void 0 : void 0);
              $('#manage-events').removeClass('ajax-loading');
              return TwygoFlashMessage.setMessage("error", error_message);
            }
          });
        }
      }
    },
    removeClassManagerPermission: function(class_manager_id, class_manager_full_name, event_id) {
      var ModalRemoveManager;
      ModalRemoveManager = TwygoModalRemoveItem;
      ModalRemoveManager.initialize({
        id: 'modal-remove-manager',
        sub_title: class_manager_full_name,
        message_title: I18n.t("views.class_managers.confirm_remove_class_manager"),
        configuration: {
          url: "/e/" + event_id + "/verify_class_manager_assignment",
          data: {
            class_manager_id: class_manager_id
          },
          dataType: 'json',
          type: 'get',
          reload: false
        },
        callbacks: {
          beforeSend: function() {
            return $('#manage-events').addClass('ajax-loading');
          },
          success: function(response) {
            $(".table--new.default tr.class-manager-row#" + class_manager_id).remove();
            $('#manage-events').removeClass('ajax-loading');
            return TwygoFlashMessage.setMessage("success", response.success_message);
          },
          error: function(response) {
            var error_message, ref, ref1;
            error_message = (response != null ? (ref = response.responseJSON) != null ? ref.message : void 0 : void 0) || (response != null ? (ref1 = response.responseJSON) != null ? ref1.error_message : void 0 : void 0);
            $('#manage-events').removeClass('ajax-loading');
            return TwygoFlashMessage.setMessage("error", error_message);
          }
        }
      });
      return ModalRemoveManager.open(event_id);
    },
    showClassManagerModal: function(manager_id) {
      var $classManagerTransferModal;
      $classManagerTransferModal = $('#class-manager-transfer-modal');
      $classManagerTransferModal.attr('manager_id', manager_id);
      TwygoEventManagement.getClassManagersList(manager_id);
      return TwygoUtility.toggleModal($classManagerTransferModal);
    },
    closeClassManagerModal: function() {
      return $('#class-manager-transfer-modal').delay(500).fadeOut('fast');
    },
    getClassManagersList: function(manager_id) {
      return $.ajax({
        method: 'GET',
        url: 'get-class-managers',
        data: {
          manager_id: manager_id
        },
        success: function(result) {
          $('#select-managers').html('');
          return result.forEach(function(element) {
            return $('#select-managers').append($('<option>', {
              value: element.id,
              text: element.first_name + " " + element.last_name
            }));
          });
        }
      });
    },
    doPendingParticipants: function(status) {
      var ids;
      ids = $.map($("#" + status + " .participant_check input[type='checkbox']:checked"), function(e) {
        return e.value;
      });
      if (ids.length > 0) {
        return $.ajax({
          url: "/e/" + TwygoEventManagement.currentEventData.eventId + "/participants/pending",
          data: {
            "ids": ids
          },
          dataType: 'script',
          type: 'put',
          beforeSend: function() {
            return $('#manage-events').addClass('ajax-loading');
          },
          complete: function() {
            return $('#manage-events').removeClass('ajax-loading');
          }
        });
      } else {
        return TwygoFlashMessage.setMessage('error', I18n.t("controllers.event_participant.none_selected"));
      }
    },
    confirmParticipantPayment: function(status) {
      var ids;
      ids = $.map($("#" + status + " .participant_check input[type='checkbox']:checked"), function(e) {
        return e.value;
      });
      if (ids.length > 0) {
        return $('.confirm_payment_modal').attr('status', status).modal({
          overlayClose: true,
          position: [50]
        });
      } else {
        return TwygoFlashMessage.setMessage('error', I18n.t("controllers.event_participant.none_selected"));
      }
    },
    doConfirmParticipantPayment: function(status) {
      var ids, msg;
      msg = $.trim($('.confirm_payment_modal .message textarea').val());
      $('.confirm_payment_modal .loading').show();
      status = $('.confirm_payment_modal').attr('status');
      ids = $.map($("#" + status + " .participant_check input[type='checkbox']:checked"), function(e) {
        return e.value;
      });
      if (ids.length > 0) {
        return $.ajax({
          url: "/e/" + TwygoEventManagement.currentEventData.eventId + "/participants/confirm_payment",
          data: {
            "ids": ids,
            "message": msg,
            "status": status
          },
          dataType: 'script',
          type: 'put',
          beforeSend: function() {
            return $('#manage-events').addClass('ajax-loading');
          },
          complete: function() {
            return $('#manage-events').removeClass('ajax-loading');
          }
        });
      } else {
        return TwygoFlashMessage.setMessage('error', I18n.t("controllers.event_participant.none_selected"));
      }
    },
    cancelParticipantPayment: function(status) {
      var ids;
      ids = $.map($("#" + status + " .participant_check input[type='checkbox']:checked"), function(e) {
        return e.value;
      });
      if (ids.length > 0) {
        return $('.cancel_payment_modal').attr('status', status).modal({
          overlayClose: true,
          position: [50]
        });
      } else {
        return TwygoFlashMessage.setMessage('error', I18n.t("controllers.event_participant.none_selected"));
      }
    },
    reverseParticipantPayment: function() {
      var ids;
      ids = $.map($(".participant_check input[type='checkbox']:checked"), function(e) {
        return e.value;
      });
      if (ids.length > 0) {
        return $('.reverse_payment_modal').attr('status', status).modal({
          overlayClose: true,
          position: [50]
        });
      } else {
        return TwygoFlashMessage.setMessage('error', I18n.t("controllers.event_participant.none_selected"));
      }
    },
    doCancelParticipantPayment: function(status) {
      var ids, msg;
      msg = $.trim($('.cancel_payment_modal .message textarea').val());
      $('.cancel_payment_modal .loading').show();
      status = $('.cancel_payment_modal').attr('status');
      ids = $.map($("#" + status + " .participant_check input[type='checkbox']:checked"), function(e) {
        return e.value;
      });
      if (ids.length > 0) {
        return $.ajax({
          url: "/e/" + TwygoEventManagement.currentEventData.eventId + "/participants/cancel_payment",
          data: {
            "ids": ids,
            "message": msg,
            "status": status
          },
          dataType: 'script',
          type: 'put',
          beforeSend: function() {
            return $('#manage-events').addClass('ajax-loading');
          },
          complete: function() {
            return $('#manage-events').removeClass('ajax-loading');
          }
        });
      } else {
        return TwygoFlashMessage.setMessage('error', I18n.t("controllers.event_participant.none_selected"));
      }
    },
    doReverseParticipantPayment: function(status) {
      var ids, message;
      message = $.trim($('.reverse_payment_modal .message textarea').val());
      $('.reverse_payment_modal .loading').show();
      status = $('.reverse_payment_modal').attr('status');
      ids = $.map($(".participant_check input[type='checkbox']:checked"), function(e) {
        return e.value;
      });
      if (ids.length > 0) {
        return $.ajax({
          url: "/e/" + TwygoEventManagement.currentEventData.eventId + "/participants/reverse_payment",
          data: {
            ids: ids,
            message: message,
            status: status
          },
          dataType: 'script',
          type: 'put',
          beforeSend: function() {
            return $('#manage-events').addClass('ajax-loading');
          },
          complete: function() {
            return $('#manage-events').removeClass('ajax-loading');
          }
        });
      } else {
        return TwygoFlashMessage.setMessage('error', I18n.t("controllers.event_participant.none_selected"));
      }
    },
    exportParticipants: function(status) {
      var status_param;
      status_param = {
        confirmed: [1],
        pending: [0, 2]
      }[$(".tab_selector.selected").attr("list")];
      return $.ajax({
        url: "/e/" + TwygoEventManagement.currentEventData.eventId + "/participants/export.csv?",
        type: "get",
        dataType: 'HTML',
        data: {
          offset: (new Date()).getTimezoneOffset(),
          status: status_param
        },
        beforeSend: function() {
          return $("#participants").addClass('ajax-loading');
        },
        success: function() {
          return TwygoFlashMessage.setMessage('notice', I18n.t('wait_report_generate'));
        },
        error: function() {
          return TwygoFlashMessage.setMessage("error", I18n.t("error_export_file"));
        },
        complete: function() {
          return $("#participants").removeClass('ajax-loading');
        }
      });
    },
    importParticipants: function() {
      return $("#import-upload").load("/e/" + TwygoEventManagement.currentEventData.eventId + "/participants/csv_imports?layout=false", function() {
        return $(this).twygomodal();
      });
    },
    printAttendanceSheet: function() {
      var href, ids;
      if ($(".tab_selector.selected").attr("list") === "pending") {
        TwygoFlashMessage.setMessage('notice', I18n.t('participant_list_print_fail'));
        return false;
      } else {
        ids = $.map($("#confirmed .participant_check input[type='checkbox']:checked"), function(e) {
          return e.value;
        });
        href = $('a.attendance_sheet').attr("href").split("?")[0];
        if (ids.length > 0) {
          href += "?" + $.param({
            ids: ids.join(",")
          });
        }
        return $('a.attendance_sheet').attr("href", href);
      }
    },
    bind_participants: function() {
      $('ul.participant_list').off("click.all_participants").on("click.all_participants", "input.all_participants", function() {
        var check, status;
        check = $(this).is(':checked');
        status = $(this).data("status");
        return $("#" + status + " input[type='checkbox']").prop("checked", check);
      });
      $('ul.participant_list .participant_check input[type="checkbox"]').off().click(function() {
        var check, status;
        status = TwygoEventManagement.currentStatus;
        check = $("#" + status + " .participant_check input[type='checkbox']:not(:checked)").length === 0;
        return $("#" + status + " .all_participants").prop("checked", check);
      });
      $('a.confirm_participant').off().click(function() {
        return TwygoEventManagement.confirmPendingParticipants();
      });
      $('#pending a.cancel_participant').off().click(function() {
        return TwygoEventManagement.cancelParticipants("pending");
      });
      $('#confirmed a.cancel_participant').off().click(function() {
        return TwygoEventManagement.cancelParticipants("confirmed");
      });
      $('#canceled a.pending_participant').off().click(function() {
        return TwygoEventManagement.doPendingParticipants("canceled");
      });
      $('#confirmed a.pending_participant').off().click(function() {
        return TwygoEventManagement.doPendingParticipants("confirmed");
      });
      $('a.export').off().click(function() {
        return TwygoEventManagement.exportParticipants();
      });
      $('a.import').off().click(function() {
        return TwygoEventManagement.importParticipants();
      });
      $('a.payment').off().click(function(e) {
        $("#menu_payment", $(this).siblings()).slideToggle("fast", function() {
          var that;
          if ($("#main").data("cucumber") !== "true" && $("#main").data("cucumber") !== true) {
            that = $(this);
            return $(document).bind("mouseup", function(e) {
              if ($(e.target).attr("id") !== that.attr("id")) {
                return $(this).unbind("mouseup");
              }
            });
          }
        });
      });
      $('a.confirm_payment').off().click(function() {
        return TwygoEventManagement.confirmParticipantPayment($(this).attr("status"));
      });
      $('a.cancel_payment').off().click(function() {
        return TwygoEventManagement.cancelParticipantPayment($(this).attr("status"));
      });
      $('a.revere_payment').off().click(function() {
        return TwygoEventManagement.reverseParticipantPayment();
      });
      $('a.attendance_sheet').off().click(function() {
        return TwygoEventManagement.printAttendanceSheet();
      });
      return $("#participants .tab_selector").click(function() {
        var oid;
        $("#participants .tab").hide().removeClass("opened");
        $("#participants .tab_selector").removeClass("selected");
        $(this).addClass("selected");
        TwygoEventManagement.currentStatus = $('#participants .tabs-header > .inner').find('a.selected')[0].getAttribute('list');
        oid = $(this).attr("list");
        return $("#" + oid).fadeIn("slow");
      });
    },
    bindParticipantSearchInputs: function() {
      $("#event_participant_cpf").on("keyup", function() {
        return TwygoEventManagement.triggerParticipantCPFSearch(this);
      });
      return $("#event_participant_email").on("keyup change", function() {
        return TwygoEventManagement.triggerParticipantSearch(this);
      });
    },
    triggerParticipantCPFSearch: function(e) {
      var cpf;
      clearTimeout(TwygoEventManagement.searchParticipantTriggerCPF);
      cpf = $.trim($(e).val());
      cpf = TwygoEventManagement.justNumberOfCPF(cpf);
      if (cpf.length === 11) {
        TwygoEventManagement.searchParticipantTriggerCPF = setTimeout(TwygoEventManagement.participantCPFSearch, 600);
      }
      if (cpf.length < 11) {
        return TwygoEventManagement.closeParticipantList();
      }
    },
    triggerParticipantSearch: function(e) {
      var email;
      clearTimeout(TwygoEventManagement.searchParticipantTrigger);
      email = $.trim($(e).val());
      if (email.length > 2 && email !== $(e).data("email")) {
        TwygoEventManagement.searchParticipantTrigger = setTimeout(TwygoEventManagement.participantSearch, 500);
      }
      if (email.length <= 2) {
        return TwygoEventManagement.closeParticipantList();
      }
    },
    participantCPFSearch: function(e) {
      var cpf;
      cpf = $.trim($("#event_participant_cpf").val());
      cpf = TwygoEventManagement.justNumberOfCPF(cpf);
      $('.in_use').hide();
      $('.in_use_additional_organization').hide();
      $('.loading').show();
      $("#event_participant_cpf").removeClass('input-error');
      return $.ajax({
        url: "/e/" + TwygoEventManagement.currentEventData.eventId + "/participants/search_user_by_cpf",
        data: {
          cpf: cpf
        },
        dataType: 'json',
        type: 'get',
        success: function(response) {
          $('.loading').not('#center').hide();
          if (response.exists) {
            return $('.in_use').show();
          } else if (response.exists_in_additional_organization) {
            return TwygoEventManagement.showAlreadyRegisteredInAdditionalOrganization(response.exists_in_additional_organization);
          } else {
            return TwygoEventManagement.participantList(response, 'cpf-list');
          }
        },
        error: function() {
          return $('.loading').hide();
        }
      });
    },
    participantSearch: function(e) {
      var email;
      email = $.trim($("#event_participant_email").val());
      $("#event_participant_email").data("email", email);
      $('.in_use').hide();
      $('.in_use_additional_organization').hide();
      $('.loading').show();
      $('#event_participant_email').removeClass('input-error');
      return $.ajax({
        url: "/e/" + TwygoEventManagement.currentEventData.eventId + "/participants/search_user",
        data: {
          "email": email
        },
        dataType: 'json',
        type: 'get',
        success: function(response) {
          $('.loading').not('#center').hide();
          if (response.exists) {
            $('.in_use').show();
            return $('#event_participant_email').addClass('input-error');
          } else if (response.exists_in_additional_organization) {
            return TwygoEventManagement.showAlreadyRegisteredInAdditionalOrganization(response.exists_in_additional_organization);
          } else {
            return TwygoEventManagement.participantList(response, 'email-list');
          }
        },
        error: function() {
          return $('.loading').hide();
        }
      });
    },
    showAlreadyRegisteredInAdditionalOrganization: function(organization_name) {
      $('.in_use_additional_organization').show();
      $('.in_use_additional_organization span').html(I18n.t('views.event_participant.already_registered_in_additional_organization', {
        organization_name: organization_name
      }));
      return $('#event_participant_email').addClass('input-error');
    },
    participantList: function(response, id) {
      var employ, emply_from, from, user;
      if (id == null) {
        id = null;
      }
      if (response.user) {
        $("#" + id + ".participantList > ul").html("");
        user = response.user;
        employ = jQuery.map([user.enterprise, user.role], function(n, i) {
          if (n !== "") {
            return n;
          }
        }).join(", ");
        from = jQuery.map([user.city, user.state], function(n, i) {
          if (n !== "") {
            return n;
          }
        }).join("/");
        emply_from = jQuery.map([employ, from], function(n, i) {
          if (n !== "") {
            return n;
          }
        }).join(" - ");
        $("#" + id + ".participantList ul").append("<li> <img src='" + user.avatar_url + "' height='30'></img> <div class='participantDetails'> <div class='participantName'>" + ((user.first_name + " " + user.last_name).truncate(28)) + "</div> <br/> <div class='participantEmail'>" + (emply_from.truncate(28)) + "</div> </div> <div class='fadeParticipant'></div> <div class='pickParticipant'> <a id='" + user.id + "' class='btn btn-add ghost inline' href='#' onClick='TwygoEventManagement.fillParticipantData(this)'>" + (I18n.t('views.associate')) + "</a> </div> </li>");
        $("#" + id + ".participantList ul .pickParticipant a#" + user.id).data("user", user);
        return $("#" + id + ".participantList").show();
      }
    },
    closeParticipantList: function() {
      return $(".participantList").hide();
    },
    fillParticipantData: function(e) {
      var user;
      user = $(e).data('user');
      $.map(user, function(v, k) {
        var el;
        if ($('#event_participant_' + k).length > 0) {
          el = $('#event_participant_' + k);
        } else {
          el = $('#professional_attributes_' + k);
        }
        return el.val(v);
      });
      return $(".participantList").hide();
    },
    participantError: function(messages) {
      var erros;
      $('.participant_error').addClass('form-line');
      $('.participant_error').html('<div id="error_explanation">');
      erros = $('#error_explanation');
      erros.html("");
      erros.append("<h2>" + I18n.t("activerecord.errors.template.header", {
        count: messages.length,
        model: 'participante'
      }) + "</h2>");
      erros.append("<ul>");
      return $.map(messages, function(v, k) {
        return erros.children("ul").append("<li>" + v + "</li>");
      });
    },
    bindSectionEvents: function() {
      $("ul#event-edit-custom-sections .event-custom-section-title").keyup(this.updateCustomSectionTitle);
      $("#event-edit-menu").on("click", ".event-page-sections-enable", this.updateCustomSectionEnabled);
      $("#event-edit-menu").on("click", ".event-page-sections-edit", this.editCustomSection);
      $("#event-edit-menu").on("click", ".event-page-sections-delete", this.deleteCustomSection);
      $("#event-edit-menu").on("click", ".icon-event-custom", this.showCustomSectionIconMenu);
      $(".event-edit-action-iconmenu").on("click", ".icon-event-custom", this.changeCustomSectionIcon);
      return $("#event-edit-custom-sections").sortable({
        stop: this.updateCustomSectionOrder,
        containment: "parent",
        handler: ".event-edit-menu-handler"
      });
    },
    updateCustomSectionTitle: function() {
      var $this, parent, sectionId;
      $this = $(this);
      parent = $this.closest(".event-edit-menu-custom");
      sectionId = parent.attr("section-id");
      return $(".event-content-custom-section[section-id='" + sectionId + "']").find(".event-content-subtitle").text($this.val());
    },
    updateCustomSectionEnabled: function() {
      var $this, parent, sectionId;
      $this = $(this);
      parent = $this.closest("li");
      sectionId = parent.attr("section-id");
      if ($this.prop("checked")) {
        parent.removeClass("section-disabled");
        if (sectionId !== void 0) {
          return $(".event-content-custom-section[section-id='" + sectionId + "']").removeClass("section-disabled");
        }
      } else {
        parent.addClass("section-disabled");
        if (sectionId !== void 0) {
          return $(".event-content-custom-section[section-id='" + sectionId + "']").addClass("section-disabled");
        }
      }
    },
    updateCustomSectionOrder: function() {
      return $("ul#event-edit-custom-sections li").map(function() {
        var ckfield, field, section, sectionId;
        sectionId = $(this).attr("section-id");
        section = $("#event-content-custom-sections .event-content-custom-section[section-id='" + sectionId + "']");
        field = section.find("textarea");
        if (field.length > 0) {
          ckfield = CKEDITOR.instances[field.attr("id")];
          ckfield.destroy(true);
        }
        $("#event-content-custom-sections").append(section);
        if (field.length > 0) {
          return TwygoRichText.initialize(["event_custom_sections_" + sectionId], {
            filebrowserImageBrowseUrl: TwygoOrganization.manageImages,
            toolbars: [
              {
                name: 'insert',
                items: ['Table']
              }, {
                name: 'links',
                items: ['Link', 'Unlink']
              }
            ]
          });
        }
      });
    },
    editCustomSection: function() {
      var $this, ckfield, field, parent, section, sectionId;
      $this = $(this);
      parent = $this.closest(".event-edit-menu-custom");
      sectionId = parent.attr("section-id");
      section = $(".event-content-custom-section[section-id='" + sectionId + "']");
      field = section.find("textarea");
      ckfield = CKEDITOR.instances[field.attr("id")];
      if (section.length > 0) {
        $(document).scrollTop(section.offset().top);
      }
      if (ckfield !== void 0) {
        return CKEDITOR.instances[field.attr("id")].focus();
      }
    },
    deleteCustomSection: function() {
      var $this, ckfield, field, parent, section, sectionId;
      $this = $(this);
      parent = $this.closest(".event-edit-menu-custom");
      if (parent.length > 0 && confirm(I18n.t("delete_session_confirm"))) {
        sectionId = parent.attr("section-id");
        section = $(".event-content-custom-section[section-id='" + sectionId + "']");
        field = section.find("textarea");
        if (field.length > 0) {
          ckfield = CKEDITOR.instances[field.attr("id")];
          CKEDITOR.remove(ckfield);
        }
        section.remove();
        return parent.remove();
      }
    },
    showCustomSectionIconMenu: function() {
      var $this, height, parent, ptop, sectionId, top;
      if ($(".event-edit-action-iconmenu").is(":visible")) {
        return;
      }
      $this = $(this);
      parent = $this.closest(".event-edit-menu-custom");
      sectionId = parent.attr("section-id");
      top = parent.offset().top;
      ptop = parent.offsetParent().offset().top;
      height = parent.height();
      $(".event-edit-action-iconmenu").css({
        top: top - ptop + height
      });
      $(".event-edit-action-iconmenu").data("section-id", sectionId);
      $(".event-edit-action-iconmenu").slideDown();
      return setTimeout(function() {
        return $(".event-edit-action-iconmenu").addClass("hideOnClickOut");
      }, 10);
    },
    changeCustomSectionIcon: function() {
      var $this, icon, iconField, menu, sectionId, sectionItem;
      $this = $(this);
      menu = $(".event-edit-action-iconmenu");
      sectionId = $(".event-edit-action-iconmenu").data("section-id");
      sectionItem = $(".event-edit-menu-custom[section-id='" + sectionId + "']");
      icon = sectionItem.find(".icon-event-custom");
      iconField = sectionItem.find(".event-custom-section-icon");
      icon.removeClass("icon-event-custom-" + (iconField.val())).addClass("icon-event-custom-" + ($this.attr("icon-value")));
      iconField.val($this.attr("icon-value"));
      return menu.removeClass("hideOnClickOut").hide();
    },
    defaultSectionIcon: {
      description: 'icon1',
      file: 'icon6',
      "default": 'icon1'
    },
    defaultSectionTitle: {
      description: 'Nova Descrição',
      file: 'Novo Arquivo',
      "default": 'Nova Seção'
    },
    newSection: function(type) {
      var icon, id, newSection, newSectionId, title;
      if (type == null) {
        type = 'description';
      }
      icon = this.defaultSectionIcon[type] || this.defaultSectionIcon["default"];
      title = this.defaultSectionTitle[type] || this.defaultSectionTitle["default"];
      newSection = $("ul.new-event-edit-menu-custom .new-custom-section").clone();
      newSectionId = "custom_" + ((new Date) / 1);
      while ($("li.event-edit-menu-custom[section-id='" + newSectionId + "']").length > 0) {
        id = newSectionId.split("_")[1];
        newSectionId = "custom_" + (parseInt(id) + 1);
      }
      newSection.removeClass("new-custom-section").attr("section-id", newSectionId).find(":input").prop({
        disabled: false
      });
      newSection.find(".icon-event-custom").addClass("icon-event-custom-" + icon);
      newSection.find(".event-custom-section-icon").attr("name", "event[custom_sections][" + newSectionId + "][icon]").val(icon);
      newSection.find(".event-custom-section-title").attr("name", "event[custom_sections][" + newSectionId + "][title]").keyup(this.updateCustomSectionTitle).val(title);
      newSection.find(".event-page-sections-enable").val(newSectionId);
      $("ul#event-edit-custom-sections").append(newSection);
      newSection = $("#new-event-content-custom-sections .new-custom-section").clone();
      if (!(type === 'description')) {
        newSection.find(".event-content-text").remove();
      }
      if (!(type === 'file')) {
        newSection.find(".event-content-file").remove();
      }
      newSection.removeClass("new-custom-section").attr("section-id", newSectionId).find(":input").prop({
        disabled: false
      });
      newSection.find(".event-content-subtitle").text(title);
      newSection.find(".event-custom-section-description").attr("name", "event[custom_sections][" + newSectionId + "][description]").attr("id", "event_custom_sections_" + newSectionId);
      newSection.find(".event-custom-section-type").attr("name", "event[custom_sections][" + newSectionId + "][type]").attr("id", "event_custom_sections_" + newSectionId + "_type");
      newSection.find(".event-custom-section-file-id").attr("name", "event[custom_sections][" + newSectionId + "][file_id]").attr("id", "event_custom_sections_" + newSectionId + "_file_id");
      newSection.find(".event-custom-section-file-name").attr("name", "event[custom_sections][" + newSectionId + "][file_name]").attr("id", "event_custom_sections_" + newSectionId + "_file_name");
      $("#event-content-custom-sections").append(newSection);
      if (type === 'description') {
        TwygoRichText.initialize(["event_custom_sections_" + newSectionId], {
          filebrowserImageBrowseUrl: TwygoOrganization.manageImages,
          toolbars: [
            {
              name: 'insert',
              items: ['Table']
            }, {
              name: 'links',
              items: ['Link', 'Unlink']
            }
          ]
        });
      }
      return newSectionId;
    },
    newDescription: function() {
      return this.newSection('description');
    },
    newFile: function() {
      return this.newSection('file');
    },
    dateInput: function(query) {
      var date;
      if (query == null) {
        query = ':input.date';
      }
      date = new Date();
      $(query).map(function() {
        return $(this).data("date", $(this).val());
      });
      $(query).setMask({
        mask: '99/99/9999',
        autoTab: false
      });
      $(query).datepicker({
        changeMonth: true,
        changeYear: true
      });
      $(query).datepicker("option", {
        dateFormat: I18n.t("date.formats.date_on_js"),
        dayNames: I18n.t("date.day_names"),
        dayNamesMin: I18n.t("date.abbr_day_names"),
        monthNames: I18n.t("date.monthNames"),
        monthNamesShort: I18n.t("date.monthNames"),
        nextText: I18n.t("common.next"),
        prevText: I18n.t("common.prev"),
        yearRange: (date.getFullYear() - 5) + ":" + (date.getFullYear() + 5),
        showOtherMonths: true,
        selectOtherMonths: true
      });
      return $(query).map(function() {
        return $(this).val($(this).data("date"));
      });
    },
    fileUpload: function(section, organization_id) {
      var $div, sectionId;
      if (organization_id == null) {
        organization_id = TwygoApplication.currentOrganizationId;
      }
      section = $(section);
      sectionId = section.closest(".event-content-custom-section").attr("section-id");
      $div = $("#custom_file_upload");
      if ($div.length === 0) {
        $div = $("<div id='custom_file_upload' class='hidden'>");
        $("body").append($div);
      }
      $div.attr("section-id", sectionId);
      return $div.load("/o/" + organization_id + "/custom_file_upload", function() {
        return $div.modal();
      });
    },
    bindCustomUrlField: function() {
      var event_custom_url_field_value, field_placeholder;
      event_custom_url_field_value = $('#event_custom_url_name').val();
      if (!event_custom_url_field_value || event_custom_url_field_value.length < 1) {
        field_placeholder = $('#event_custom_url_name').prop('placeholder');
        $('#custom-url-name-preview').text(field_placeholder);
      } else {
        $('#custom-url-name-preview').text(event_custom_url_field_value.replace(/\s+/g, "-").latinize());
      }
      return $('#event_custom_url_name').keyup(function() {
        var new_event_url_name;
        new_event_url_name = $('#event_custom_url_name').val();
        if (new_event_url_name.length < 1) {
          field_placeholder = $('#event_custom_url_name').prop('placeholder');
          return $('#custom-url-name-preview').text(field_placeholder);
        } else {
          return $('#custom-url-name-preview').text(new_event_url_name.replace(/\s+/g, "-").latinize());
        }
      });
    },
    load_address: function() {
      if ($('#event_mode').val() === '0') {
        return $('.address-container').fadeIn();
      }
    },
    toggle_address: function() {
      return $('#event_mode').on('change', function() {
        var _value;
        _value = $(this).val();
        if (_value === '1') {
          $('.address-container').fadeOut();
          return $('.location-field').val('');
        } else {
          return $('.address-container').fadeIn();
        }
      });
    },
    load_registers: function(event_id) {
      return setTimeout(function() {
        if (event_id === void 0) {
          event_id = TwygoEventManagement.currentEventData.eventId;
        }
        if ($('#manage-events').length && $('#manage-events').is(":visible")) {
          return $('#participants .tabs-header > .inner').find('a.selected').each(function(e, i) {
            var _count, _tab;
            _count = parseInt($(this).attr('count'));
            _tab = $(this).attr('list');
            return $("#" + _tab).find('#paginate-load').fadeOut();
          });
        }
      }, 1000);
    },
    filter_by_name: function(event_id, order_field, order) {
      var cpfs, department, manager_ids, names, organizations, role;
      names = $('#user_name').val();
      department = $('#filterDepartment').val();
      role = $('#filterRole').val();
      manager_ids = $('#filterManager').val();
      cpfs = $('#filterCPF').val();
      organizations = $('#filterOrganization').val();
      return $('#participants .tabs-header > .inner').find('a.tab_selector.selected').each(function(e, i) {
        var tab;
        tab = $(this).attr('list');
        if (TwygoEventManagement.xhr[tab] !== null) {
          TwygoEventManagement.xhr[tab].abort();
        }
        return TwygoEventManagement.xhr[tab] = $.ajax({
          url: "/e/" + event_id + "/participants/search",
          type: "get",
          dataType: 'HTML',
          data: {
            names: names,
            department: department,
            role: role,
            tab: tab,
            manager_ids: manager_ids,
            cpfs: cpfs,
            organizations: organizations,
            order_field: order_field,
            order: order
          },
          beforeSend: function() {
            return $("#" + tab).addClass('ajax-loading');
          },
          success: function(response) {
            if ($("#manage-events").find("#" + tab).find('.participant_list').find('.participant').length === 0) {
              $("#manage-events").find("#" + tab).find('.participant_list').find('.no-participants').remove();
            }
            $("#manage-events").find("#" + tab).find('.participant_list').find('.content_page').remove();
            return $("#manage-events").find("#" + tab).find('.participant_list').append(response);
          },
          error: function(response) {
            return TwygoFlashMessage.setMessage("error", I18n.t("error_in_filter_student"));
          },
          complete: function() {
            return $("#" + tab).removeClass('ajax-loading');
          }
        });
      });
    },
    filterClassManagers: function(order_field, order) {
      var cpfs, departments, enterprises, eventId, names, roles;
      eventId = TwygoEventManagement.eventData().eventId;
      names = $('#filterName').val();
      departments = $('#filterDepartment').val();
      roles = $('#filterRole').val();
      enterprises = $('#filterEnterprise').val();
      cpfs = $('#filterCPF').val();
      return $.ajax({
        url: "/e/" + eventId + "/search_class_managers",
        type: "get",
        dataType: 'HTML',
        data: {
          names: names,
          departments: departments,
          roles: roles,
          enterprises: enterprises,
          cpfs: cpfs,
          filter_class_managers: true,
          order: order,
          order_field: order_field
        },
        beforeSend: function() {
          return $('#manage-events').addClass('ajax-loading');
        },
        success: function(response) {
          return $('#class_managers_list').html(response);
        },
        error: function(response) {
          return TwygoFlashMessage.setMessage("error", I18n.t("generic_error"));
        },
        complete: function() {
          return $('#manage-events').removeClass('ajax-loading');
        }
      });
    },
    justNumberOfCPF: function(CPF) {
      var regex;
      regex = /[-,.]/g;
      CPF = CPF.replace(regex, '');
      return CPF;
    },
    showToastCompletePrivatePubUser: function() {
      return TwygoFlashMessage.setMessage("success", I18n.t('javascripts.student_status_change.complete'));
    },
    showToastConfirmPrivatePubUser: function() {
      return TwygoFlashMessage.setMessage("success", I18n.t('javascripts.student_status_change.confirm'));
    },
    showToastPendingPrivatePubUser: function() {
      return TwygoFlashMessage.setMessage("success", I18n.t('javascripts.student_status_change.pending'));
    },
    showToastCancelPrivatePubUser: function() {
      return TwygoFlashMessage.setMessage("success", I18n.t('javascripts.student_status_change.cancel'));
    },
    dismissModal: function(modalId) {
      var $inactivate;
      $inactivate = $('.inactivate-option');
      if (!$inactivate.hasClass('hidden')) {
        $inactivate.addClass('hidden');
      }
      modalId = $(modalId);
      return modalId.fadeOut();
    },
    showModalAlertDeactivatingEventChat: function(enabled) {
      var $inactivatingAlertModal, input;
      input = document.getElementById('event_enable_twygo_chat');
      if (enabled && !input.checked) {
        $inactivatingAlertModal = $('#event-disable-chat');
        TwygoUtility.toggleModal($inactivatingAlertModal);
        $inactivatingAlertModal.find('.inactiv_or_active').html(I18n.t('views.events.disable_chat_in_course'));
        $inactivatingAlertModal.find('.modal-body').html("<p style='padding: 0px; background-color: transparent' >" + I18n.t('views.events.alert_disable_chat_in_course') + "</p>");
        $inactivatingAlertModal.find('.modal-footer').html("<button class='btn btn-default btn-modal' type='button'>" + I18n.t('_sign_out'));
        return $inactivatingAlertModal.find('.btn-default').attr('onClick', 'TwygoEventManagement.dismissModal("#event-disable-chat")');
      }
    },
    showNotifyUserModal: function() {
      var $notifyModal;
      $notifyModal = $('#user-notify-modal');
      TwygoUtility.toggleModal($notifyModal);
      $notifyModal.find('.inactiv_or_active').html(I18n.t('views.events.course_release_notification_title'));
      $notifyModal.find('.modal-body').html("<p style='padding: 0px; background-color: transparent' class='are_you_sure_destroy'>" + I18n.t('views.events.course_release_notification_content') + "</p>");
      $notifyModal.find('.modal-footer').html("<button class='btn btn-default btn-modal-action' type='button'>" + I18n.t('common._no') + "</button><button class='btn btn-primary btn-notify-users btn-modal-action' type='button'>" + I18n.t('common._yes') + "</button>");
      $notifyModal.find('.btn-default').attr('onClick', 'TwygoEventManagement.dismissModal("#user-notify-modal")');
      return $notifyModal.find('.btn-notify-users').attr('onClick', '$("#resend_notifications").prop("value", 1); TwygoEventManagement.dismissModal("#user-notify-modal")');
    },
    fillAddressByCEP: function() {
      var cep, country, validacep;
      cep = $("#event_participant_zip_code").val().replace(/\D/g, '');
      country = $("#event_participant_country").val();
      if (cep !== '' && country === "BR") {
        validacep = /^[0-9]{8}$/;
        if (validacep.test(cep)) {
          $(".cep-loader").fadeIn("fast");
          return $.getJSON('//viacep.com.br/ws/' + cep + '/json/?callback=?', function(dados) {
            if (!('erro' in dados)) {
              $('#event_participant_address').val(dados.logradouro);
              $('#event_participant_city').val(dados.localidade);
              $('#event_participant_state').val(dados.uf);
              $('#event_participant_district').val(dados.bairro);
              $(".cep-loader").fadeOut("fast");
              return $(".zip-code-error").fadeOut("fast");
            } else {
              $(".zip-code-error").text(I18n.t('zip_code_not_found'));
              $(".zip-code-error").fadeIn("fast");
              $(".cep-loader").fadeOut("fast");
              $('#event_participant_address').val("");
              $('#event_participant_city').val("");
              $('#event_participant_state').val("");
              $('#event_participant_district').val("");
              return setTimeout(function() {
                return $(".zip-code-error").fadeOut("fast");
              }, 5000);
            }
          });
        } else {
          $(".zip-code-error").text(I18n.t('invalid_zip_code'));
          $(".zip-code-error").fadeIn("fast");
          $('#event_participant_address').val("");
          $('#event_participant_city').val("");
          $('#event_participant_state').val("");
          $('#event_participant_district').val("");
          return setTimeout(function() {
            return $(".zip-code-error").fadeOut("fast");
          }, 5000);
        }
      } else {
        return $(".zip-code-error").fadeOut("fast");
      }
    }
  };

}).call(this);
(function() {
  this.TwygoEventStudentComments = {
    MAX_LENGTH_COMMENTS: 3,
    event_id: null,
    initialize: function() {
      return $('#add-comment-form').on('submit', function(e) {
        var _content, _student_id;
        _student_id = $(this).find('button[data-id]').attr('data-id');
        _content = $(this).find('#comment-content').val();
        if (_content.length > TwygoEventStudentComments.MAX_LENGTH_COMMENTS) {
          $('#comment-content').removeClass('error');
          TwygoEventStudentComments.addComments(_student_id, _content);
        } else {
          $('#comment-content').addClass('error');
        }
        return safePreventEvent(e);
      });
    },
    addComments: function(_student_id, _content, event_id) {
      if (event_id == null) {
        event_id = null;
      }
      if (!event_id) {
        event_id = TwygoEventStudentComments.event_id;
      }
      if (!event_id) {
        event_id = TwygoEventManagement.eventData().eventId;
      }
      return $.ajax({
        url: "/e/" + event_id + "/students/" + _student_id + "/add_comment",
        dataType: 'json',
        type: 'post',
        data: {
          content: _content
        },
        beforeSend: function() {
          $('#comments-form').find('.inner-box').addClass('ajax-loading');
          return TwygoEventStudentComments.clearCommentField();
        },
        success: function(resp) {
          var _out;
          _out = TwygoEventStudentComments.render_mustache(resp.comments);
          $('#comments-form').find('.panel-content').find('.not-found').fadeOut();
          $("#" + _student_id).find('a.add-comment').addClass('has-comment');
          $("#comment-" + _student_id).addClass('has-comment');
          $("#" + _student_id).find('a.add-comment').attr('title', _content);
          return $('#comments-form').find('.panel-content').find('.list-comment').append(_out);
        },
        error: function(jqXHR, textStatus, errorThrown) {
          return TwygoFlashMessage.setMessage("error", I18n.t('unable_to_add_obs'));
        },
        complete: function() {
          TwygoEventStudentComments.clearCommentField();
          $('#comment-content').removeClass('error');
          return $('#comments-form').find('.inner-box').removeClass('ajax-loading');
        }
      });
    },
    clearCommentField: function() {
      return $('#comment-content').val('');
    },
    getComments: function(student_id, event_id, options) {
      var _name;
      if (event_id == null) {
        event_id = null;
      }
      if (options == null) {
        options = {};
      }
      if (!event_id) {
        event_id = TwygoEventManagement.eventData().eventId;
      }
      TwygoEventStudentComments.event_id = event_id;
      _name = options.studentName || $("#" + student_id).find('.student-name').text();
      $('#comments-form').find('button[data-id]').attr('data-id', student_id);
      $('#comments-form').fadeIn().find('.inner').addClass('ajax-loading');
      return $.ajax({
        url: "/e/" + event_id + "/students/" + student_id + "/comments",
        dataType: 'json',
        type: 'get',
        beforeSend: function() {
          $('#comments-form').find('.panel-content').find('.list-comment').html('');
          return $('#comments-form').find('.panel-header .name').text(_name);
        },
        success: function(resp) {
          var _out;
          _out = '';
          if (resp.comments.length > 0) {
            $('#comments-form').find('.panel-content').find('.not-found').fadeOut();
            $.each(resp.comments, function(i, e) {
              return _out += TwygoEventStudentComments.render_mustache(e);
            });
          } else {
            $('#comments-form').find('.panel-content').find('.not-found').fadeIn();
          }
          $('#comments-form').find('.panel-content').find('.list-comment').html(_out);
          return TwygoEventStudentComments.closedModal();
        },
        complete: function() {
          return $('#comments-form').find('.inner').removeClass('ajax-loading');
        }
      });
    },
    rmComment: function(comment_id, _student_id, event_id) {
      var ModalRemoveComment;
      if (event_id == null) {
        event_id = null;
      }
      if (!event_id) {
        event_id = TwygoEventStudentComments.event_id;
      }
      if (!event_id) {
        event_id = TwygoEventManagement.eventData().eventId;
      }
      ModalRemoveComment = TwygoModalRemoveItem.initialize({
        id: 'remove-comment-modal',
        configuration: {
          reload: false,
          url: "/e/" + event_id + "/students/" + _student_id + "/rm_comment/" + comment_id
        },
        callbacks: {
          beforeSend: function() {
            return $('#comments-form').find('.inner-box').addClass('ajax-loading');
          },
          success: function(response) {
            $('#comments-form').find('.list-comment').find("li[data-comment='" + comment_id + "']").remove();
            $('#comments-form').find('.inner-box').removeClass('ajax-loading');
            if ($('#comments-form').find('.panel-content').find('.list-comment').find('li').length === 0) {
              $('#comments-form').find('.panel-content').find('.not-found').fadeIn();
              $("#" + _student_id).find('.add-comment').removeClass('has-comment');
              $("#comment-" + _student_id).removeClass('has-comment');
              return $("#" + _student_id).find('.add-comment').attr('title', I18n.t('no_comment'));
            } else {
              return $('#comments-form').find('.panel-content').find('.not-found').fadeOut();
            }
          },
          error: function(jqXHR, textStatus, errorThrown) {
            return TwygoFlashMessage.setMessage("error", I18n.t('error_removing_obs'));
          }
        }
      });
      return ModalRemoveComment.open();
    },
    closedModal: function() {
      $('#comments-form').find('.close').on('click', function() {
        return $('#comments-form').fadeOut();
      });
      $('#review-questions').find('.close').on('click', function() {
        return $('#review-questions').fadeOut();
      });
      return $('#score-form').find('.close').on('click', function() {
        return $('#score-form').fadeOut();
      });
    },
    render_mustache: function(element) {
      var template;
      template = $('#comment_item').html();
      return Mustache.render(template, element);
    }
  };

}).call(this);
(function() {
  this.TwygoEvent = {
    open: {
      "date-more": "date-menu",
      "share-social": "shasoc",
      "share-twygo": "shatwy",
      "share-twygo-bar": "shatwy",
      "select-text": "stages-menu"
    },
    registerFormChange: false,
    pixels: [],
    event_id: null,
    student_id: null,
    student_email: '',
    scroll: function(top) {
      return $(document).scrollTop(top - $("#title_bar").height() - $("#title_bar").offset().top);
    },
    menuActions: {
      schedule: function() {
        return TwygoEvent.scroll($("#event-show-schedule").offset().top);
      },
      location: function() {
        return TwygoEvent.scroll($("#event-show-location").offset().top);
      },
      future: function() {
        return TwygoEvent.scroll($("#event-show-future").offset().top);
      },
      map: function() {
        return TwygoEvent.scroll($("#event-show-map").offset().top);
      },
      contact: function() {
        TwygoEvent.scroll($("#event-show-contact").offset().top);
        return $("#event-show-contact").find("input:visible:first").focus();
      },
      "custom-section": function() {
        var sectionId, sectionType;
        sectionId = $(this).attr("section-id");
        sectionType = $(this).attr("section-type");
        if (sectionType === "file") {
          return $(this).attr("href", "/");
        } else {
          return TwygoEvent.scroll($(".event-content-custom-section[section-id='" + sectionId + "']").offset().top);
        }
      },
      share: function() {
        return TwygoEvent.showShareMenu(this);
      }
    },
    chargebackButton: function(event_id, student_id) {
      TwygoEvent.event_id = event_id;
      TwygoEvent.student_id = student_id;
      $("#refund-form").fadeIn();
      $('body').addClass('overflow-hidden');
      return $('#refund-form .close').on('click', function() {
        return $('#refund-form').fadeOut();
      });
    },
    sendChargeBack: function() {
      var element, flashMsg, message;
      message = $('#refund-message').val();
      if (!message) {
        element = I18n.t('activerecord.attributes.financial.message');
        flashMsg = I18n.t('activerecord.errors.messages.empty');
        TwygoFlashMessage.setMessage("error", element + " " + flashMsg);
        return;
      }
      return $.ajax({
        url: "/e/" + TwygoEvent.event_id + "/participants/" + TwygoEvent.student_id + "/chargebacks",
        type: "POST",
        data: {
          message: message
        },
        success: function(response) {
          $("#refund-form").removeClass('ajax-loading');
          $("#refund-form").fadeOut();
          $('body').removeClass('overflow-hidden');
          $('#my-events-cancel-enrollment-button').remove();
          return TwygoFlashMessage.setMessage("info", I18n.t('payment.chargeback.messages.success.solicitation'));
        },
        error: function(err) {
          message = '';
          if (err.status === 400) {
            message = I18n.t("payment.chargeback.messages.fail.boleto_or_pix");
          } else {
            message = I18n.t('payment.chargeback.messages.fail.solicitation');
          }
          $("#refund-form").removeClass('ajax-loading');
          return TwygoFlashMessage.setMessage("error", message);
        },
        beforeSend: function() {
          return $("#refund-form").addClass('ajax-loading');
        }
      });
    },
    registrationButton: function(opts, user, needsPayment, userPaid) {
      var button, buttonData, inscriptionMessage;
      if (opts === void 0) {
        opts = {};
      }
      button = $(".event-show-registration-button");
      buttonData = $(".event-show-registration-data");
      inscriptionMessage = $('.inscription_message');
      button.attr(opts);
      button.off("click");
      inscriptionMessage.css("text-align", 'justify').css("margin-left", '20px').css('color', "#000").css('font-size', '12px').css('margin-bottom', '20px');
      if (button.attr("status") === "1") {
        buttonData.show();
        button.removeClass("registration-confirmed registration-pending").addClass("registration-confirmed").attr("href", location.pathname + "/learn").text(I18n.t("javascripts.events_learn"));
      } else if (button.attr("status") === "block_access") {
        button.removeClass("registration-confirmed registration-pending registration-rejected").addClass("registration-pending").removeAttr("href").text(I18n.t("javascripts.date_invalid_access"));
      } else if (button.attr("status") === "block_event_according_to_learning_path") {
        button.removeClass("registration-confirmed registration-pending registration-rejected").addClass("registration-pending").removeAttr("href").text(I18n.t("javascripts.blocked_by_learning_path"));
      } else if (button.attr("status") === "block_event_by_time_end") {
        button.removeClass("registration-confirmed registration-pending registration-rejected").addClass("registration-pending").removeAttr("href").text(I18n.t("javascripts.finished"));
      } else if (button.attr("status") !== "" && button.attr("checkout_status") !== "") {
        buttonData.show();
        if (button.attr("confirmed") === "true" && button.attr("status") === "1") {
          button.removeClass("registration-confirmed registration-pending registration-rejected").addClass("registration-confirmed").removeAttr("href").text(I18n.t("javascripts.participating"));
        } else if (button.attr("confirmed") === "true" && button.attr("status") === "2") {
          button.removeClass("registration-confirmed registration-pending registration-rejected").addClass("registration-rejected").removeAttr("href").text(I18n.t("views.event_participant.canceled_registration")).css('background', "#f0f0f0").css('color', '#000');
        } else if (button.attr("status") === "3") {
          button.removeClass("registration-confirmed registration-pending registration-rejected").addClass("registration-pending").removeAttr("href").text(I18n.t("views.event_participant.canceled_registration")).css('background', "#f0f0f0").css('color', '#000');
          buttonData.css('display', 'none');
          inscriptionMessage.text(I18n.t("payments.refund.status.refunded"));
        } else if (button.attr("status") === "5") {
          button.removeClass("registration-confirmed registration-pending registration-rejected").addClass("registration-pending").removeAttr("href").text(I18n.t("views.event_participant.canceled_registration")).css('background', "#f0f0f0").css('color', '#000');
          buttonData.css('display', 'none');
          inscriptionMessage.text(I18n.t("payments.refund.status.waiting_gateway"));
        } else if (button.attr("status") === "4") {
          button.removeClass("registration-confirmed registration-pending registration-rejected").addClass("registration-pending").removeAttr("href").text(I18n.t("views.event_participant.canceled_registration")).css('background', "#f0f0f0").css('color', '#000');
        } else if (button.attr("status") === "6") {
          button.removeClass("registration-confirmed registration-pending registration-rejected").addClass("registration-pending").removeAttr("href").text(I18n.t("views.event_participant.canceled_registration")).css('background', "#f0f0f0").css('color', '#000');
          buttonData.css('display', 'none');
          inscriptionMessage.text(I18n.t("payments.refund.status.failed"));
        } else {
          if (needsPayment && !userPaid) {
            button.css('font-size', '8px');
            button.removeClass("registration-confirmed registration-pending registration-rejected").addClass("registration-pending").removeAttr("href").text(I18n.t("payments.status.waiting_payment"));
            if (TwygoEvent.student_email.length > 0) {
              inscriptionMessage.text(I18n.t("payments.status.waiting_payment_help"));
            } else {
              inscriptionMessage.html("<p style='color: rgb(0, 0, 0)'>" + (I18n.t("payments.status.waiting_payment_help_no_email")) + "</p> <br> <p style='color: rgb(0, 0, 0)'>" + (I18n.t("payments.status.waiting_payment_help_no_email_time")) + "</p>");
            }
          } else {
            button.removeClass("registration-confirmed registration-pending registration-rejected").addClass("registration-pending").removeAttr("href").text(I18n.t("javascripts.waiting_confirmation"));
          }
        }
      } else {
        buttonData.hide();
        button.removeClass("registration-confirmed registration-pending").attr("href", "#").text(I18n.t("javascripts.sign_up"));
        button.on("click", function() {
          return TwygoEvent.showModal(user);
        });
      }
      if (button.attr("register") !== void 0) {
        button.click();
      }
      button.removeAttr("register");
      TwygoEvent.payment(button.attr("checkout"));
      buttonData.off("click");
      buttonData.attr("checkout", button.attr("checkout"));
      buttonData.on("click", function() {
        TwygoEvent.register();
        if (button.attr("status") === "0") {
          return TwygoEvent.registerNext();
        }
      });
      if (window.location.hash === "#register") {
        $(document).ready(function() {
          return TwygoEvent.register();
        });
        return window.location.hash = "";
      } else if (window.location.hash === "#registerNext") {
        $(document).ready(function() {
          TwygoEvent.register();
          return TwygoEvent.registerNext();
        });
        return window.location.hash = "";
      }
    },
    registerSuccess: function(goToNext) {
      if (goToNext == null) {
        goToNext = false;
      }
      TwygoEvent.appendPixelsCode();
      if (TwygoEvent.changingStep) {
        return TwygoEvent.changingStep = false;
      } else {
        return TwygoEvent.reloadWithRegister(goToNext);
      }
    },
    registerUpdate: function(goToNext) {
      if (goToNext == null) {
        goToNext = false;
      }
      TwygoEvent.appendPixelsCode();
      if (TwygoEvent.changingStep) {
        return TwygoEvent.changingStep = false;
      } else {
        if (goToNext) {
          return TwygoEvent.registerNext();
        } else {
          return $.twygomodal.close();
        }
      }
    },
    appendPixelsCode: function() {
      var j, len1, pixel, ref, results;
      $('#pixels').html();
      ref = TwygoEvent.pixels;
      results = [];
      for (j = 0, len1 = ref.length; j < len1; j++) {
        pixel = ref[j];
        results.push($('#pixels').append(pixel.code));
      }
      return results;
    },
    reloadWithRegister: function(goToNext) {
      if (goToNext == null) {
        goToNext = false;
      }
      if (goToNext) {
        window.location.hash = "registerNext";
      }
      return window.location.reload();
    },
    registerNext: function() {
      return $(".tab_selector.selected").next().trigger("click");
    },
    showElementsMenu: function() {
      return $('#event-show-menu').find('[data-rel]').each(function(index, element) {
        var _element, _rel;
        _rel = $(this).attr('data-rel');
        _element = $('#event-show-' + _rel);
        if (_element.length <= 0) {
          return $(element).hide();
        }
      });
    },
    targetMenuScroll: function() {
      return $('#event-show-menu').find('[data-action]').on('click', function(event) {
        var _action, _top;
        event.preventDefault();
        _action = $(this).attr('data-action');
        _top = $("[section-id='" + _action + "'").offset().top;
        return $("html, body").animate({
          scrollTop: _top - 100
        });
      });
    },
    showShareMenu: function(el) {
      var $el, $menu, offset;
      $el = $(el);
      $menu = $(".event-share-menu");
      if ($menu.children(".menu").is(":visible")) {
        return $menu.children(".menu").slideUp();
      } else {
        offset = $el.offset();
        $menu.css({
          top: offset.top - 110
        });
        $menu.children(".menu").slideDown();
        return setTimeout(function() {
          return $menu.children(".menu").addClass("hideOnClickOut");
        }, 10);
      }
    },
    defaultBannerHeight: 300,
    showEventBindings: function() {
      $(".event-show-participant img").on("error", function() {
        return $(this).attr({
          src: TwygoApplication.assets.noPic
        });
      });
      $("#event-content-banner-img").on("load", function() {
        if ($("#event-content-banner-img").height() > $("#event-content-banner").height()) {
          $("#event-content-banner").css({
            "max-height": TwygoEvent.defaultBannerHeight
          });
          $(".event-banner-show").css({
            "width": $("#event-content-banner-img").width()
          });
          $(".event-banner-show").off().click(function() {
            if (!($(this).hasClass("hide-banner"))) {
              $("#event-content-banner").animate({
                "max-height": $("#event-content-banner-img").height()
              });
              $(".event-banner-show span").text(I18n.t("javascripts.hide"));
              return $(this).addClass("hide-banner");
            } else {
              $("#event-content-banner").animate({
                "max-height": TwygoEvent.defaultBannerHeight
              });
              $(".event-banner-show span").text(I18n.t("javascripts.show"));
              return $(this).removeClass("hide-banner");
            }
          });
          return $(".event-banner-show").show();
        } else {
          return $(".event-banner-show").hide();
        }
      }).each(function() {
        if (this.complete) {
          return $(this).load();
        }
      });
      $(".event-share-menu li a").click(function() {
        return $(".event-share-menu").children(".menu").hide();
      });
      $(".event-content-text-more").click(function() {
        var more, text;
        more = $(this);
        text = more.parent();
        text.toggleClass("text-expanded");
        if (text.hasClass("text-expanded")) {
          text.css("height", more.height() + text.prop("scrollHeight"));
          return more.text(I18n.t("javascripts.read_less"));
        } else {
          text.css("height", 120);
          return more.text(I18n.t("javascripts.read_more"));
        }
      });
      $(".event-content-text").map(function() {
        var more, text;
        text = $(this);
        more = text.find(".event-content-text-more");
        text.css("height", 120);
        if (text.prop("scrollHeight") > 120) {
          return more.show();
        }
      });
      $(".like-button, .dislike-button").click(function() {
        var u_action;
        if (TwygoApplication.currentUserId === 0) {
          return;
        }
        u_action = $(this).attr("u_action");
        if (u_action === "interest") {
          $(this).hide();
          return $("#quit").addClass("liked").show();
        } else {
          $(this).hide();
          return $("#i_have_interest").removeClass("liked").show();
        }
      });
      $(window).on("scroll", function() {
        if ($(document).scrollTop() > 0) {
          if (!$("#event-back-to-top").is(":visible")) {
            return $("#event-back-to-top").fadeIn();
          }
        } else {
          return $("#event-back-to-top").hide();
        }
      });
      $(".event-show-participants-full-list").data("onmodalresize", function() {
        if ($(".simplemodal-wrap").height() < 400) {
          return $(".event-show-user-list").css("overflow", "visible");
        } else {
          return $(".event-show-user-list").css("overflow", "auto");
        }
      });
      $(".event-show-liked-full-list").data("onmodalresize", function() {
        if ($(".simplemodal-wrap").height() < 400) {
          return $(".event-show-user-list").css("overflow", "visible");
        } else {
          return $(".event-show-user-list").css("overflow", "auto");
        }
      });
      $(".event-show-participants-going").click(function() {
        if (!($(this).attr("count") <= 0)) {
          return $(".event-show-participants-full-list").modal({
            persist: true
          });
        }
      });
      $(".event-show-participants-interested").click(function() {
        if (!($(this).attr("count") <= 0)) {
          return $(".event-show-liked-full-list").modal({
            persist: true
          });
        }
      });
      $(".event-show-filter-user-list").on("keyup", function() {
        var field, list, parent;
        field = $(this);
        parent = field.parent(".field");
        list = parent.siblings(".event-show-user-list");
        list.children(".event-show-user-filtered-list").data("page", -1);
        list.children(".event-show-user-filtered-list").data("can_show_more_results", true);
        clearTimeout(field.data('trigger'));
        return field.data("trigger", setTimeout(function() {
          var filter, j, len1, noFilter, ref, userDiv;
          filter = field.val();
          if (filter.length < 3) {
            filter = "";
          }
          filter = filter.toLowerCase();
          list.data("filter", filter);
          noFilter = list.data("filter") === "" || typeof list.data("filter") === "undefined";
          list.children(".event-show-user-filtered-list").empty();
          if (noFilter) {
            list.children(".event-show-user-full-list").children(".event-show-user").show();
            list.children(".event-show-user-filtered-list").hide();
          } else {
            ref = list.children(".event-show-user-full-list").children(".event-show-user");
            for (j = 0, len1 = ref.length; j < len1; j++) {
              userDiv = ref[j];
              if ($(userDiv).find(".event-show-user-name").text().toLowerCase().indexOf(filter) < 0) {
                $(userDiv).hide();
              } else {
                $(userDiv).show();
              }
            }
            list.children(".event-show-user-filtered-list").show();
          }
          return list.scroll();
        }, 350));
      });
      return $(".event-show-user-list").on("scroll", function() {
        var list, loadMoreXhr, nextPage, noFilter;
        list = $(this);
        if (list.scrollTop() + list.height() < list.prop("scrollHeight") - list.height()) {
          return;
        }
        loadMoreXhr = list.data("loadMoreXhr");
        noFilter = list.data("filter") === "" || typeof list.data("filter") === "undefined";
        if (!(typeof loadMoreXhr === "undefined" || loadMoreXhr.complete)) {
          return;
        }
        if (list.data("can_show_more_results") === false) {
          return;
        }
        if (!noFilter && list.children(".event-show-user-filtered-list").data("can_show_more_results") === false) {
          return;
        }
        if (noFilter) {
          nextPage = (list.data("page") || 0) + 1;
          list.data("page", nextPage);
        } else {
          nextPage = list.children(".event-show-user-filtered-list").data("page") + 1;
          list.children(".event-show-user-filtered-list").data("page", nextPage);
        }
        loadMoreXhr = $.ajax({
          url: "/e/" + (list.attr("event_id")) + "/who_more",
          type: "get",
          data: {
            page: nextPage,
            filter: list.data("filter"),
            action_type: list.attr("action_type")
          },
          dataType: "json",
          success: function(response) {
            var full_name, j, len1, ref, user, userDiv;
            ref = response.users;
            for (j = 0, len1 = ref.length; j < len1; j++) {
              user = ref[j];
              userDiv = list.children(".event-show-user-full-list").children(".event-show-user[user-id='" + user.user_id + "']");
              if (userDiv.length <= 0 && !noFilter) {
                userDiv = list.children(".event-show-user-filtered-list").children(".event-show-user[user-id='" + user.user_id + "']");
              }
              if (userDiv.length <= 0) {
                full_name = user.first_name + " " + user.last_name;
                userDiv = list.children(".new-user").clone();
                userDiv.find("a").attr("href", "/p/" + user.user_id);
                userDiv.find(".event-show-participant-avatar").attr({
                  title: full_name,
                  alt: full_name,
                  src: user.photo
                });
                userDiv.find(".event-show-user-name").text(full_name);
                userDiv.attr("user-id", user.user_id).removeClass("new-user");
                if (noFilter) {
                  list.children(".event-show-user-full-list").append(userDiv);
                } else {
                  list.children(".event-show-user-filtered-list").append(userDiv);
                }
              } else {
                userDiv.show();
              }
            }
            if (noFilter) {
              return list.data("can_show_more_results", response.can_show_more_results);
            } else {
              return list.children(".event-show-user-filtered-list").data("can_show_more_results", response.can_show_more_results);
            }
          }
        });
        return list.data("loadMoreXhr", loadMoreXhr);
      });
    },
    initialize: function() {
      var slide;
      TwygoEvent.bindScrollBottom();
      $(document).on("click", "#evmap", function() {
        return TwygoEvent.show_map();
      });
      $(document).on("click", ".share-social, .share-twygo, .share-twygo-bar", function() {
        var element, len;
        element = this.className.replace(/\s+/g, " ").split(" ");
        len = element.length - 1;
        return $(this).siblings("#" + TwygoEvent.open["" + element[len] + ""]).slideDown("fast", function() {
          var that;
          if ($("#main").data("cucumber") !== "true" && $("#main").data("cucumber") !== true) {
            that = $(this);
            return $(document).bind("mouseup", function(e) {
              if ($(e.target).attr("id") !== that.attr("id")) {
                that.hide();
                return $(this).unbind("mouseup");
              }
            });
          }
        });
      });
      $(document).on("click", ".share-email", function() {
        return TwygoEvent.recommendedMail(this);
      });
      $(document).on("click", "#bt-contact", function() {
        return TwygoEvent.contactMail(this);
      });
      $("[data-open]").click(function() {
        var action;
        action = $(this).data("open");
        return TwygoEvent.menuActions[action].call(this);
      });
      $(".title-of-section").click(function() {
        $(this).siblings(".the-crowd").addClass("focus");
        $(".the-crowd:not(.focus)").slideUp("fast");
        $(".the-crowd:not(.focus)").siblings(".title-of-section").removeClass("title-colapse").addClass("title-expand");
        $(this).siblings(".the-crowd").slideToggle("fast", function() {
          if ($(this).is(':visible')) {
            return $(this).siblings(".title-of-section").removeClass("title-expand").addClass("title-colapse");
          } else {
            return $(this).siblings(".title-of-section").removeClass("title-colapse").addClass("title-expand");
          }
        });
        return $(this).siblings(".the-crowd").removeClass("focus");
      });
      $("a.slide_open").click(function() {
        var anchor;
        anchor = $(this);
        try {
          if ((anchor.attr("href") !== "#") && (anchor.attr("href") !== "")) {
            return $(anchor.attr("href")).siblings(".the-crowd").show();
          }
        } catch (error) {}
      });
      $(document).on("click", ".one-people.gray_btn.speakerlist", function() {
        return $(this).children(".speaker_float").modal();
      });
      try {
        slide = $($(location)[0].hash);
        if (slide.is(".title-of-section")) {
          slide.siblings(".the-crowd").show();
        }
      } catch (error) {}
      $(".user-steps a").on("click", function() {
        return $(".tab_selector:eq(" + $(this).attr("link-step") + ")").trigger("click");
      });
      if ($("#event-show-registration").length > 0) {
        $("#wrap").addClass("fixed-title");
      }
      if (TwygoApplication.object !== void 0) {
        this.initAttachments();
        return this.initPayment();
      }
    },
    registerChangeStep: function() {
      var currentStep;
      currentStep = $(".actual-step:visible").attr("link-step");
      if (currentStep === "0" && TwygoEvent.registerFormChange) {
        TwygoEvent.changingStep = true;
        return $("#form_register_event").submit();
      }
    },
    modalOnResize: function() {
      var height, modal;
      modal = $("#simplemodal-container");
      if (!(modal.length > 0)) {
        return;
      }
      height = $(window).height() - modal.offset().top - 50;
      if (height > modal.find("#basic-modal-content").height() + 20) {
        height = modal.find("#basic-modal-content").height() + 20;
      }
      if (height < 150) {
        height = 150;
      }
      modal.css("min-height", height);
      modal.css("max-height", height);
      if (typeof modal.find("#basic-modal-content").data("onmodalresize") !== "undefined") {
        return modal.find("#basic-modal-content").data("onmodalresize")();
      }
    },
    recommendedMail: function(element) {
      var event_id, text;
      event_id = $(element).attr("event_id");
      text = $(element).attr("text");
      $(".twygo-share-email #recommendation_event_id").val(event_id);
      $(".twygo-share-email #recommendation_message").val(text);
      return $(".twygo-share-email").modal({
        minHeight: 320,
        opacity: 50,
        position: [50],
        overlayClose: true
      });
    },
    contactMail: function(element) {
      $('#recaptcha_widget_div').appendTo($(".recaptcha"));
      $(".twygo-contact").modal({
        onClose: TwygoEvent.hideContactMail,
        minHeight: 555,
        opacity: 50,
        position: [50],
        persist: true,
        overlayClose: true
      });
      setTimeout(function() {
        return Recaptcha.widget = $('#recaptcha_widget_div')[0];
      }, 500);
      return this.modalOnResize();
    },
    hideContactMail: function() {
      $('#contact_message').val('');
      return $('#event-show-contact').removeClass('event-show-container-loading');
    },
    registerShowErrors: function(fields, messages) {
      var field, form, j, k, len1, len2, msg, msgs, ul;
      if (TwygoEvent.register_needs_captcha) {
        $(".recaptcha_register").show();
      } else {
        $(".recaptcha_register").hide();
      }
      if (typeof Recaptcha !== "undefined") {
        Recaptcha.reload();
      }
      form = $(".twygo-register form");
      msgs = $(".twygo-register #error_explanation");
      msgs.append('<a class="close" href="javascript:void(0);"></a>');
      ul = msgs.find("ul");
      ul.empty();
      for (j = 0, len1 = messages.length; j < len1; j++) {
        msg = messages[j];
        ul.append($("<li>").text(msg));
      }
      form.find("input").removeClass('field_with_errors');
      for (k = 0, len2 = fields.length; k < len2; k++) {
        field = fields[k];
        if (field === "phone") {
          form.find(".field_phone input").addClass('field_with_errors');
        } else {
          form.find("#user_" + field).addClass('field_with_errors');
        }
      }
      if (ul.find("li").length > 0) {
        msgs.show();
      } else {
        msgs.hide();
      }
      $("input.field_with_errors:first").focus();
      msgs.find('.close').on('click', function() {
        return msgs.hide();
      });
      return this.modalOnResize();
    },
    triggerOpenModal: function(_hash) {
      var _flag;
      _flag = location.hash;
      if (_flag.length && _flag === _hash) {
        return this.showModal();
      }
    },
    register: function(user) {
      if (!!user && user.id) {
        return this.create_participant(user);
      } else {
        return this.showModal();
      }
    },
    showModal: function() {
      if (TwygoEvent.registerFormChange === void 0) {
        TwygoEvent.registerFormChange = false;
      }
      this.freezePageOnModalForMobile();
      $('#event-register').fadeIn('fast');
      $('#event-register').find('.inner-box').delay(500).addClass('show');
      return $('#event-register .close').on('click', function() {
        TwygoEvent.unfreezePageOnModalForMobile();
        $('#event-register').find('.inner-box').removeClass('show');
        return $('#event-register').delay(500).fadeOut('fast');
      });
    },
    freezePageOnModalForMobile: function() {
      return $('body').addClass('overflow-hidden');
    },
    unfreezePageOnModalForMobile: function() {
      return $('body').removeClass('overflow-hidden');
    },
    create_participant: function(user) {
      return $.ajax({
        url: "/e/" + TwygoApplication.object.id + "/create_participant",
        type: 'POST',
        data: {
          user: {
            first_name: user.first_name,
            last_name: user.last_name,
            email: user.email,
            enterprise: user.enterprise,
            role: user.role,
            address: user.address,
            phone1: user.phone1,
            phone2: user.phone2,
            cell_phone: user.cell_phone,
            address2: user.address2,
            city: user.city,
            state: user.state,
            country: user.country,
            cpf: user.cpf,
            rg: user.rg,
            business_line: user.business_line,
            number_of_employees: user.number_of_employees,
            email_confirmation: '',
            password: '',
            password_confirmation: '',
            comment: ''
          }
        },
        error: function(response) {
          $('#event-show-registration > div > button').text(I18n.t("javascripts.sign_up"));
          TwygoEvent.showModal();
          return TwygoEvent.registerShowErrors(JSON.parse(response.responseJSON.fields), JSON.parse(response.responseJSON.msg));
        },
        complete: function(response) {
          return $('#event-show-registration > div > button').text(I18n.t("javascripts.sign_up"));
        }
      });
    },
    payment: function(checkout_url) {
      if (checkout_url === void 0 || checkout_url === "") {
        checkout_url = $(".payment_form a.pagseguro").data("href");
      }
      $(".payment_form a.pagseguro").attr("href", checkout_url);
      $(".payment_form").fadeIn("fast");
      $(".register_form").hide();
      return this.modalOnResize();
    },
    loginToRegister: function() {
      return $("#login-modal").twygomodal();
    },
    setLoginToRegister: function() {
      return TwygoApplication.redirect_to = "/e/" + TwygoApplication.object.id + "#register";
    },
    showRegisterModal: function() {
      $.modal.close();
      return setTimeout("TwygoEvent.register()", 10);
    },
    update_profile: function() {
      var answer;
      if (TwygoEvent.registerFormChange) {
        answer = confirm("Deseja alterar automaticamente os dados do seu perfil?");
        if (answer) {
          return $('#update_profile').attr('value', 'true');
        }
      }
    },
    create_user: function() {
      return $('#create_user').attr('value', 'true');
    },
    hideLoading: function() {
      return $('.loading').hide();
    },
    hideRegisterModal: function() {
      return $.modal.close();
    },
    errorContact: function(message) {
      TwygoFlashMessage.setMessage('error', message);
      TwygoEvent.enableEventFormButtons();
      return $('#event-show-contact').removeClass('event-show-container-loading');
    },
    show_map: function() {
      var url;
      if ($("#event_address_map").attr("is_open") === void 0) {
        url = $("#event_address_map").attr("url");
        $("#event_address_map").attr("src", url);
        return $("#event_address_map").attr("is_open", true);
      }
    },
    who_more: function(element, event) {
      safePreventEvent(event);
      element = $(element);
      $.ajax({
        url: element.attr("href"),
        type: element.attr("data_method"),
        data: {
          page: element.attr("page"),
          action_type: element.attr("action_type"),
          ghosts: TwygoEvent.ghost()
        },
        dataType: "json",
        success: function(response) {
          return TwygoEvent.show_more(element, response);
        }
      });
      return false;
    },
    more_speakers: function(element, event) {
      safePreventEvent(event);
      element = $(element);
      $.ajax({
        url: element.attr("href"),
        type: element.attr("data_method"),
        data: {
          page: element.attr("page"),
          action_type: element.attr("action_type"),
          ghosts: TwygoEvent.ghost()
        },
        dataType: "json",
        success: function(response) {
          return TwygoEvent.show_more_speakers(element, response);
        }
      });
      return false;
    },
    show_more: function(element, response) {
      var full_name, i, new_element, user;
      if (response.can_show_more_results) {
        element.attr("page", parseInt(element.attr("page")) + 1);
      } else {
        element.parent().hide();
      }
      i = 0;
      while (i < response.users.length) {
        user = response.users[i];
        new_element = $(".one-people.gray_btn." + response.action_name + "list").last().clone();
        new_element.children(".user-img").children().attr("href", "/p/" + user.user_id);
        full_name = user.first_name + " " + user.last_name;
        new_element.find(".user-img").children("a").children("img").attr("src", user.photo);
        new_element.find(".user-img").children("a").children("img").attr("width", "30px");
        new_element.find(".user-img").children("a").children("img").attr("height", "30px");
        new_element.find(".name").html("<a href='/profile/" + user.user_id + "/go'>" + full_name + "</a>");
        new_element.find(".ps").html("<a id='lk_show_list' onclick='TwygoUserSchedule.schedule(this,event)' href='/schedule/" + user.user_id + "/" + response.event + "'>" + (I18n.t('events.grid.programs_selected', {
          count: user.attending_programs_count
        })) + "</a>").removeClass("user_programs_selected_count").addClass(user.user_id === TwygoApplication.currentUserId ? "user_programs_selected_count" : "").attr("id", "schedule_div_" + user.user_id);
        $(".one-people.gray_btn." + response.action_name + "list").last().parent().append(new_element.hide());
        i++;
      }
      return $(".one-people.gray_btn." + response.action_name + "list").fadeIn("fast");
    },
    show_more_speakers: function(element, response) {
      var full_name, i, new_element, user;
      if (response.can_show_more_results) {
        element.attr("page", parseInt(element.attr("page")) + 1);
      } else {
        element.parent().hide();
      }
      i = 0;
      while (i < response.users.length) {
        user = response.users[i];
        new_element = $(".one-people.gray_btn.speakerlist").last().clone();
        new_element.children(".user-img").children().attr("href", "/p/" + user.user_id);
        new_element.children(".speaker_float").children(".user-img").children().attr("href", "/p/" + user.user_id);
        full_name = user.first_name + " " + user.last_name;
        full_name = full_name.truncate(20);
        new_element.find(".user-img").children("img").attr("src", user.photo);
        new_element.find(".user-img").children("img").attr("width", "30px");
        new_element.find(".user-img").children("img").attr("height", "30px");
        new_element.children(".speaker_float").children(".user-img").children("a").children("img").attr("src", user.photo);
        new_element.children(".speaker_float").children(".user-img").children("a").children("img").attr("width", "30px");
        new_element.children(".speaker_float").children(".user-img").children("a").children("img").attr("height", "30px");
        new_element.find(".name").html("" + full_name);
        new_element.find(".speaker_float .name").html("<a href='/p/" + user.user_id + "'>" + full_name + "</a>");
        if ($.trim(user.short_resume) === "") {
          new_element.find("#resume").html(I18n.t('views.events.blank_speaker_resume'));
        } else {
          new_element.find("#resume").html(user.short_resume);
        }
        $(".one-people.gray_btn.speakerlist").last().parent().append(new_element.hide());
        i++;
      }
      return $(".one-people.gray_btn.speakerlist").fadeIn("fast");
    },
    ghost: function(element) {
      var event_div;
      if ($("#results-type").size() === 0) {
        return;
      }
      event_div = $(element).parents(".event:first");
      event_div.removeClass("ghost");
      if ($("#results-type").val() !== element.attr("u_action")) {
        return event_div.addClass("ghost");
      }
    },
    user_actions: function(element, event, myProfile) {
      if (TwygoApplication.currentUserId === 0) {
        $("#link-to-login .login").click();
        return false;
      }
      if (event.preventDefault) {
        event.preventDefault();
      } else {
        event.returnValue = false;
      }
      element = $(element);
      $.ajax({
        url: element.attr("href"),
        type: element.attr("data_method"),
        dataType: "json",
        success: function(response) {
          if (!myProfile) {
            element.attr("over", "true");
          }
          TwygoEvent.actions[element.attr("u_action")].apply(element, [response]);
          return TwygoEvent.ghost(element);
        }
      });
      return false;
    },
    actions: {
      go: function(user_action_return) {
        if ($(this).attr("over") === "false") {
          TwygoEvent.update_side_bar(user_action_return, "go");
        }
        $(this).parent().parent().parent().siblings("#actions").children("#action_result").text(I18n.t("views.actions.i_go"));
        $('.active_action, #bt-action').text(I18n.t('views.actions.i_go'));
        return $("#ev-go").show().text("Eu vou / Quem vai: " + user_action_return.qtd_go);
      },
      interest: function(user_action_return) {
        if ($(this).attr("over") === "false") {
          TwygoEvent.update_side_bar(user_action_return, "interest");
        }
        $(this).parent().parent().parent().siblings("#actions").children("#action_result").text(I18n.t("views.actions.attending"));
        $("#ev-go").show().text(I18n.t("views.actions.i_have_interest_attending" + user_action_return.qtd_go));
        return $('.active_action, #bt-action').text(I18n.t("views.actions.i_have_interest"));
      },
      quit: function(user_action_return) {
        var event_id;
        event_id = user_action_return.event_id;
        $("#item_go" + event_id).remove();
        $("#item_interest" + event_id).remove();
        TwygoEvent.clean_boxes("go");
        TwygoEvent.clean_boxes("interest");
        TwygoEvent.update_side_bar(user_action_return, "quit");
        $(this).parent().parent().parent().siblings("#actions").children("#action_result").text("");
        $('.active_action').text("");
        $("#ev-go").show().text(I18n.t("views.actions.attending" + user_action_return.qtd_go));
        $("#bt-action").show().text(I18n.t("views.actions.mark"));
        $("#calendar-area .task").removeClass("selected");
        $("input:checkbox:checked").removeAttr("checked");
        $(".user_programs_selected_count").text(I18n.t("events.grid.programs_selected", {
          count: 0
        }));
        if ($(".only-my-schedule:first").is(".pressed")) {
          return $(".only-my-schedule:first").click();
        }
      }
    },
    clean_boxes: function(user_action) {
      if ($("div[u_action='item_" + user_action + "']").length === 0) {
        return $("#" + user_action + "_box").hide();
      } else {
        return $("#" + user_action + "_box").show();
      }
    },
    update_side_bar: function(user_action_return, user_action) {
      var event_id;
      $("#i_go_total").text(user_action_return.i_go_count);
      $("#i_interest_total").text(user_action_return.i_have_interest_count);
      event_id = user_action_return.event_id;
      if (user_action !== "quit") {
        return TwygoEvent.add_items_to_sidebar(user_action_return, user_action);
      } else {
        return TwygoEvent.show_first_five(user_action);
      }
    },
    add_items_to_sidebar: function(user_action_return, user_action) {
      var count_actions, event_id, event_permalink, start_date;
      $("#" + user_action + "_box").show();
      event_id = user_action_return.event_id;
      event_permalink = user_action_return.event_permalink;
      start_date = user_action_return.start_date;
      if (user_action === "go") {
        count_actions = user_action_return.qtd_go;
      } else {
        count_actions = user_action_return.qtd_interest;
      }
      if ($("#item_" + user_action + event_id).length === 0) {
        $("#" + user_action + "_box").append("<div class='item-box' u_action='item_" + user_action + "' style='display: none;' id=item_" + user_action + "" + event_id + " dt_start=" + start_date + "><a class='link-tick gray_btn' href='#'><div class='tick-class'></div><div class='number'>" + count_actions + "</div></a><a class='where' href='/e/" + event_permalink + "'>" + user_action_return.event_name + "</a></div>");
      }
      if (user_action === "go") {
        $("#item_interest" + event_id).remove();
      } else {
        if (user_action === "interest") {
          $("#item_go" + event_id).remove();
        }
      }
      TwygoEvent.remove_from_recommendations(event_id);
      return TwygoEvent.side_bar_ordering(user_action);
    },
    remove_from_recommendations: function(event_id) {
      return $.post("/recommendations/destroy", {
        event_id: event_id
      }, function(r) {
        var firstHidden;
        if (Number(r) < 1) {
          return;
        }
        firstHidden = $(".generic-box.recommended .item-box:hidden:first");
        $(".generic-box.recommended .item-box#" + event_id).hide();
        firstHidden.show();
        return $("#recommended_count").html(Math.max(Number($("#recommended_count").html()) - 1, 0));
      });
    },
    side_bar_ordering: function(user_action) {
      var elements, i, ordened_elements, show_more;
      show_more = $("#more_" + user_action).parent();
      elements = $("div[u_action='item_" + user_action + "']").map(function() {
        return {
          date: new Date($(this).attr("dt_start")),
          element: $(this)
        };
      }).get();
      elements = elements.sort(function(ea, eb) {
        return ea.date - eb.date;
      });
      ordened_elements = "";
      i = 0;
      while (i < elements.length) {
        ordened_elements += "<div class='item-box' u_action='item_" + user_action + "' style='display: none;' id=" + elements[i].element.attr("id") + " dt_start='" + elements[i].element.attr("dt_start") + "'>" + elements[i].element.html() + "</div>";
        i++;
      }
      $("#" + user_action + "_box").html(ordened_elements);
      $("#" + user_action + "_box").append("<div class='more' style=''><a href='/go' id='more_" + user_action + "'>E mais <b id='count'></b></a></div>");
      return TwygoEvent.show_first_five(user_action);
    },
    show_first_five: function(user_action) {
      var elements_to_show_go, elements_to_show_interest;
      elements_to_show_go = 5 - $("div[u_action=\"item_go\"]:visible").length;
      elements_to_show_interest = 5 - $("div[u_action=\"item_interest\"]:visible").length;
      $("div[u_action=\"item_go\"]:hidden").each(function(index, element) {
        if (index < elements_to_show_go) {
          return $(this).show();
        }
      });
      $("div[u_action=\"item_interest\"]:hidden").each(function(index, element) {
        if (index < elements_to_show_interest) {
          return $(this).show();
        }
      });
      $("#" + user_action + "_box").show();
      if (user_action === "go") {
        TwygoEvent.clean_boxes("interest");
      } else {
        if (user_action === "interest") {
          TwygoEvent.clean_boxes("go");
        }
      }
      return TwygoEvent.show_hide_more_items();
    },
    show_hide_more_items: function() {
      var over_go, over_interest;
      over_go = $("div[u_action='item_go']:hidden").length;
      over_interest = $("div[u_action='item_interest']:hidden").length;
      if (over_go <= 0) {
        $("#more_go").parent().hide();
      } else {
        $("#more_go").parent().show();
      }
      if (over_interest <= 0) {
        $("#more_interest").parent().hide();
      } else {
        $("#more_interest").parent().show();
      }
      $("#more_go").children().text(over_go);
      return $("#more_interest").children().text(over_interest);
    },
    currentSpeaker: 0,
    speakerCount: 0,
    adjustScrollButtonVisibility: function() {
      $(".event-show-prev-speaker").css({
        visibility: this.currentSpeaker === 0 ? "hidden" : "visible"
      });
      return $(".event-show-next-speaker").css({
        visibility: this.currentSpeaker + 1 >= this.speakerCount ? "hidden" : "visible"
      });
    },
    previousSpeaker: function() {
      if (this.currentSpeaker === 0) {
        return;
      }
      this.currentSpeaker = this.currentSpeaker - 1;
      $(".event-show-speaker").animate({
        left: (-(100 * this.currentSpeaker)) + "%"
      });
      return this.adjustScrollButtonVisibility();
    },
    nextSpeaker: function() {
      if (this.currentSpeaker + 1 >= this.speakerCount) {
        return;
      }
      this.currentSpeaker = this.currentSpeaker + 1;
      $(".event-show-speaker").animate({
        left: (-(100 * this.currentSpeaker)) + "%"
      });
      return this.adjustScrollButtonVisibility();
    },
    share: {
      twitter: function(event_id) {
        return $.get("/o/" + TwygoApplication.currentOrganizationId + "/spread", {
          event_id: event_id
        }, function(response) {
          if (response.status === "ok") {
            return TwygoApplication.setMessage("success", I18n.t("sucessfuly_shared_on_twitter", {
              user: response.twitterUser
            }));
          } else {
            return eval(response.moveOn);
          }
        });
      }
    },
    expand: function(id) {
      $(".model-events" + id).slideToggle("fast");
      return $(".index" + id).toggleClass("collapse");
    },
    bindScrollBottom: function() {
      $(window).resize(function() {
        return $(window).trigger("scroll");
      });
      $(window).scroll(function() {
        var loadMoreXhr, new_url;
        if ($(".event-box:last").attr("show_more") !== "true") {
          return;
        }
        if ($(window).scrollTop() === $(document).height() - $(window).height()) {
          if ($(".event-box:last").data("loading")) {
            return;
          }
          $(".event-box:last").data("loading", true);
          $("#details").after($("<div>").addClass("events-loader").text(I18n.t("javascripts.loading_more_events")));
          new_url = $(".event-box:last").attr("next_page");
          return loadMoreXhr = $.ajax({
            url: new_url,
            type: "get",
            dataType: "html",
            success: function(response) {
              $(".events-loader").remove();
              $("#details").find('.row').append(response);
              return $(window).trigger("scroll");
            }
          });
        }
      });
      return $(window).trigger("scroll");
    },
    uploadCertificate: function(action) {
      return $("#event-certificate-upload > .field").upload_form({
        callback: function() {
          return $("#event-certificate-upload").twygomodal();
        },
        params: {
          action: action,
          param: "model[image_url]",
          success_action: "TwygoEvent.changeCertificate",
          files_allowed: /(\.|\/)(pdf)$/i,
          files_allowed_error_msg: I18n.t("javascripts.certificate_must_be_in_pdf", {
            max_size: TwygoCommon.megabytes(2)
          })
        }
      });
    },
    changeCertificate: function(e, object) {
      $("#tab_certificate").find("#event_certificate_id").val(object.id);
      $("#tab_certificate").find("#certificate-description").find(".name").text(object.name);
      $("#tab_certificate").find("#certificate-description").find(".size").text(object.size + " bytes");
      $("#tab_certificate").find("#certificate-description").find(".view-certificate").attr("href", object.path);
      $("#tab_certificate").find("#certificate-description").show();
      $("#tab_certificate :input[name*=certificate_params]").prop("disabled", false);
      return $.twygomodal.close();
    },
    removeCertificate: function() {
      $("#tab_certificate :input[name*=certificate_params]").prop("disabled", true);
      $("#tab_certificate").find("#event_certificate_id").val("");
      return $("#tab_certificate").find("#certificate-description").hide();
    },
    disableEventFormButtons: function() {
      $('#submit-btn').prop('disabled', true);
      return $('#save-n-next-btn').prop('disabled', true);
    },
    enableEventFormButtons: function() {
      $('#submit-btn').prop('disabled', false);
      return $('#save-n-next-btn').prop('disabled', false);
    },
    previewCertificate: function() {
      var params;
      params = {};
      $.each($(".event-form :input[name*=certificate_params]"), function(i, field) {
        var $field;
        $field = $(field);
        if ($field.is("[type=checkbox]")) {
          return params[$field.attr("name")] = $field.is(":checked") ? 1 : 0;
        } else {
          return params[$field.attr("name")] = $field.val();
        }
      });
      params["template"] = $("#event_certificate_id").val();
      return $.ajax({
        url: "/o/" + TwygoApplication.currentOrganizationId + "/preview_certificate",
        data: params,
        dataType: 'json',
        type: 'put'
      });
    },
    initPayment: function() {
      $(".retry-checkout").on("click", function() {
        return $.ajax({
          url: "/e/" + TwygoApplication.object.id + "/retry_checkout",
          type: 'get',
          success: function(response) {
            return window.location.href = response.checkout;
          },
          error: function(response, text) {
            return TwygoFlashMessage.setMessage(response.responseJSON.status, response.responseJSON.message);
          }
        });
      });
      $('.payment_erede').on("click", function() {
        return $.ajax({
          url: "/payments/" + TwygoApplication.object.id + "/create_payment/" + TwygoApplication.currentOrganizationId,
          type: 'POST',
          data: {
            name: $('#card-name').val(),
            card_number: $('#card-number').val(),
            mouth: $('#card-mouth').val(),
            year: $('#card-year').val(),
            card_security: $('#card-security').val()
          },
          success: function(response) {
            TwygoFlashMessage.setMessage(response.statusText, response.message);
            return setTimeout(function() {
              return window.location = "/e/" + TwygoApplication.object.id + "/learn";
            }, 3000);
          },
          error: function(response, text) {
            return TwygoFlashMessage.setMessage(response.responseJSON.statusText, response.responseJSON.message);
          }
        });
      });
      return $('.payment_installment_erede').on("click", function() {
        return $.ajax({
          url: "/payments/" + TwygoApplication.object.id + "/create_payment/" + TwygoApplication.currentOrganizationId,
          type: 'POST',
          data: {
            name: $('#installments-card-name').val(),
            card_number: $('#installments-card-number').val(),
            month: $('#installments-card-month').val(),
            year: $('#installments-card-year').val(),
            card_security: $('#installments-card-security').val(),
            installments: $('#installments-times option:selected').val()
          },
          beforeSend: function() {
            return $('#payment-installment-info').addClass('ajax-loading');
          },
          success: function(response) {
            window.location = "/e/" + TwygoApplication.object.id + "/learn";
            return TwygoFlashMessage.setMessage(response.statusText, response.message);
          },
          error: function(response, text) {
            return TwygoFlashMessage.setMessage(response.responseJSON.statusText, response.responseJSON.message);
          },
          complete: function() {
            return setTimeout(function() {
              return $('#payment-installment-info').removeClass('ajax-loading');
            }, 2500);
          }
        });
      });
    },
    initAttachments: function(event_id) {
      if (event_id == null) {
        event_id = TwygoApplication.object.id;
      }
      $("#event-show-attachment-list").on("click", ".event-show-attachment-download", function() {
        var $parent;
        $parent = $(this).closest(".event-show-attachment");
        $(this).attr("href", "/e/" + event_id + "/participants/" + TwygoEvent.student_id + "/attachment/" + ($parent.attr("attachment-id")) + "/download");
        return $(this).attr("target", "_blank");
      });
      $("#event-show-attachment-list").on("click", ".event-show-attachment-destroy", function() {
        var $parent;
        $parent = $(this).closest(".event-show-attachment");
        if (confirm(I18n.t("javascripts.delete_attachment_confirm"))) {
          $.ajax({
            url: "/e/" + event_id + "/participants/" + TwygoEvent.student_id + "/attachment/" + ($parent.attr("attachment-id")) + "/destroy",
            data: {
              attachment_id: $parent.attr("attachment-id")
            },
            type: "delete",
            success: function(response) {
              return $("#event-show-attachment-list").find(".event-show-attachment[attachment-id=" + response.id + "]").remove();
            }
          });
        }
        return false;
      });
      $("#attachment").S3Uploader({
        remove_completed_progress_bar: false,
        allow_multiple_files: false,
        before_add: function() {
          $("#progress_div .upload").remove();
          return true;
        },
        progress_bar_target: $('#progress_div'),
        click_submit_target: $('#button_send_file')
      });
      $(".time-text").map(function() {
        var $this, d;
        $this = $(this);
        d = new Date($this.attr("raw-time"));
        return $this.text(I18n.strftime(d, I18n.lookup("time.formats.full_time")));
      });
      $("#event-show-attachment-control-bar .skip-attachments").click(function() {
        return $(".tab_selector[list='tab-payment']").click();
      });
      return $('#attachment').bind("ajax:success", function(e, response) {
        var $att, $controls, $sentAt, sentText;
        if (typeof response !== "object") {
          response = JSON.parse(response);
        }
        $("#progress_div .upload").remove();
        $att = $("<div class='event-show-attachment' attachment-id='" + response.id + "'>");
        $att.append($("<div class='event-show-attachment-name'>").text(response.name));
        $att.append($("<div class='event-show-attachment-owner'>").text(response.owner));
        $sentAt = $("<div class='event-show-attachment-sent-at time-text'>");
        $sentAt.attr("raw-time", response.sent_at);
        sentText = I18n.strftime(new Date(response.sent_at), I18n.lookup("time.formats.full_time"));
        $sentAt.text(sentText);
        $att.append($sentAt);
        $controls = $("<div class='event-show-attachment-controls'>");
        $controls.append($("<a class='event-show-attachment-download'>").attr("title", I18n.t("views.download")));
        $controls.append(" ");
        $controls.append($("<a class='event-show-attachment-destroy'>").attr("title", I18n.t("_trash")));
        $att.append($controls);
        return $("#event-show-attachment-body").append($att);
      });
    },
    setStudent: function(student_id) {
      return TwygoEvent.student_id = student_id;
    },
    fillAddressByCEP: function() {
      var cep, validacep;
      cep = $("#user_zip_code").val().replace(/\D/g, '');
      if (cep !== '') {
        validacep = /^[0-9]{8}$/;
        if (validacep.test(cep)) {
          $("#cep-loader").fadeIn("fast");
          return $.getJSON('//viacep.com.br/ws/' + cep + '/json/?callback=?', function(dados) {
            if (!('erro' in dados)) {
              $('#user_address').val(dados.logradouro);
              $('#user_city').val(dados.localidade);
              $('#user_state').val(dados.uf);
              $('#user_district').val(dados.bairro);
              $('#user_country').val(I18n.t("countries.BR"));
              $("#cep-loader").fadeOut("fast");
              return $("#zip-code-error-extern").fadeOut("fast");
            } else {
              $("#zip-code-error-extern").text(I18n.t('zip_code_not_found'));
              $("#zip-code-error-extern").fadeIn("fast");
              $("#cep-loader").fadeOut("fast");
              $('#user_address').val("");
              $('#user_city').val("");
              $('#user_state').val("");
              $('#user_district').val("");
              $('#user_country').val("");
              return setTimeout(function() {
                return $("#zip-code-error-extern").fadeOut("fast");
              }, 5000);
            }
          });
        } else {
          $("#zip-code-error-extern").text(I18n.t('invalid_zip_code'));
          $("#zip-code-error-extern").fadeIn("fast");
          $("#cep-loader").fadeOut("fast");
          $('#user_address').val("");
          $('#user_city').val("");
          $('#user_state').val("");
          $('#user_district').val("");
          $('#user_country').val("");
          return setTimeout(function() {
            return $("#zip-code-error-extern").fadeOut("fast");
          }, 5000);
        }
      } else {
        return $("#zip-code-error-extern").fadeOut("fast");
      }
    }
  };

}).call(this);
(function() {
  this.TwygoFavorite = {
    addFavorite: function(element, event) {
      var favorite, id;
      element = $(element);
      favorite = element.attr('favorite');
      if (favorite) {
        return;
      }
      id = element.attr('orgid');
      return $.ajax({
        url: "/favorite/add/" + id,
        type: "post",
        dataType: "json",
        success: function(response) {
          if (response.favorite !== 'Cancel') {
            element.text(I18n.t('views.organization_favorite')).removeClass("bt-add-favorite").addClass("bt-favorite").attr('favorite', 'true').removeAttr('onclick');
            return TwygoFlashMessage.setMessage('notice', I18n.t('views.organization_added_favorite'));
          }
        }
      });
    },
    removeFavorite: function(element, callBack) {
      var id;
      element = $(element);
      id = element.attr('orgid');
      return $.ajax({
        url: "/favorite/remove/" + id,
        type: "post",
        dataType: "json",
        success: function(response) {
          if (response.favorite !== 'Cancel') {
            element.parents('div.org').remove();
            return TwygoFlashMessage.setMessage('notice', I18n.t('views.organization_removed_favorite'));
          }
        }
      });
    },
    bindSearchInputs: function() {
      TwygoOrganization.removeEnterKey("favorite_name");
      return $("#favorite_name").on("keyup", function() {
        if (!($.trim($(this).val()).length < 2)) {
          return TwygoFavorite.triggerSearch();
        }
      });
    },
    triggerSearch: function() {
      clearInterval(TwygoFavorite.searchTrigger);
      return TwygoFavorite.searchTrigger = setTimeout(TwygoFavorite.search, 350);
    },
    search: function() {
      var organizationName;
      organizationName = $.trim($("#favorite_name").val());
      TwygoFavorite.showDetailsLoadingIndicator();
      return $.ajax({
        url: "/o/search",
        data: {
          name: organizationName,
          user: TwygoApplication.currentUserId
        },
        dataType: 'json',
        type: 'post',
        success: function(response) {
          TwygoFavorite.hideDetailsLoadingIndicator();
          return TwygoFavorite.organizationsLists(response);
        }
      });
    },
    organizationsLists: function(response) {
      var i, len, ref, result;
      if (response.results.length === 0) {
        $(".organizationList").hide();
      } else {
        $(".organizationList").show();
      }
      $(".organizationList").html("<ul>");
      ref = response.results;
      for (i = 0, len = ref.length; i < len; i++) {
        result = ref[i];
        $(".organizationList ul").append("<li> <div class='orgLogo' style='background-image: url(" + (TwygoEventManagement.logo_src(result)) + ")'></div> <div class='orgName'>" + (result.name.truncate(30)) + "</div> <div class='fadeOrg'></div> <div id='addOrg' class='addOrg'> <a href='#' onClick='TwygoFavorite.addFavoriteFromSearch(this, " + result.id + ");$(this).removeAttr(\"onclick\");'>" + (I18n.t('views.add')) + "</a> </div> </li>");
        $("#" + result.id).data("result", result);
        $(".organizationList").show();
      }
      return $(".organizationList ul").append("<li class='otherOrg' onClick='TwygoFavorite.closeOrgList()'>" + (I18n.t('views.cancel')) + "</li>");
    },
    addFavoriteFromSearch: function(element, id) {
      safePreventEvent(element);
      TwygoFavorite.showDetailsLoadingIndicator();
      return $.ajax({
        url: "/favorite/add/" + id,
        type: "post",
        dataType: 'json',
        success: function(response) {
          var organization;
          TwygoFavorite.closeOrgList();
          organization = response.favorite.organization;
          $(".favorites-area").append("<div class='org favorite_new' style='display:none' orgid='" + organization.id + "'> <div class='organization-image'> <img src='" + response.logo + "' alt='Logo - " + organization.name + "' title='Logo - " + organization.name + "' /> </div> <div class='organization-name'> <span> <a href='/o/" + response.permalink + "'>" + (organization.name.truncate(30)) + "</a> </span> <br/> " + ([organization.city + '/' + organization.state, organization.country, organization.email].join(' - ').truncate(48)) + " <br/> <a href='/o/" + response.permalink + "' class='scheduled' > Eventos agendados: " + response.event_count + " </a> <br/> <a href='#' orgid='" + organization.id + "' onclick = 'TwygoFavorite.removeFavorite(this, event)' class='remove-favorite'> " + (I18n.t('views.organization_remove_favorite')) + " </a> </div> </div>");
          $(".no-result-tuto").fadeOut('fast');
          $(".favorite_new").fadeIn('slow');
          return TwygoFavorite.hideDetailsLoadingIndicator();
        }
      });
    },
    closeOrgList: function() {
      $(".organizationList").fadeOut("fast");
      return $("#favorite_name").val("");
    },
    showDetailsLoadingIndicator: function() {
      return $(".loading-org").fadeIn("fast");
    },
    hideDetailsLoadingIndicator: function() {
      return $(".loading-org").fadeOut("fast");
    },
    bind_tabs: function() {
      return $("#organizations .tab_selector").click(function() {
        var oid;
        $(".tab").hide().removeClass("opened");
        $(".tab_selector").removeClass("selected");
        $(this).addClass("selected");
        oid = $(this).attr("list");
        return $("#" + oid).fadeIn("slow");
      });
    }
  };

}).call(this);
(function() {
  this.TwygoFeed = {
    initialize: function(paginate_discussions) {
      if (paginate_discussions == null) {
        paginate_discussions = 1;
      }
      TwygoFeed.scrollLoad = true;
      return TwygoFeed.paginate_discussions = parseInt(paginate_discussions);
    },
    feedInfinitScroll: function() {
      return $.ajax({
        url: "/o/" + TwygoApplication.currentOrganizationId + "/feed",
        type: 'GET',
        data: {
          page: TwygoFeed.paginate_discussions,
          render_discussion: true
        },
        beforeSend: function() {
          return $("#feed_discussions").parent().addClass("ajax-loading");
        },
        success: function(response) {
          $("#feed_discussions").append(response);
          TwygoFeed.scrollLoad = true;
          return TwygoFeed.paginate_discussions += 1;
        },
        complete: function() {
          return $("#feed_discussions").parent().removeClass("ajax-loading");
        }
      });
    }
  };

}).call(this);
(function() {
  this.TwygoFlashMessage = {
    setMessage: function(type, message, options) {
      var default_options, flashId, onClose;
      if (message !== null && message !== "") {
        if (!!options) {
          options = JSON.parse(options);
        }
        default_options = {
          onClose: null,
          timeToClose: 6000
        };
        options = $.extend(default_options, options);
        window.artiaFlashCount = (isNaN(parseInt(window.artiaFlashCount)) ? 0 : window.artiaFlashCount + 1);
        flashId = "flash_" + window.artiaFlashCount;
        onClose = ($.isFunction(options.onClose) ? options.onClose : false);
        $("#flash-area").html($("<div>").attr("id", flashId).addClass("flash " + type).append(message + "   ").append($("<a>").addClass("close").attr("href", "javascript:void(0);").text("Fechar").click(function() {
          clearTimeout(window.artiaFlashTimeout[flashId]);
          if (onClose) {
            onClose.call(this);
          }
          $("#" + flashId).slideUp();
          return false;
        })));
        if (!window.artiaFlashTimeout) {
          window.artiaFlashTimeout = [];
        }
        if (options.timeToClose) {
          return window.artiaFlashTimeout[flashId] = setTimeout(function() {
            return $("#" + flashId).slideUp();
          }, options.timeToClose);
        }
      }
    },
    setMessageWithTimeToOpen: function(type, message, timeToOpen, options) {
      return setTimeout(function() {
        return TwygoFlashMessage.setMessage(type, message, options);
      }, timeToOpen);
    }
  };

}).call(this);
(function() {
  this.TwygoGameRule = {
    loadLog: function(organization_id, page) {
      var filter_actions, filter_period_end, filter_period_start, professional_ids;
      if (page == null) {
        page = null;
      }
      professional_ids = $('#professional_name').val();
      filter_actions = $('#action').val();
      filter_period_start = $('#filterLogsPeriodStart').val();
      filter_period_end = $('#filterLogsPeriodEnd').val();
      return $.ajax({
        url: "/o/" + organization_id + "/game_rules/load_logs",
        dataType: 'json',
        data: {
          professional_ids: professional_ids,
          filter_actions: filter_actions,
          filter_period_start: filter_period_start,
          filter_period_end: filter_period_end,
          page: page
        },
        type: 'get',
        beforeSend: function() {
          return $('#tbody_game_rules_logs').addClass('ajax-loading');
        },
        success: function(data) {
          var html, msg, template;
          html = '';
          template = $("#log_game_rule_mustache").html();
          $('#tbody_game_rules_logs').html('');
          if (data.logs && data.logs.length > 0) {
            $.each(data.logs, function(_index, element) {
              html += TwygoGameRule.renderMustache(template, element);
            });
          } else {
            msg = I18n.t('logger.not_found');
            html = "<tr><td colspan='4'><center class='not-found'>" + msg + "</center></td></tr>";
          }
          $('#tbody_game_rules_logs').append(html);
          if (!!data.html) {
            return $(".will_paginate_game_rules").each(function(_index, e) {
              return e.outerHTML = data.html;
            });
          }
        },
        complete: function() {
          return $('#tbody_game_rules_logs').removeClass('ajax-loading');
        }
      });
    },
    renderMustache: function(template, element) {
      return Mustache.render(template, element);
    }
  };

}).call(this);
(function() {
  this.TwygoGroupManagement = {
    initialize: function(params) {
      this.params = (typeof params === "object") && params || {};
      this.columns = this.params.columns || ["name", "count", "topics", "edit", "delete"];
      this.table_div = this.params.table_div || "#groups-page";
      this.participants = [];
      this.load();
      return this.bind();
    },
    bind: function() {
      return $("#add-group").off().on("click", this["new"]);
    },
    load: function() {
      var t;
      (t = TwygoGroupManagement).clearTable();
      return this.requestList(function(list) {
        t.list = list;
        t.buildTable();
        if (t.list.length === 0) {
          return t.table().hide();
        }
      });
    },
    requestList: function(success) {
      if (window.$loadingGroupList) {
        return;
      }
      window.$loadingGroupList = true;
      return $.ajax({
        url: "/o/" + TwygoApplication.currentOrganizationId + "/groups",
        success: success,
        dataType: 'json',
        complete: function(response) {
          return window.$loadingGroupList = false;
        }
      });
    },
    table: function() {
      return $("table#groups");
    },
    clearTable: function() {
      return this.table().find("tr:not(:has(th))").remove();
    },
    buildTable: function() {
      var item, j, len, ref, results;
      ref = this.list;
      results = [];
      for (j = 0, len = ref.length; j < len; j++) {
        item = ref[j];
        results.push(this.table().append(this.row(item)));
      }
      return results;
    },
    defaultHeader: function() {
      return $(".page-header").text(I18n.t("views.event_management.groups"));
    },
    sanitizeText: function(text) {
      return (text || "").replace(/&(?!\w+([;\s]|$))/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;");
    },
    row: function(item) {
      var _del, _edit, a, column, count, del, edit, item_json, j, len, name, ref, td, tr;
      name = this.sanitizeText(item.name);
      count = item.topics_total || 0;
      edit = I18n.t("common.edit");
      del = I18n.t("common.delete");
      item_json = {
        id: item.id,
        name: item.name
      };
      tr = $("<tr class='group-row' name='" + name + "' id='group-" + item.id + "'>");
      ref = this.columns;
      for (j = 0, len = ref.length; j < len; j++) {
        column = ref[j];
        switch (column) {
          case "name":
            tr.append($("<td class='ellipsis' title='" + name + "'>").text(name));
            break;
          case "count":
            tr.append($("<td class='ellipsis center topics_count' title='" + count + "'>").text(count));
            break;
          case "topics":
            td = $("<td>");
            td.append($("<button class='btn btn-primary ghost inline'>").text("" + (I18n.t('participants'))).click(function() {
              return TwygoGroupManagement.loadParticipants(item.id);
            }));
            tr.append(td);
            break;
          case "edit":
            td = $("<td class='ellipsis actions-btn' title='" + edit + "' align='right'>");
            _edit = $("<a href=\"#" + item.id + "\" class=\"group-edit\" title=\"" + edit + "\">\n  <i class=\"icon-pencil\"></i>\n  <small>" + edit + "</small>\n</a>");
            a = _edit.click(function() {
              return TwygoGroupManagement.edit(item.id);
            });
            tr.append(td.append(a));
            break;
          case "delete":
            td = $("<td class='ellipsis actions-btn' title='" + del + "' align='right'>");
            _del = $("<a href=\"#" + item.id + "\" class=\"group-delete\" title=\"" + del + "\">\n  <i class=\"icon-times\"></i>\n    <small>" + del + "</small>\n</a>");
            a = _del.click(function() {
              return TwygoGroupManagement.destroy(item_json);
            });
            tr.append(td.append(a));
        }
      }
      return tr;
    },
    loadParticipants: function(id) {
      TwygoGroupManagement.check_helper();
      return $(TwygoGroupManagement.helper + " #manage-groups").load("/o/" + TwygoApplication.currentOrganizationId + "/groups/" + id + "/get_participants", function() {
        return $(TwygoGroupManagement.helper + " #table-groups-info").fadeOut("fast", function() {
          return $(TwygoGroupManagement.helper + " #manage-groups").fadeIn("fast");
        });
      });
    },
    "new": function() {
      TwygoGroupManagement.check_helper();
      return $(TwygoGroupManagement.helper + " #manage-groups").load("/o/" + TwygoApplication.currentOrganizationId + "/groups/new", function() {
        return $(TwygoGroupManagement.helper + " #table-groups-info").fadeOut("fast", function() {
          return $(TwygoGroupManagement.helper + " #manage-groups").fadeIn("fast", function() {
            return TwygoGroupManagement.initializeForm();
          });
        });
      });
    },
    edit: function(id) {
      TwygoGroupManagement.check_helper();
      return $(TwygoGroupManagement.helper + " #manage-groups").load("/o/" + TwygoApplication.currentOrganizationId + "/groups/" + id + "/edit", function() {
        return $(TwygoGroupManagement.helper + " #table-groups-info").fadeOut("fast", function() {
          return $(TwygoGroupManagement.helper + " #manage-groups").fadeIn("fast", function() {
            return TwygoGroupManagement.initializeForm();
          });
        });
      });
    },
    removeAssociation: function(group_id, event_id) {
      var answer;
      answer = confirm(I18n.t("views.groups.are_you_sure_destroy"));
      if (answer) {
        return $.ajax({
          url: "/o/" + TwygoApplication.currentOrganizationId + "/groups/" + group_id + "/remove_association",
          dataType: "json",
          type: "delete",
          data: {
            event_id: event_id
          },
          success: function(response) {
            window.location.reload();
            return TwygoFlashMessage.setMessage("success", response.success);
          },
          error: function(response) {
            var message_error, ref;
            message_error = (response != null ? (ref = response.responseJSON) != null ? ref.message : void 0 : void 0) || (response != null ? response.error : void 0);
            return TwygoFlashMessage.setMessage("error", message_error);
          }
        });
      }
    },
    destroy: function(item) {
      var ModalRemoveCoupons, answer;
      ModalRemoveCoupons = TwygoModalRemoveItem;
      ModalRemoveCoupons.initialize({
        id: 'modal-remove-groups',
        configuration: {
          url: "/o/" + TwygoApplication.currentOrganizationId + "/groups/",
          reload: false
        },
        callbacks: {
          success: function(response) {
            TwygoGroupManagement.load();
            return TwygoFlashMessage.setMessage("notice", I18n.t("group_destroy_success"));
          },
          error: function(response) {
            return TwygoCommon.setMessage("error", response.responseJSON.msg);
          }
        }
      });
      return answer = ModalRemoveCoupons.open(item);
    },
    initializeForm: function(isNew) {
      var formClass, prefix;
      if (isNew == null) {
        isNew = $("#new_group").length > 0;
      }
      TwygoGroupManagement.saveNotRepeat();
      prefix = isNew ? "new" : "edit";
      if ($("#" + prefix + "_group").find(".field_with_errors:eq(1)").length > 0) {
        setTimeout((function() {
          return $("#" + prefix + "_group").find(".field_with_errors:eq(1)").children().focus();
        }), 400);
      } else if ($("#" + prefix + "_group").find(".field_error:first").length > 0) {
        setTimeout((function() {
          return $("#" + prefix + "_group").find(".field_error:first").focus();
        }), 400);
      } else {
        setTimeout((function() {
          return $("#group_name").focus();
        }), 400);
      }
      if (!isNew) {
        $(".edit_group").find(".save_and_new").hide();
        formClass = "edit_group";
      } else {
        $(".new_group").find(".save").click(function() {
          return $(".new_group").submit();
        });
        formClass = "new_group";
      }
      $("#group-cancel").on("click", function() {
        TwygoGroupManagement.check_helper();
        return $(TwygoGroupManagement.helper + " #manage-groups").fadeOut("fast", function() {
          return $(TwygoGroupManagement.helper + " #table-groups-info").fadeIn("fast", function() {});
        });
      });
      this.bindForm();
      this.fixCategoryStripes("categories");
      return $("." + formClass).on("ajax:complete", function(e, response) {
        var ref;
        if (response.responseText && response.responseText.indexOf("error_explanation") === -1) {
          return TwygoGroupManagement.saveSuccess(response);
        } else if ((response != null ? (ref = response.responseJSON) != null ? ref.status : void 0 : void 0) === "ok") {
          return TwygoGroupManagement.saveSuccess(response);
        } else {
          return TwygoGroupManagement.saveError(response);
        }
      });
    },
    bindForm: function() {
      $(".new_category input[type=text]").on("keydown", function(e) {
        if ((e.keyCode || e.which) === 13) {
          $(this).siblings(".add_category").click();
          return false;
        }
      });
      return $(".categories").on("change", ".category_item", function() {
        return $(this).parent().find("input[type=hidden]").val($(this).val());
      });
    },
    saveSuccess: function(response) {
      var responseJSON;
      TwygoGroupManagement.load();
      TwygoGroupManagement.table().show();
      try {
        responseJSON = JSON.parse(response.responseText);
      } catch (error) {}
      if ((responseJSON != null ? responseJSON.status : void 0) === "ok") {
        $("#group-cancel").click();
      } else {
        TwygoGroupManagement.magickInputs(response);
        TwygoGroupManagement.initializeForm();
        $("body").animate({
          scrollTop: 165
        }, "fast");
      }
      return TwygoFlashMessage.setMessage("notice", I18n.t("group_save_success"));
    },
    saveError: function(response) {
      TwygoGroupManagement.magickInputs(response);
      return TwygoGroupManagement.initializeForm();
    },
    magickInputs: function(response) {
      var form, j, len, magicwords, param, params, results;
      magicwords = ["utf8", "_method", "authenticity_token", "organization_id"];
      TwygoGroupManagement.check_helper();
      form = $(TwygoGroupManagement.helper + " #manage-groups form");
      if (response.responseText.indexOf("form") === -1) {
        params = form.serializeArray();
        form.html(response.responseText);
        results = [];
        for (j = 0, len = params.length; j < len; j++) {
          param = params[j];
          if (jQuery.inArray(param.name, magicwords) !== -1) {
            results.push(form.append("<input type='hidden' name='" + param.name + "' value='" + param.value + "'>"));
          } else {
            results.push(void 0);
          }
        }
        return results;
      } else {
        return $(TwygoGroupManagement.helper + " #manage-groups").html(response.responseText);
      }
    },
    saveNotRepeat: function() {
      return $(".save, .save_and_new").off("click").click(function() {
        return $(this).off().on("click", function(e) {
          return safePreventEvent(e);
        });
      });
    },
    fixCategoryStripes: function(categories) {
      var group;
      group = $("#" + categories);
      group.find(".category:odd").removeClass("even").addClass("odd");
      return group.find(".category:even").addClass("even").removeClass("odd");
    },
    addCategory: function(categories) {
      var field, group, list, value;
      group = $("div#" + categories);
      field = group.find(".new_category input[type=text]");
      value = $.trim(field.val().toString());
      field.focus();
      if (value === "") {
        return;
      }
      list = $.map(group.find(".categories input[type=hidden]"), function(el) {
        return $(el).val().toString().toLowerCase();
      });
      if (list.indexOf(value.toLowerCase()) >= 0) {
        return TwygoFlashMessage.setMessage("alert", I18n.t("views.question_lists.category_already_added"));
      }
      field.val("");
      group.find(".categories").append($("<div class='category item new'>").attr("title", value).append($("<input class='ellipsis form-control' name='" + categories + "[]' value='" + value + "' type='text' >")).append($("<div class='item-action'> <a class='remove_category' onclick='TwygoQuestionListManagement.editCategory(this)' href='javascript:void(0)'><i class='icon-pencil'></i></a> <a class='edit_category' onclick='TwygoQuestionListManagement.removeCategory(this)' href='javascript:void(0)'><i class='icon-times'></i></a> </div>")));
      return this.fixCategoryStripes(categories);
    },
    editCategory: function(category) {
      $(category).closest('.category').find("input[type=text]").removeProp('readonly').select();
      return $(category).closest('.category').find("input[type=text]").removeAttr('readonly').select();
    },
    removeCategory: function(category) {
      var categories;
      categories = $(category).parents(".new-field").attr("id");
      $(category).closest('.category').remove();
      return this.fixCategoryStripes(categories);
    },
    cancelButton: function() {
      $('#breadcrumb').text('');
      TwygoGroupManagement.defaultHeader();
      TwygoGroupManagement.check_helper();
      return $(TwygoGroupManagement.helper + " #manage-groups").fadeOut("fast", function() {
        return $(TwygoGroupManagement.helper + " #table-groups-info").fadeIn("fast");
      });
    },
    inputTemplate: function(is_checked) {
      var _tmp;
      return _tmp = "<span class=\"checkbox-content\">\n  <span class=\"input\">\n    <input type='checkbox' " + is_checked + " disabled>\n    <span class=\"checkmark\"></span>\n  </span>\n</span>";
    },
    loadGroupParticipants: function(list) {
      var _edit_participant, a, can_answer, can_create, can_moderate, can_visualize, edit, event_id, event_name, item, j, len, name, results, td, tr;
      TwygoGroupManagement.participants = list;
      event_name = "";
      results = [];
      for (j = 0, len = list.length; j < len; j++) {
        item = list[j];
        name = this.sanitizeText(item.first_name + " " + item.last_name + " (" + item.email + ")");
        can_visualize = item.can_visualize;
        can_create = item.can_create;
        can_answer = item.can_answer;
        can_moderate = item.can_moderate;
        event_id = item.event_id === null ? 0 : item.event_id;
        edit = I18n.t("common.edit");
        if (((event_name !== item.event_name) && (item.event_name !== null)) || (item.event_name === null && $("table#group_participants tr").length === 0)) {
          if (item.event_name !== null) {
            event_name = item.event_name;
          }
          tr = $("<tr class='group-event-row' style='font-weight:bold' id='" + event_id + "'>");
          tr.append($("<td class='ellipsis' title='" + event_name + "'>").text("" + event_name));
          tr.append($("<td class='ellipsis center' width='10%' style='text-align: center;'>").text(I18n.t('views.events.show')));
          tr.append($("<td class='ellipsis center' width='10%' style='text-align: center;'>").text(I18n.t('create')));
          tr.append($("<td class='ellipsis center' width='10%' style='text-align: center;'>").text(I18n.t('comment')));
          tr.append($("<td class='ellipsis center' width='10%' style='text-align: center;'>").text(I18n.t('moderate')));
          tr.append($("<td class='ellipsis center' width='5%'>").text(""));
          $('table#group_participants').append(tr);
        }
        tr = $("<tr class='group-participant-row' name='" + name + "' id='" + item.user_id + "'>");
        tr.append($("<td class='ellipsis' title='" + name + "'>").text(name));
        tr.append($("<td class='ellipsis center new' title='" + (I18n.t('views.groups.can_visualize')) + "' >").html(TwygoGroupManagement.inputTemplate("" + (can_visualize === true ? 'checked' : ''))));
        tr.append($("<td class='ellipsis center' title='" + (I18n.t('views.groups.can_create')) + "'>").html(TwygoGroupManagement.inputTemplate("" + (can_create === true ? 'checked' : ''))));
        tr.append($("<td class='ellipsis center' title='" + (I18n.t('views.groups.can_answer')) + "'>").html(TwygoGroupManagement.inputTemplate("" + (can_answer === true ? 'checked' : ''))));
        tr.append($("<td class='ellipsis center' title='" + (I18n.t('views.groups.can_moderate')) + "'>").html(TwygoGroupManagement.inputTemplate("" + (can_moderate === true ? 'checked' : ''))));
        td = $("<td class='ellipsis actions-btn' title='" + edit + "' align='right'>");
        _edit_participant = $("<a href=\"#user-" + item.user_id + "\" class=\"group-participant-edit\" title=\"" + edit + "\">\n  <i class=\"icon-pencil\"></i>\n  <small>" + edit + "</small>\n</a>");
        a = _edit_participant.click(function() {
          return TwygoGroupManagement.editParticipant(item.group_id, $(this).parent().parent().attr("id"));
        });
        tr.append(td.append(a));
        results.push($('table#group_participants').append(tr));
      }
      return results;
    },
    addEvent: function(id) {
      TwygoGroupManagement.check_helper();
      return $(TwygoGroupManagement.helper + " #manage-groups").load("/o/" + TwygoApplication.currentOrganizationId + "/groups/" + id + "/related_events", function() {
        return $(TwygoGroupManagement.helper + " #table-groups-info").fadeOut("fast", function() {
          return $(TwygoGroupManagement.helper + " #manage-groups").fadeIn("fast", function() {
            return TwygoGroupManagement.initializeForm();
          });
        });
      });
    },
    addParticipant: function(id) {
      TwygoGroupManagement.check_helper();
      return $(TwygoGroupManagement.helper + " #manage-groups").load("/o/" + TwygoApplication.currentOrganizationId + "/groups/" + id + "/add_participant", function() {
        return $(TwygoGroupManagement.helper + " #table-groups-info").fadeOut("fast", function() {
          return $(TwygoGroupManagement.helper + " #manage-groups").fadeIn("fast", function() {
            return TwygoGroupManagement.initializeForm();
          });
        });
      });
    },
    editParticipant: function(group_id, user_id) {
      TwygoGroupManagement.check_helper();
      return $(TwygoGroupManagement.helper + " #manage-groups").load("/o/" + TwygoApplication.currentOrganizationId + "/groups/" + group_id + "/edit_participant/" + user_id, function() {
        return $(TwygoGroupManagement.helper + " #table-groups-info").fadeOut("fast", function() {
          return $(TwygoGroupManagement.helper + " #manage-groups").fadeIn("fast", function() {
            return TwygoGroupManagement.initializeForm();
          });
        });
      });
    },
    bindSearchEvent: function(id) {
      TwygoOrganization.removeEnterKey("event_name");
      TwygoGroupManagement.group_id = id;
      return $("#event_name").on("keyup", function() {
        if (!($.trim($(this).val()).length < 2)) {
          return TwygoGroupManagement.triggerSearchEvent();
        }
      });
    },
    triggerSearchEvent: function() {
      clearInterval(TwygoMyNetwork.searchTrigger);
      return TwygoMyNetwork.searchTrigger = setTimeout(TwygoGroupManagement.search_event, 350);
    },
    search_event: function() {
      var eventName;
      eventName = $.trim($("#event_name").val());
      TwygoOrganization.showDetailsLoadingIndicator();
      return $.ajax({
        url: "groups/search_event",
        data: {
          event_name: eventName,
          org: TwygoApplication.currentOrganizationId,
          group_id: TwygoGroupManagement.group_id
        },
        dataType: 'json',
        type: 'post',
        success: function(response) {
          TwygoOrganization.hideDetailsLoadingIndicator();
          return TwygoGroupManagement.eventLists(response);
        }
      });
    },
    eventLists: function(response) {
      var date, j, len, ref, result;
      TwygoGroupManagement.check_helper();
      if (response.results.length === 0) {
        $(TwygoGroupManagement.helper + " #manage-groups #event_groups #add_event .eventsList").hide();
      } else {
        $(TwygoGroupManagement.helper + " #manage-groups #event_groups #add_event .eventsList").show();
      }
      $(TwygoGroupManagement.helper + " #manage-groups #event_groups #add_event .eventsList").html("<ul>");
      ref = response.results;
      for (j = 0, len = ref.length; j < len; j++) {
        result = ref[j];
        date = result.kind === 0 ? I18n.strftime(new Date(result.date_time_start), I18n.lookup("date.formats.default")) : "Item de Portfólio";
        $(TwygoGroupManagement.helper + " #manage-groups #event_groups #add_event .eventsList ul").append("<li onClick='TwygoGroupManagement.addNewEvent(this, " + result.id + ", \"" + date + "\");$(this).removeAttr(\"onclick\");' onmouseover='$(this).addClass(\"focused\")' onmouseout='$(this).removeClass(\"focused\")'> <div class='managerName ellipsis' style='max-width: 560px'>" + (result.name.truncate(110)) + " (" + date + ")</div> </li>");
        $("#" + result.id).data("result", result);
        $(TwygoGroupManagement.helper + " #manage-groups #event_groups #add_event .eventsList").show();
      }
      return $(TwygoGroupManagement.helper + " #manage-groups #event_groups #add_event .eventsList ul").append("<li class='clear_manager' onClick='TwygoGroupManagement.closeList()' onmouseover='$(this).addClass(\"focused\")' onmouseout='$(this).removeClass(\"focused\")'>" + (I18n.t('views.cancel')) + "</li>");
    },
    closeList: function() {
      TwygoGroupManagement.check_helper();
      return $(TwygoGroupManagement.helper + " #manage-groups #event_groups #add_event .eventsList").hide();
    },
    addNewEvent: function(element, id, date) {
      safePreventEvent(element);
      TwygoOrganization.showDetailsLoadingIndicator();
      return $.ajax({
        url: "/o/" + TwygoApplication.currentOrganizationId + "/groups/" + TwygoGroupManagement.group_id + "/add_event",
        data: {
          event_id: "" + id,
          group_id: TwygoGroupManagement.group_id
        },
        dataType: 'json',
        type: 'post',
        success: function(response) {
          var _tr;
          TwygoGroupManagement.closeList();
          $("table#event_group_participants").show();
          $(".no_group_participants").hide();
          $("input#event_name").val("");
          _tr = $(("<tr>\n<td>\n  <b>" + response.name + "</b> (" + date + ")\n</td>\n<td align='center'>\n  <div class='actions-btn'>\n    <a href=\"#event-" + id + "\" class=\"remove\" onClick='TwygoGroupManagement.removeEvent($(this), " + id + ", " + TwygoGroupManagement.group_id + ")' title=\"Excluir\">\n      <i class=\"icon-times\"></i>\n      <small>") + I18n.t("delete")(+"</small>\n    </a>\n  </div>\n</td>"));
          $("table#event_group_participants").append(_tr);
          return TwygoOrganization.hideDetailsLoadingIndicator();
        }
      });
    },
    removeEvent: function(element, event_id, group_id) {
      var answer;
      answer = confirm(I18n.t("views.group_participants.are_you_sure_destroy"));
      if (answer) {
        TwygoOrganization.showDetailsLoadingIndicator();
        return $.ajax({
          url: "/o/" + TwygoApplication.currentOrganizationId + "/groups/" + group_id + "/remove_event",
          data: {
            event_id: "" + event_id
          },
          type: 'delete',
          success: function(response) {
            $(element).closest('td').remove();
            if ($("table#event_group_participants tr").length < 2) {
              $("table#event_group_participants").hide();
              $(".no_group_participants").show();
            }
            return TwygoOrganization.hideDetailsLoadingIndicator();
          }
        });
      }
    },
    removeParticipant: function(element, user_id, group_id) {
      var answer;
      safePreventEvent(element);
      answer = confirm(I18n.t("views.partners.are_you_sure_destroy"));
      if (answer) {
        TwygoOrganization.showDetailsLoadingIndicator();
        return $.ajax({
          url: "/o/" + TwygoApplication.currentOrganizationId + "/groups/" + group_id + "/remove_participant",
          data: {
            user_id: "" + user_id,
            group_id: "" + group_id
          },
          type: 'delete',
          success: function(response) {
            $(element).parent().remove();
            if ($("table#event_group_participants tr").length < 2) {
              $("table#event_group_participants").hide();
              $(".no_group_participants").show();
            }
            return TwygoOrganization.hideDetailsLoadingIndicator();
          }
        });
      }
    },
    participantsFilter: function() {
      var event_row, filter_text, i, participant, participant_row, results, size;
      filter_text = $("#group-participants-filter").val().toLowerCase().latinize();
      size = TwygoGroupManagement.participants.length;
      $("#group_participants tr[class='group-event-row']").hide();
      i = 0;
      results = [];
      while (i < size) {
        participant = TwygoGroupManagement.participants[i];
        event_row = $("#group_participants tr[class='group-event-row']#" + (participant.event_id === null ? 0 : participant.event_id));
        participant_row = $("#group_participants tr[class='group-participant-row']:eq(" + i + ")");
        if (participant.first_name.replace(/(<([^>]+)>)/ig, "").toLowerCase().latinize().indexOf(filter_text) > -1 || participant.last_name.replace(/(<([^>]+)>)/ig, "").toLowerCase().latinize().indexOf(filter_text) > -1 || participant.email.replace(/(<([^>]+)>)/ig, "").toLowerCase().latinize().indexOf(filter_text) > -1) {
          event_row.show();
          participant_row.show();
        } else {
          participant_row.hide();
        }
        results.push(i++);
      }
      return results;
    },
    check_helper: function() {
      TwygoGroupManagement.helper = ".groups.the-crowd .list #groups-page";
      return TwygoGroupManagement.helper = "";
    }
  };

}).call(this);
(function() {
  this.TwygoGroups = {
    initialize: function(percentage, group_id, quantity) {
      TwygoGroups.group_id = group_id;
      TwygoGroups.topic_id = 0;
      TwygoGroups.filter = "";
      TwygoGroups.sort = $(".sort-by select").val();
      TwygoGroups.quantity = quantity;
      TwygoGroups.loaded = $(".topics .topics-list a").length;
      $(".real-progress").animate({
        width: percentage + "%"
      }, 1000);
      $(".ranking .box-list li a").children("span").eq(0).addClass("gold");
      $(".ranking .box-list li a").children("span").eq(1).addClass("silver");
      $(".ranking .box-list li a").children("span").eq(2).addClass("bronze");
      $(".actions-bar a.create").click(function() {
        return TwygoGroups.openForm();
      });
      $("#details-title a.create").click(function() {
        return TwygoGroups.openForm();
      });
      $(".send-actions a.cancel-button").click(function() {
        return TwygoGroups.closeForm();
      });
      $(".search a").click(function() {
        return TwygoGroups.openSearch();
      });
      $("a.reply").click(function() {
        return $("#add-comment textarea").focus();
      });
      $(".sort-by select").change(function() {
        return TwygoGroups.changeOrder();
      });
      $(".tags a").click(function() {
        return TwygoGroups.filterCategory($(this));
      });
      $(".left-group-content .load-more a").click(function() {
        return TwygoGroups.loadMore();
      });
      $(".search #groups_search_button").click(function() {
        return TwygoGroups.search();
      });
      $(".search #search_button").click(function() {
        return TwygoGroups.search();
      });
      return $(".topics .topics-filter").click(function() {
        return TwygoGroups.filterCategory();
      });
    },
    openForm: function() {
      $('.groups-container').fadeOut('fast');
      $(".create-new-topic").fadeIn("medium");
      $('html, body').animate({
        scrollTop: 0
      }, 0);
      return $(".create-new-topic input:first").focus();
    },
    closeForm: function() {
      $(".create-new-topic").fadeOut("fast");
      $('html, body').animate({
        scrollTop: 0
      }, 0);
      return $('.groups-container').fadeIn('medium');
    },
    openSearch: function() {
      $(".search a").hide();
      $(".search div").fadeIn();
      return $(".search input").focus();
    },
    changeOrder: function() {
      if (TwygoGroups.search_field !== "") {
        TwygoGroups.search_field = "";
        $(".topics .topics-filter").hide();
      }
      TwygoGroups.sort = $(".sort-by select").val();
      return $.ajax({
        url: "/my_groups/" + TwygoGroups.group_id + "/topics.js",
        data: {
          "loaded": TwygoGroups.loaded,
          "category": TwygoGroups.filter,
          "sort_by": TwygoGroups.sort,
          "reorder": true
        },
        dataType: "text",
        complete: function(response) {
          return $(".topics .topics-list").html(response.responseText);
        }
      });
    },
    filterCategory: function(element) {
      if (element == null) {
        element = null;
      }
      if (TwygoGroups.search_field !== "") {
        TwygoGroups.search_field = "";
        $(".topics .topics-filter").hide();
      }
      if (element !== null && element.context.innerText !== TwygoGroups.filter) {
        TwygoGroups.filter = element.context.innerText;
      } else {
        TwygoGroups.filter = "";
      }
      return $.ajax({
        url: "/my_groups/" + TwygoGroups.group_id + "/topics.js",
        data: {
          "loaded": TwygoGroups.loaded,
          "category": $.trim(TwygoGroups.filter),
          "sort_by": TwygoGroups.sort,
          "reorder": true
        },
        dataType: "text",
        complete: function(response) {
          $(".topics .topics-list").html(response.responseText);
          if (TwygoGroups.quantity <= $(".topics .topics-list a").length) {
            $(".load-more a").hide();
          } else {
            $(".load-more a").show();
          }
          if (TwygoGroups.filter === "") {
            return $(".topics .topics-filter").hide();
          } else {
            $(".topics .topics-filter").html(I18n.t('topics_category') + ' "' + $.trim(TwygoGroups.filter) + '". ' + I18n.t('re_display_topics'));
            return $(".topics .topics-filter").show();
          }
        }
      });
    },
    loadMore: function() {
      if (TwygoGroups.search_field !== "") {
        TwygoGroups.search_field = "";
        $(".topics .topics-filter").hide();
      }
      if ($(".groups .group").length > 0) {
        return $.ajax({
          url: "/my_groups.js",
          data: {
            "loaded": $(".group").length
          },
          dataType: "text",
          complete: function(response) {
            var el;
            el = $(".groups");
            el.last()[0].insertAdjacentHTML('beforeend', response.responseText);
            TwygoGroups.loaded = $(".group").length;
            if (TwygoGroups.quantity <= TwygoGroups.loaded) {
              $(".load-more a").hide();
            }
            return $("html, body").animate({
              scrollTop: $(document).height()
            }, "fast");
          }
        });
      } else if ($(".topics .topics-list a").length > 0) {
        TwygoGroups.loaded = $(".topics .topics-list a").length;
        return $.ajax({
          url: "/my_groups/" + TwygoGroups.group_id + "/topics.js",
          data: {
            "loaded": TwygoGroups.loaded,
            "category": TwygoGroups.filter,
            "sort_by": TwygoGroups.sort
          },
          dataType: "text",
          complete: function(response) {
            $(".topics .topics-list").append(response.responseText);
            TwygoGroups.loaded = $(".topics .topics-list a").length;
            if (TwygoGroups.quantity <= TwygoGroups.loaded) {
              $(".load-more a").hide();
            }
            return $("html, body").animate({
              scrollTop: $(document).height()
            }, "fast");
          }
        });
      } else if ($(".comments .topic-internal").length > 0) {
        return $.ajax({
          url: "/my_groups/" + TwygoGroups.group_id + "/topics/" + TwygoGroups.topic_id + "/comments.js",
          data: {
            "loaded": $(".comments .answer").length
          },
          dataType: "text",
          complete: function(response) {
            $(".comments").last()[0].insertAdjacentHTML('afterBegin', response.responseText);
            TwygoGroups.loaded = $(".comments .topic-internal").length;
            if (TwygoGroups.quantity <= TwygoGroups.loaded) {
              $(".load-more a").hide();
            }
            return $("html, body").animate({
              scrollTop: 0
            }, "fast");
          }
        });
      }
    },
    search: function() {
      TwygoGroups.search_field = $(".search #groups_search_field").val().trim();
      if (TwygoGroups.search_field.length < 3) {
        TwygoFlashMessage.setMessage("error", I18n.t('search_must_be_longer'));
        return TwygoGroups.search_field = "";
      } else {
        return $.ajax({
          url: "/my_groups/" + TwygoGroups.group_id + "/search.js",
          data: {
            "search": TwygoGroups.search_field
          },
          dataType: "text",
          complete: function(response) {
            $(".topics .topics-list").hide();
            $(".topics .topics-list").html(response.responseText);
            $(".load-more").hide();
            if ($(".topics .topics-list .no-groups").length > 0) {
              $(".topics .topics-filter").hide();
              $(".topics .topics-list .no-groups").html('<p> ' + I18n.t('on_topics_found_by') + ' "' + TwygoGroups.search_field + '". <p> <br> <br> <a style="cursor: pointer; color: #84b01e" onClick="TwygoGroups.filterCategory()">' + I18n.t('click_here_show_topics') + '</a>.');
              TwygoGroups.search_field = '';
            } else {
              $(".topics .topics-filter").html(I18n.t('show_topics_found_by') + ' "' + TwygoGroups.search_field + '". ' + I18n.t('re_display_topics'));
              $(".topics .topics-filter").show();
            }
            $(".topics .topics-list").show();
            return $("html, body").animate({
              scrollTop: 0
            }, "fast");
          }
        });
      }
    }
  };

}).call(this);
(function() {
  this.TwygoHistory = {
    init: function() {
      return this.changeURL();
    },
    changeURL: function() {
      return $('[data-history]').on('click', function() {
        var _action, _id, _title, _url;
        _id = $(this).attr('data-id');
        _action = $(this).attr('data-action');
        _url = $(this).attr('data-history');
        _title = $(this).attr('title');
        return TwygoHistory.setURL(_action, _id, _title, _url);
      });
    },
    setURL: function(_action, _id, _title, _url) {
      return history.pushState({
        action: _action,
        id: _id,
        reload: true
      }, _title, _url);
    },
    setReplaceURL: function(_action, _id, _title, _url) {
      return history.replaceState({
        action: _action,
        id: _id,
        reload: true
      }, _title, _url);
    }
  };

}).call(this);
(function() {
  this.TwygoIndicate = {
    showDetailsLoadingIndicator: function() {
      return $("#indicateLoader").fadeIn("fast");
    },
    hideDetailsLoadingIndicator: function() {
      return $("#indicateLoader").fadeOut("fast");
    },
    initialize: function() {
      TwygoIndicate.addRecipients();
      $("#sendIndicates").on("submit", function(e) {
        $("#saveSend").attr("disabled", true);
        TwygoIndicate.showDetailsLoadingIndicator();
        safePreventEvent(e);
        return TwygoIndicate.sendIndications($(this));
      });
      return $("#addOther").on("click", function() {
        return TwygoIndicate.addRecipients(1);
      });
    },
    sendIndications: function(form) {
      var formData;
      formData = form.serializeArray();
      formData[formData.length - 1].value = $("#indicate_message").val().replace(/\n\r?/g, '<br />');
      return $.ajax({
        url: form.attr("action"),
        dataType: "json",
        data: formData,
        type: form.attr("method"),
        success: function(response) {
          var i;
          if (response.index !== void 0) {
            i = 0;
            while (i < response.index.length) {
              $(".recipient_email:eq(" + response.index[i] + ")").addClass("border_error");
              i++;
            }
          }
          TwygoFlashMessage.setMessage(response.type, response.message);
          if (response.type !== "error") {
            $.modal.close();
          }
          TwygoIndicate.hideDetailsLoadingIndicator();
          return $("#saveSend").attr("disabled", false);
        }
      });
    },
    addRecipients: function(repeatn) {
      var j, ref, results, x;
      repeatn = repeatn || 4;
      results = [];
      for (x = j = 1, ref = repeatn; 1 <= ref ? j <= ref : j >= ref; x = 1 <= ref ? ++j : --j) {
        $(".recipients_area").append($(".field.recipients").last().clone());
        results.push($(".field.recipients").last().children("input").val(""));
      }
      return results;
    }
  };

}).call(this);
(function() {
  var indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  this.TwygoLearn = {
    root: "#learn-controls",
    monitor: false,
    event_id: null,
    incompletes: 0,
    skip: false,
    review_comment: false,
    attempts_situation: true,
    countdownInterval: void 0,
    activePermanenceTime: false,
    contentModalPermanenceId: null,
    actionModalPermanence: null,
    accepetModalPermanence: false,
    hours: 0,
    minutes: 0,
    seconds: 0,
    concludedPermanenceTimes: [],
    defaultOptions: {
      root: "#learn-controls",
      goToFirstLesson: true,
      monitor: false
    },
    initialize: function(options) {
      if (window.innerWidth < 992) {
        $(".page-title.ellipsis").html("<div class='mobile-task-title'>&nbsp;</div>");
      }
      this.options = $.extend(this.defaultOptions, options);
      this.root = this.options.root;
      this.monitor = this.options.monitor;
      if (this.preview === void 0) {
        this.preview = false;
      }
      this.event_id = this.options.event_id;
      TwygoLearn.doBindings();
      TwygoLearn.setupTree();
      TwygoLearn.calculateProgress();
      if (this.options.goToFirstLesson) {
        TwygoLearn.goToFirstLesson();
      }
      TwygoLearn.sidebarControl();
      TwygoLearn.lampControl();
      TwygoLearn.fullscreen();
      $(document).bind("ajax:beforeSend", function() {
        return $('body').addClass('show-loading');
      });
      $(".alert-message").show();
      $(".the-message-container").css("display", "flex");
      return TwygoLearn.openNavigation($(".tabs a.atividades"));
    },
    $tree: function() {
      return $(this.root + " > .navigation > ul");
    },
    fullscreen: function() {
      $("#learn-content").on('click', '#icon-screen', function() {
        if (document.fullscreen) {
          return document.exitFullscreen();
        } else {
          return $("#learn-content").get(0).requestFullscreen();
        }
      });
      return document.onfullscreenchange = function() {
        TwygoLearn.fullscreenToggleIcon();
        return $('#learn-content').css({
          paddingTop: document.fullscreen ? '0px' : ''
        });
      };
    },
    fullscreenToggleIcon: function() {
      if (document.fullscreen) {
        return $('#icon-screen').find('i').removeClass().addClass('icon-screen-normal').first().attr('title', I18n.t('javascripts.exit_full_screen'));
      } else {
        return $('#icon-screen').find('i').removeClass().addClass('icon-screen-full').first().attr('title', I18n.t('javascripts.enter_full_screen'));
      }
    },
    loadingContent: function(type) {
      if (type === 'show') {
        return $('body').addClass('loading-content');
      } else {
        return $('body').removeClass('loading-content');
      }
    },
    setupTree: function() {
      var $tree;
      $tree = TwygoLearn.$tree();
      $tree.find("li").map(function() {
        var $li, $parent, div, parent, ul;
        $li = $(this);
        parent = $li.data("parent");
        if (!(parent === "" || parent === void 0)) {
          $parent = $tree.find("#content_" + parent);
          if ($parent.children(".subitens").length > 0) {
            return $parent.children(".subitens").children("ul").append($li);
          } else {
            div = $("<div class='subitens'>");
            ul = $("<ul>");
            return $parent.append(div.append(ul.append($li)));
          }
        }
      });
      $tree.find("li:has(.subitens) > .arrow").show();
      return $tree.show();
    },
    setupTimer: function(content) {
      var _content_id, activePermanenceTime, countdownInterval, hours, initTime, initialHours, initialMinutes, minutes, ref, seconds, timer2, useTimer;
      $('.timer').css("display", "none");
      countdownInterval = this.countdownInterval;
      activePermanenceTime = this.activePermanenceTime;
      clearInterval(countdownInterval);
      this.countdownInterval = null;
      useTimer = $(content).closest('li').attr('data-enable-minimum-permanence-time');
      _content_id = $(content).closest('li').attr('data-id');
      if (indexOf.call(TwygoLearn.concludedPermanenceTimes, _content_id) >= 0) {
        return;
      }
      if ($(content).hasClass('complete')) {
        return;
      }
      if (useTimer !== "1") {
        return;
      }
      initTime = $(content).closest('li').attr('data-minimum-permanence-time');
      ref = initTime.split(':').map(function(value) {
        return parseInt(value, 10);
      }), initialHours = ref[0], initialMinutes = ref[1];
      hours = initialHours;
      minutes = initialMinutes;
      seconds = 0;
      timer2 = hours + ":" + minutes + ":" + seconds;
      $('.timer-' + _content_id).css("display", "inline-block");
      this.activePermanenceTime = true;
      TwygoLearn.activePermanenceTime = true;
      $(".mark-as input").prop('checked', false).prop('disabled', true);
      $(content).removeClass("incomplete").addClass("timelock");
      $(window).bind('beforeunload', function() {
        return 'É possível que as alterações feitas não sejam salvas.';
      });
      countdownInterval = setInterval(function() {
        var formattedHours, formattedMinutes, formattedSeconds;
        if (hours === 0 && minutes === 0 && seconds === 0) {
          $('.timer').css("display", "none");
          $(content).removeClass("timelock").addClass(" waiting");
          $('.countdown').text('');
          clearInterval(countdownInterval);
          countdownInterval = null;
          this.activePermanenceTime = false;
          TwygoLearn.activePermanenceTime = false;
          this.activePermanenceTime = activePermanenceTime;
          TwygoLearn.concludedPermanenceTimes.push(_content_id);
          $(".mark-as input").prop('disabled', false);
          return;
        }
        seconds--;
        if (seconds < 0) {
          minutes--;
          seconds = 59;
        }
        if (minutes < 0) {
          hours--;
          minutes = 59;
        }
        formattedHours = ("0" + hours).slice(-2);
        formattedMinutes = ("0" + minutes).slice(-2);
        formattedSeconds = ("0" + seconds).slice(-2);
        if (hours <= 0) {
          return $('.countdown').text(formattedMinutes + ":" + formattedSeconds);
        } else {
          return $('.countdown').text(formattedHours + ":" + formattedMinutes + ":" + formattedSeconds);
        }
      }, 1000);
      this.activePermanenceTime = TwygoLearn.activePermanenceTime;
      return this.countdownInterval = countdownInterval;
    },
    hasIncomplet: function($selector, last) {
      var incompletes;
      incompletes = 0;
      $selector.find("> li:not([data-id='" + last + "'])").each(function() {
        var $this, parent;
        $this = $(this);
        parent = $this.data("parent");
        if ((parent === "" || parent === void 0) && $this.find('.subitens').length) {
          incompletes = TwygoLearn.hasIncomplet($this.find('.subitens ul'), last);
        }
        if ($this.hasClass('incomplete') || $this.hasClass('waiting')) {
          return incompletes += 1;
        }
      });
      return incompletes;
    },
    verifyCompleteAll: function() {
      var _has_incomplete;
      _has_incomplete = TwygoLearn.has_incomplet(TwygoLearn.$tree());
      if (TwygoLearn.$tree().find('.resume > span').text() === '100') {
        return true;
      }
      if (_has_incomplete > 0) {
        alert(I18n.t('incomplete_course'));
        return false;
      } else {
        return true;
      }
    },
    continueClick: function(content_id) {
      TwygoLearn.accepetModalPermanence = true;
      TwygoLearn.activePermanenceTime = true;
      return $("#card_content_" + content_id).click();
    },
    doBindings: function() {
      if (!this.monitor) {
        $(".navigation ul li a").click(function(e) {
          var _content_id, activePermanenceTime;
          _content_id = $(this).closest('li').attr('data-id');
          activePermanenceTime = this.activePermanenceTime;
          if (TwygoLearn.activePermanenceTime && !TwygoLearn.accepetModalPermanence) {
            TwygoLearn.actionModalPermanence = 'next';
            TwygoLearn.contentModalPermanenceId = _content_id;
            $('#modal-timer-running').fadeIn();
            return;
          }
          if ((TwygoLearn.verifyPrerequisitesBlock(_content_id) > 0) && ($(this).closest('li').hasClass('blocked') || $(this).hasClass('blocked'))) {
            alert(I18n.t('content_locked'));
            safePreventEvent(e);
            return false;
          }
          TwygoLearn.blockTarget();
          $('body').addClass('show-loading');
          TwygoLearn.loadContent(this);
          return safePreventEvent(e);
        });
      }
      $(".navigation ul li a").click(function() {
        var arrow, objeto;
        arrow = $(this).parent().find(".arrow");
        objeto = $(this).parent().children(".subitens");
        objeto.find(".subitens").show();
        if (!objeto.is(":visible")) {
          objeto.slideDown();
          return arrow.addClass("down");
        }
      });
      $(".navigation ul li .arrow").click(function() {
        var arrow, objeto;
        arrow = $(this).parent().find(".arrow");
        objeto = $(this).parent().children(".subitens");
        objeto.find(".subitens").show();
        if (objeto.is(":visible")) {
          objeto.slideUp();
          return arrow.removeClass("down");
        } else {
          objeto.slideDown();
          return arrow.addClass("down");
        }
      });
      $("#learn-content").off("change", ".mark-as .complete input[type=radio]");
      $("#learn-content").off("change", ".mark-as .incomplete input[type=radio]");
      if (!this.monitor) {
        $("#learn-content").on("change", ".mark-as .complete input[type=radio]", function() {
          var current_id;
          if (!$(this).is(":checked")) {
            return;
          }
          current_id = $('#learn-list').attr('data-current');
          return TwygoLearn.markComplete(current_id);
        });
        $("#learn-content").on("change", ".mark-as .incomplete input[type=radio]", function() {
          var current_id;
          if (!$(this).is(":checked")) {
            return;
          }
          current_id = $('#learn-list').attr('data-current');
          return TwygoLearn.markIncomplete(current_id);
        });
      }
      $(window).unload(function() {
        if (TwygoLearn.timeoutStartContent !== void 0) {
          return clearTimeout(TwygoLearn.timeoutStartContent);
        }
      });
      $(document).on("click", ".share-social", function() {
        var button, element, len, menu;
        if ($(this).hasClass("menu-open")) {
          return;
        }
        button = $(this);
        element = this.className.replace(/\s+/g, " ").split(" ");
        len = element.length - 1;
        menu = button.children("#" + TwygoEvent.open["" + element[len] + ""]);
        button.addClass("menu-open");
        return menu.slideDown("fast", function() {
          var that;
          if ($("#main").data("cucumber") !== "true" && $("#main").data("cucumber") !== true) {
            that = $(this);
            return $(document).bind("mouseup", function(e) {
              if ($(e.target).attr("id") !== that.attr("id")) {
                setTimeout(function() {
                  return button.removeClass('menu-open');
                }, 10);
                that.hide();
                return $(this).unbind("mouseup");
              }
            });
          }
        });
      });
      $(window).resize(function() {
        TwygoLearn.modalResize();
        if (window.innerWidth < 992) {
          $(".prenex, .absolute-left").addClass("no-text");
          $(".anext, .aprev").text("");
          $(".absolute-left.no-text .download-btn").text("");
          return $(".mark-as label em").text("Concluída?");
        } else {
          $(".prenex, .absolute-left").removeClass("no-text");
          $(".anext").text("Próxima");
          $(".aprev").text("Anterior");
          $(".download-btn").text("Baixar");
          return $(".mark-as label em").text("Marcar como concluída");
        }
      });
      $(".tabs .briefing").on("click", function() {
        return TwygoLearn.openBriefing(this);
      });
      $(".tabs .atividades").on("click", function() {
        return TwygoLearn.openNavigation(this);
      });
      return $(".tabs .chat").on("click", function() {
        return TwygoLearn.openChat();
      });
    },
    modalResize: function() {
      var height, modal;
      modal = $("#simplemodal-container");
      if (!(modal.length > 0)) {
        return;
      }
      height = $(window).height() - modal.offset().top - 50;
      if (height > modal.find("#basic-modal-content").height() + 20) {
        height = modal.find("#basic-modal-content").height() + 20;
      }
      if (height < 150) {
        height = 190;
      }
      modal.css("min-height", height);
      return modal.css("max-height", height);
    },
    showChat: function(iframe) {
      $('#learn-controls').find('.content-chat').html(iframe);
      return $('#learn-controls').find('.tabs > .chat').on('click', function() {
        $('#learn-controls').find('.tabs > a').removeClass('active');
        $('#learn-controls').find('.tabs > a.chat').addClass('active');
        return $('#learn-controls').find('.content-chat').fadeIn();
      });
    },
    calculateProgress: function() {
      var count, count_done, percent, progress, total;
      total = count = progress = count_done = 0;
      TwygoLearn.$tree().children("li:not(.tutorial)").each(function() {
        var duration, group, group_count, group_count_done, group_progress, group_total, percent;
        group = $(this);
        group_total = group_count = group_progress = group_count_done = 0;
        group.find("li:not(.tutorial)").each(function() {
          var duration, item;
          item = $(this);
          duration = parseInt(item.data("duration"), 10);
          group_total += duration;
          group_count += 1;
          if (item.children("a").hasClass("complete")) {
            group_progress += duration;
            return group_count_done += 1;
          }
        });
        duration = parseInt(group.data("duration"), 10);
        group_total += duration;
        group_count += 1;
        if (group.children("a").hasClass("complete")) {
          group_progress += duration;
          group_count_done += 1;
        }
        if (group_total > 0) {
          percent = Math.round((group_progress / group_total) * 100);
        } else {
          percent = Math.round((group_count_done / group_count) * 100);
        }
        group.children(".progress-line").find(".progress").animate({
          width: percent + "%"
        }, 500);
        total += group_total;
        count += group_count;
        progress += group_progress;
        return count_done += group_count_done;
      });
      if (total > 0) {
        percent = Math.round((progress / total) * 100);
      } else {
        percent = Math.round((count_done / count) * 100);
      }
      if (this.preview) {
        return TwygoLearn.setProgressScore(percent);
      }
    },
    setProgressScore: function(score) {
      return $('.resume').find('.number-progress').text(score + '%');
    },
    goToFirstLesson: function() {
      var lesson;
      lesson = this.$tree().find("li a:not(.complete):not(.blocked):first");
      if (lesson.length > 0) {
        return lesson.click();
      } else {
        lesson = this.$tree().find("li a:not(.complete):not(.blocked):first");
        if (lesson.length > 0) {
          return lesson.click();
        } else {
          return this.$tree().find("li a:first").click();
        }
      }
    },
    closeSidebar: function() {
      $(".main, .sidebar").removeAttr("style");
      return $("body").removeClass("sidebar-toggle");
    },
    lampControl: function() {
      $(".bodylearn #title_bar .f-right a.lamp").click(function() {
        var value_cookie;
        $("body").toggleClass("learn-dark");
        value_cookie = checkCookie('learn_lamp') ? JSON.parse(getCookie('learn_lamp')) : true;
        return setCookie("learn_lamp", !value_cookie, 365);
      });
      if (checkCookie('learn_lamp')) {
        if (!JSON.parse(getCookie('learn_lamp'))) {
          return $("body").addClass("learn-dark");
        }
      }
    },
    sidebarControl: function() {
      $(".bodylearn #title_bar .f-right a.togglesidebar").click(function() {
        var value_cookie;
        if (window.innerWidth < 992) {
          $(".sidebar")[0].style.setProperty("right", "0px", "important");
          $("body").addClass("sidebar-toggle");
        } else {
          $("body").toggleClass("sidebar-toggle");
        }
        value_cookie = checkCookie('learn_sidebar') ? JSON.parse(getCookie('learn_sidebar')) : true;
        return setCookie("learn_sidebar", !value_cookie, 365);
      });
      if (checkCookie('learn_sidebar')) {
        if (!JSON.parse(getCookie('learn_sidebar')) && window.innerWidth > 992) {
          return $("body").addClass("sidebar-toggle");
        }
      }
    },
    storeScorm: function(content, scorm_data) {
      var content_id, csrfToken, organization_id;
      if (this.react_content_id) {
        csrfToken = this.react_csrf_token;
        content_id = this.react_content_id;
        organization_id = this.react_organization_id;
        content = TwygoLearn.currentUserContent;
        return $.ajax({
          url: "/api/v1/e/" + content.event_id + "/learn_devise/" + content_id + "/store_scorm_data?organization_id=" + organization_id,
          type: "put",
          data: {
            preview: this.preview,
            scorm_data: scorm_data
          },
          dataType: "json",
          beforeSend: function(xhr) {
            TwygoLearn.cancelTimeoutStart();
            return xhr.setRequestHeader('X-CSRF-Token', csrfToken);
          },
          success: function(response) {}
        });
      } else {
        if (content === void 0) {
          content = this.content_id;
        }
        return $.ajax({
          url: "learn/" + content + "/store_scorm_data",
          type: "put",
          data: {
            preview: this.preview,
            scorm_data: scorm_data
          },
          dataType: "json",
          success: function(response) {}
        });
      }
    },
    reactContentId: function(id) {
      return this.react_content_id = id;
    },
    reactOrganizationId: function(id) {
      return this.react_organization_id = id;
    },
    reactCsrfToken: function(token) {
      return this.react_csrf_token = token;
    },
    setButtonState: function(content_id) {
      return true;
    },
    showFinish: function(current) {
      return true;
    },
    verifyPrerequisitesBlock: function(content_id) {
      var _count_block, _data, _prerequisites;
      _data = $('#content_' + content_id).attr('data-prerequisites');
      if (_data.length === 0 || TwygoLearn.currentUserContent === void 0) {
        return 0;
      }
      _prerequisites = _data.split(',');
      _count_block = 0;
      $.each(_prerequisites, function(i, val) {
        if ($('[data-id=' + val + ']').find('> a').hasClass('blocked') && parseInt(val) !== TwygoLearn.currentUserContent.event_content_id) {
          return _count_block++;
        }
      });
      return _count_block;
    },
    continuePrev: function(content_id) {
      var $actual, $prev;
      $('#modal-timer-running').fadeOut();
      if ($(".aprev").hasClass("disabled") || content_id === 0) {
        return;
      }
      TwygoLearn.openNavigation($(".tabs a.atividades"));
      $actual = $("#content_" + TwygoLearn.currentUserContent.event_content_id);
      $prev = $actual.prevAll(":not(.blocked):first");
      if ($prev.length === 0) {
        $prev = $actual.parents("li:first");
      } else {
        if ($prev.find("li:not(.blocked)").length > 0) {
          $prev = $prev.find("li:not(.blocked):last");
        }
      }
      if (!$prev.is("ul") && $prev.length > 0) {
        return $('#learn-list').find("li[data-id=" + content_id + "] > a").click();
      }
    },
    prev: function(content_id) {
      var $actual, $prev, activePermanenceTime;
      activePermanenceTime = this.activePermanenceTime;
      if (TwygoLearn.activePermanenceTime) {
        TwygoLearn.actionModalPermanence = 'prev';
        TwygoLearn.contentModalPermanenceId = content_id;
        $('#modal-timer-running').fadeIn();
        return;
      }
      if ($(".aprev").hasClass("disabled") || content_id === 0) {
        return;
      }
      TwygoLearn.openNavigation($(".tabs a.atividades"));
      $actual = $("#content_" + TwygoLearn.currentUserContent.event_content_id);
      $prev = $actual.prevAll(":not(.blocked):first");
      if ($prev.length === 0) {
        $prev = $actual.parents("li:first");
      } else {
        if ($prev.find("li:not(.blocked)").length > 0) {
          $prev = $prev.find("li:not(.blocked):last");
        }
      }
      if (!$prev.is("ul") && $prev.length > 0) {
        return $('#learn-list').find("li[data-id=" + content_id + "] > a").click();
      }
    },
    actionModalConfirm: function(action) {
      TwygoLearn.activePermanenceTime = null;
      if (action === 'next') {
        return TwygoLearn.continueNext(TwygoLearn.contentModalPermanenceId);
      } else if (action === 'prev') {
        return TwygoLearn.continuePrev(TwygoLearn.contentModalPermanenceId);
      } else if (action === 'back') {
        return TwygoLearn.continueBack();
      } else if (action === 'click') {
        return TwygoLearn.continueClick(TwygoLearn.contentModalPermanenceId);
      }
    },
    continueBack: function() {
      return window.location.href = this.back_origin;
    },
    back: function(origin) {
      TwygoLearn.backOrigin(origin);
      if (TwygoLearn.activePermanenceTime) {
        TwygoLearn.actionModalPermanence = 'back';
        $('#modal-timer-running').fadeIn();
      } else {
        return TwygoLearn.continueBack();
      }
    },
    backOrigin: function(back_origin) {
      return this.back_origin = back_origin;
    },
    continueNext: function(content_id) {
      var $actual, $next, __ids, __next, is_first, j, len1, requisite;
      $('#modal-timer-running').fadeOut();
      if ($(".anext").hasClass("disabled") || content_id === 0) {
        return;
      }
      __next = 0;
      $actual = $("#content_" + TwygoLearn.currentUserContent.event_content_id);
      $next = $("#content_" + content_id);
      is_first = TwygoLearn.currentUserContent.event_content_id === TwygoLearn.firstContentClass;
      if (!TwygoLearn.skip) {
        TwygoLearn.checkMarkComplete(is_first);
      }
      TwygoLearn.openNavigation($(".tabs a.atividades"));
      if (TwygoLearn.nextContentBlockAndActualContentNotComplete($next, $actual)) {
        __ids = $next.attr('data-prerequisites').replace(/'/g, "").replace("'", "").split(",");
        for (j = 0, len1 = __ids.length; j < len1; j++) {
          requisite = __ids[j];
          if (requisite === TwygoLearn.currentUserContent.event_content_id) {
            TwygoLearn.checkMarkComplete();
          } else {
            if ($("#content_" + requisite).hasClass('blocked')) {
              __next++;
            }
          }
        }
      }
      if (!$('#learn-list').find("li[data-id=" + content_id + "]").hasClass('blocked') || __next === 0) {
        return $('#learn-list').find("li[data-id=" + content_id + "] > a").click();
      } else {
        return alert(I18n.t('next_content_locked'));
      }
    },
    next: function(content_id) {
      var $actual, $next, __ids, __next, activePermanenceTime, is_first, j, len1, requisite;
      activePermanenceTime = this.activePermanenceTime;
      if (TwygoLearn.activePermanenceTime) {
        TwygoLearn.actionModalPermanence = 'next';
        TwygoLearn.contentModalPermanenceId = content_id;
        $('#modal-timer-running').fadeIn();
        return;
      }
      if ($(".anext").hasClass("disabled") || content_id === 0) {
        return;
      }
      __next = 0;
      $actual = $("#content_" + TwygoLearn.currentUserContent.event_content_id);
      $next = $("#content_" + content_id);
      is_first = TwygoLearn.currentUserContent.event_content_id === TwygoLearn.firstContentClass;
      if (!TwygoLearn.skip) {
        TwygoLearn.checkMarkComplete(is_first);
      }
      TwygoLearn.openNavigation($(".tabs a.atividades"));
      if (TwygoLearn.nextContentBlockAndActualContentNotComplete($next, $actual)) {
        __ids = $next.attr('data-prerequisites').replace(/'/g, "").replace("'", "").split(",");
        for (j = 0, len1 = __ids.length; j < len1; j++) {
          requisite = __ids[j];
          if (requisite === TwygoLearn.currentUserContent.event_content_id) {
            TwygoLearn.checkMarkComplete();
          } else {
            if ($("#content_" + requisite).hasClass('blocked')) {
              __next++;
            }
          }
        }
      }
      if (!$('#learn-list').find("li[data-id=" + content_id + "]").hasClass('blocked') || __next === 0) {
        return $('#learn-list').find("li[data-id=" + content_id + "] > a").click();
      } else {
        return alert(I18n.t('next_content_locked'));
      }
    },
    nextContentBlockAndActualContentNotComplete: function(next, actual) {
      return TwygoLearn.isBlocked(next) && !TwygoLearn.isComplete(actual);
    },
    getCurrentContent: function() {
      return $("#content_" + TwygoLearn.currentUserContent.event_content_id);
    },
    isWaiting: function(content) {
      return content.hasClass('waiting');
    },
    isComplete: function(content) {
      return content.hasClass('complete');
    },
    isBlocked: function(content) {
      return content.hasClass('blocked');
    },
    lastContentIDEqualsCurrentContentID: function() {
      var current_id, last;
      current_id = TwygoLearn.getIDByContent('current');
      last = TwygoLearn.getIDByContent('last');
      return last === current_id;
    },
    getIDByContent: function(type) {
      var ids_contents;
      ids_contents = {
        current: $('#learn-list').attr('data-current'),
        last: $('#learn-list').attr('data-last')
      };
      return ids_contents[type];
    },
    isAllContentsCompleted: function() {
      var incompletes, last_content_id;
      last_content_id = TwygoLearn.getIDByContent('last');
      incompletes = TwygoLearn.hasIncomplet($('#learn-list'), last_content_id);
      return TwygoLearn.lastContentIDEqualsCurrentContentID() && incompletes === 0;
    },
    finish: function() {
      var $actual_content, actual_content_not_complete, incompletes, is_first, last_content_id, return_true_check_mask;
      $actual_content = TwygoLearn.getCurrentContent();
      actual_content_not_complete = !TwygoLearn.isComplete($actual_content);
      last_content_id = TwygoLearn.getIDByContent('last');
      incompletes = TwygoLearn.hasIncomplet($('#learn-list'), last_content_id);
      TwygoLearn.exitFullscreen();
      if (incompletes > 0) {
        TwygoFlashMessage.setMessage('error', I18n.t('content_incomplete'));
        return false;
      }
      if (actual_content_not_complete) {
        is_first = TwygoLearn.currentUserContent.event_content_id === TwygoLearn.firstContentClass;
        return_true_check_mask = TwygoLearn.checkMarkComplete(is_first);
        if (!return_true_check_mask) {
          TwygoFlashMessage.setMessage('error', I18n.t('content_incomplete'));
          return false;
        }
      }
      if (TwygoLearn.isAllContentsCompleted()) {
        return setTimeout(function() {
          return TwygoLearn.finishModal();
        }, 500);
      }
    },
    exitFullscreen: function() {
      if (document.fullscreen) {
        return document.exitFullscreen();
      }
    },
    finishModal: function() {
      $('#finish-modal').fadeIn();
      setTimeout(function() {
        return $('#finish-modal').find('.modal').addClass('show');
      }, 1000);
      return $('#finish-modal').find('.modal').find('.close').on('click', function() {
        $('#finish-modal').find('.modal').removeClass('show');
        return setTimeout(function() {
          return $('#finish-modal').fadeOut();
        }, 500);
      });
    },
    errorModal: function() {
      $('#error-modal').fadeIn();
      setTimeout(function() {
        return $('#error-modal').find('.modal').addClass('show');
      }, 500);
      return $('#error-modal').find('.modal').find('.close').on('click', function() {
        $('#error-modal').find('.modal').removeClass('show');
        return setTimeout(function() {
          return $('#error-modal').fadeOut();
        }, 500);
      });
    },
    setBriefing: function(text) {
      clearTimeout(this.timeOutBriefing);
      $(".sidebar .content-briefing").html(text);
      if ($(".sidebar .content-briefing").text() !== "") {
        return TwygoLearn.timeOutBriefing = setTimeout((function() {
          return TwygoLearn.openBriefing($(".tabs a.briefing")[0]);
        }), 3000);
      } else {
        return $(".sidebar .content-briefing").text(I18n.t('content_has_no_summary'));
      }
    },
    openBriefing: function(tab) {
      $(".tabs a").removeClass("active");
      $(tab).addClass("active");
      $(".sidebar .navigation").removeClass("display-flex").addClass("display-none");
      $(".sidebar .content-briefing").removeClass("display-none").addClass("display-flex");
      return $(".sidebar .content-chat").removeClass("display-flex").addClass("display-none");
    },
    openNavigation: function(tab) {
      $(".tabs a").removeClass("active");
      $(tab).addClass("active");
      $(".sidebar .content-briefing").removeClass("display-flex").addClass("display-none");
      $(".sidebar .content-chat").removeClass("display-flex").addClass("display-none");
      return $(".sidebar .navigation").removeClass("display-none").addClass("display-flex");
    },
    openChat: function() {
      $(".tabs a").removeClass("active");
      $('.tabs a.chat').addClass("active");
      $(".sidebar .content-briefing").removeClass("display-flex").addClass("display-none");
      $(".sidebar .navigation").removeClass("display-none").addClass("display-none");
      return $(".sidebar .content-chat").removeClass("display-none").addClass("display-flex");
    },
    closeAlertMessage: function() {
      return $(".alert-message, .the-message-container").hide();
    },
    restartLearn: function(event_id) {
      if (confirm(I18n.t('confirm_delete_progress'))) {
        return window.location.href = "/" + event_id + "/reboot_learn";
      } else {
        return TwygoLearn.closeAlertMessage();
      }
    },
    blockTarget: function(what) {
      if (what == null) {
        what = 'show';
      }
      if (what === 'show') {
        $('body').find('#learn-list').addClass('block');
        $('body').find('#footer-actions').addClass('block');
      } else {
        setTimeout(function() {
          $('body').find('#learn-list').removeClass('block');
          return $('body').find('#footer-actions').removeClass('block');
        }, 500);
      }
    },
    markAs: function(content) {
      var is_preview, status;
      TwygoLearn.cancelTimeoutStart();
      status = $(".mark-as input").is(":checked") ? "complete" : "incomplete";
      is_preview = this.preview;
      return $.ajax({
        url: "learn/" + content + "/" + status,
        type: "put",
        data: {
          preview: this.preview
        },
        dataType: "json",
        beforeSend: function() {
          return TwygoLearn.blockTarget();
        },
        success: function(response) {
          if (response.status === "ok") {
            TwygoLearn.$tree().find("#content_" + content).removeClass("incomplete waiting complete").addClass("" + status);
            TwygoLearn.$tree().find("#content_" + content + " > a").removeClass("incomplete waiting complete").addClass("" + status);
            TwygoLearn.calculateProgress();
            TwygoLearn.checkPrerequisites(content, $(".mark-as input").is(":checked"));
            return TwygoLearn.setButtonState(content);
          } else {
            return TwygoCommon.setMessage("error", I18n.t('failed_to_mark_as_completed'));
          }
        },
        complete: function(data) {
          TwygoLearn.blockTarget('hidden');
          if (!is_preview) {
            TwygoLearn.setProgressScore(data.responseJSON.score);
          }
        }
      });
    },
    scormComplete: function(feature_flag) {
      if (feature_flag == null) {
        feature_flag = false;
      }
      if (this.react_content_id) {
        return dispatchEvent(new CustomEvent('scormComplete'));
      } else {
        return TwygoLearn.markComplete(API.content_id);
      }
    },
    markComplete: function(content, is_finish, is_first, is_scorm) {
      var is_preview;
      if (is_finish == null) {
        is_finish = false;
      }
      if (is_first == null) {
        is_first = false;
      }
      if (is_scorm == null) {
        is_scorm = false;
      }
      if (content === void 0) {
        content = this.content_id;
      }
      if (this.react_content_id) {
        dispatchEvent(new CustomEvent('scormComplete'));
      }
      if (TwygoLearn.activePermanenceTime) {
        return;
      }
      TwygoLearn.cancelTimeoutStart();
      is_preview = this.preview;
      return $.ajax({
        url: "learn/" + content + "/complete",
        type: "put",
        data: {
          preview: this.preview,
          is_finish: is_finish,
          is_first: is_first
        },
        dataType: "json",
        beforeSend: function() {
          return TwygoLearn.blockTarget();
        },
        success: function(response) {
          if (response.status === "ok") {
            TwygoLearn.$tree().find("#content_" + content).removeClass("incomplete waiting").addClass("complete");
            TwygoLearn.$tree().find("#content_" + content + " > a").removeClass("incomplete waiting").addClass("complete");
            TwygoLearn.calculateProgress();
            TwygoLearn.checkPrerequisites(content, true);
            TwygoLearn.setButtonState(content);
            return TwygoLearn.showFinish(content);
          } else {
            return TwygoCommon.setMessage("error", I18n.t('failed_to_mark_as_completed'));
          }
        },
        complete: function(data) {
          TwygoLearn.blockTarget('hidden');
          if (!is_preview) {
            return TwygoLearn.setProgressScore(data.responseJSON.score);
          }
        }
      });
    },
    markIncomplete: function(content) {
      var is_preview;
      TwygoLearn.cancelTimeoutStart();
      if (content === void 0) {
        content = this.content_id;
      }
      is_preview = this.preview;
      if (!TwygoLearn.$tree().find("#content_" + content).hasClass("complete")) {
        return $.ajax({
          url: "learn/" + content + "/incomplete",
          type: "put",
          data: {
            preview: this.preview
          },
          dataType: "json",
          beforeSend: function() {
            return TwygoLearn.blockTarget();
          },
          success: function(response) {
            if (response.status === "ok") {
              TwygoLearn.$tree().find("#content_" + content).removeClass("waiting complete").addClass("incomplete");
              TwygoLearn.$tree().find("#content_" + content + " > a").removeClass("waiting complete").addClass("incomplete");
              return TwygoLearn.checkPrerequisites(content, false);
            } else {
              return TwygoCommon.setMessage("error", I18n.t('failed_to_mark_as_incompleted'));
            }
          },
          complete: function(data) {
            TwygoLearn.blockTarget('hidden');
          }
        });
      }
    },
    checkMarkComplete: function(is_first) {
      var current_content_learn, current_id, is_finished, learn_type, mark_as_completed_manually;
      if (is_first == null) {
        is_first = false;
      }
      current_id = TwygoLearn.getIDByContent('current');
      current_content_learn = $('#learn-list').find("[data-id='" + current_id + "']");
      learn_type = current_content_learn.data('type');
      is_finished = TwygoLearn.isAllContentsCompleted();
      if (learn_type === 'questions') {
        return true;
      }
      if (learn_type === 'video' && $('#mark-content').length === 0) {
        return true;
      }
      mark_as_completed_manually = $('#learn-content').find('#input-as_mark').is(':checked');
      if (mark_as_completed_manually || TwygoLearn.isComplete(current_content_learn)) {
        TwygoLearn.markComplete(current_id, is_finished, is_first);
      } else {
        if (TwygoLearn.isWaiting(current_content_learn)) {
          return true;
        }
        TwygoLearn.markIncomplete(current_id);
      }
    },
    markWaitingPrivatePub: function(content) {
      TwygoLearn.cancelTimeoutStart();
      TwygoLearn.$tree().find("#content_" + content + " > a").removeClass("incomplete complete").addClass("waiting");
      TwygoLearn.calculateProgress();
      return TwygoLearn.checkPrerequisites(content, false);
    },
    markCompletePrivatePub: function(content, event_id) {
      var is_preview;
      if (event_id == null) {
        event_id = "";
      }
      TwygoLearn.cancelTimeoutStart();
      TwygoLearn.$tree().find("#content_" + content + " > a").removeClass("incomplete waiting").addClass("complete");
      TwygoLearn.calculateProgress();
      TwygoLearn.checkPrerequisites(content, true);
      TwygoLearn.setButtonState(content);
      if (content === void 0) {
        content = this.content_id;
      }
      is_preview = this.preview;
      if (event_id !== "") {
        return $.ajax({
          url: "/e/" + event_id + "/learn/" + content + "/complete",
          type: "put",
          data: {
            preview: this.preview
          },
          dataType: "json",
          success: function(response) {
            if (window.location === ("/e/" + event_id + "/learn/" + content + "/complete")) {
              if (response.status === "ok") {
                TwygoLearn.$tree().find("#content_" + content + " > a").removeClass("incomplete waiting").addClass("complete");
                TwygoLearn.checkPrerequisites(content, true);
                TwygoLearn.setButtonState(content);
                return TwygoLearn.calculateProgress();
              } else {
                return TwygoCommon.setMessage("error", I18n.t('failed_to_mark_as_completed'));
              }
            }
          },
          complete: function(data) {
            if (!is_preview) {
              return TwygoLearn.setProgressScore(data.responseJSON.score);
            }
          }
        });
      }
    },
    checkPrerequisites: function(id, is_completing) {
      var can_release, item, j, k, len1, len2, ref, ref1, requisite, results;
      ref = $(".navigation ul li[data-prerequisites*='" + id + "']");
      results = [];
      for (j = 0, len1 = ref.length; j < len1; j++) {
        item = ref[j];
        if (is_completing) {
          can_release = true;
          ref1 = $(item).attr('data-prerequisites').replace("/'/", "").split(",");
          for (k = 0, len2 = ref1.length; k < len2; k++) {
            requisite = ref1[k];
            if (requisite !== id && !$("li[data-id=" + requisite + "] a:eq(0)").hasClass("complete")) {
              can_release = false;
              break;
            }
          }
          if (can_release) {
            results.push($(item).removeClass("blocked").find("a:eq(0)").removeClass("blocked"));
          } else {
            results.push(void 0);
          }
        } else {
          results.push($(item).find("a:eq(0)").addClass('blocked'));
        }
      }
      return results;
    },
    cancelTimeoutStart: function() {
      if (this.timeoutStartContent !== void 0) {
        return clearTimeout(this.timeoutStartContent);
      }
    },
    clearReloadVideo: function() {
      if (this.reloadVideoTimeout !== void 0) {
        clearTimeout(this.reloadVideoTimeout);
      }
      return this.reloadVideoTimeout = void 0;
    },
    reloadVideo: function() {
      var content, that;
      that = this;
      content = $("#content_" + TwygoLearn.content_id + " a");
      return this.reloadVideoTimeout = setTimeout(function() {
        return that.loadContent(content);
      }, 15000);
    },
    loadContent: function(content) {
      var $content, id, url;
      TwygoLearn.skip = false;
      if (TwygoLearn.confirm_load_content === true) {
        if (confirm(I18n.t('confirm_leave_webinar'))) {
          TwygoLearn.confirm_load_content = false;
        } else {
          return false;
        }
      }
      TwygoLearn.results_to_show_not_repeat_status = [];
      if (!$(".alert-message").is(":visible")) {
        TwygoApplication.loader();
      }
      TwygoLearn.clearReloadVideo();
      TwygoLearn.cancelTimeoutStart();
      TwygoLearn.stopVideo();
      if (window.innerWidth < 992) {
        TwygoLearn.closeSidebar();
      }
      $content = $(content);
      this.content_id = id = $content.parent().data("id");
      if (!$content.is(":visible")) {
        $content.parents("li:visible:last").children(".arrow").click();
      }
      url = "learn/" + id;
      if (this.preview) {
        url = url + "?preview=1";
      }
      $('body').addClass('show-loading');
      return setTimeout(function() {
        return $("#learn-content").load(url, function(response, status, xhr) {
          var $title, parents, width;
          if (status === 'success') {
            $(".navigation ul li.learning").removeClass("learning");
            $content.parent().addClass("learning");
            $(this).hide();
            $title = $(this).find(".title > ul");
            $title.empty();
            parents = $content.parents("li");
            width = 90 / parents.length;
            $(".page-title.ellipsis .mobile-task-title").text($content.text());
            parents.map(function() {
              var $a, text;
              $a = $(this).children("a");
              text = $(this).children("a").text().replace($(this).children().children().text(), "");
              return $title.prepend($("<li>").css("max-width", width + "%").click(function() {
                return $a.click();
              }).attr("title", text).text(text));
            });
            if (window.innerWidth < 992) {
              $(".prenex, .absolute-left").addClass("no-text");
              $(".anext, .aprev").text("");
              $(".absolute-left.no-text .download-btn").text("");
              $(".mark-as label em").text("Concluída?");
              $(".blue_btn.begin").appendTo(".absolute-left");
            }
            $(this).fadeIn();
            TwygoLearn.setButtonState(id);
            TwygoLearn.showFinish(id);
            $('#learn-list').attr('data-current', id);
            TwygoLearn.setupTimer(content);
            $(document).ready(function() {
              if ($('.webinar-loader').length > 0) {
                return TwygoLearn.should_webinar_start(id);
              }
            });
          } else {
            TwygoLearn.errorModal();
          }
          $('body').removeClass('show-loading');
          TwygoLearn.blockTarget('hidden');
          return TwygoLearn.fullscreenToggleIcon();
        });
      }, 1000);
    },
    stopVideo: function() {
      if (typeof jwplayer === 'function' && jwplayer("mediaplayer").stop) {
        jwplayer("mediaplayer").stop();
      }
      if (window.stopInterval) {
        return window.stopInterval();
      }
    },
    downloadByPasswordFile: function() {
      var modal;
      $("#password-box").modal();
      modal = $("#simplemodal-container");
      modal.addClass("download-container");
      if (document.fullscreen) {
        return document.exitFullscreen();
      }
    },
    downloadFile: function() {
      var password, url;
      password = $('#simplemodal-container #password').val();
      url = $('#archive-box').attr('url');
      return $.ajax({
        url: url,
        data: {
          password: password
        },
        dataType: 'json',
        type: 'post',
        complete: function(response) {
          if (response.status === 200) {
            return $('#simplemodal-container .simplemodal-wrap').html("<span class='archive-loading'>" + (I18n.t('views_loading')) + "</span>");
          } else if (response.status === 400 || response.status === 401) {
            return $("#simplemodal-container .password-error").html(response.responseJSON.message);
          }
        }
      });
    },
    disableNavigation: function() {
      return $(".prenex div").addClass("locked");
    },
    enableNavigation: function() {
      return $(".prenex div").removeClass("locked");
    },
    getQuestions: function(id) {
      TwygoLearn.user_review = this.user_review = false;
      TwygoLearn.attempt_id = this.attempt_id = "";
      TwygoLearn.review_comment = false;
      this.content_id = id;
      TwygoLearn.disableNavigation();
      return $.ajax({
        url: "/o/" + TwygoLearn.organization + ("/question_lists/" + this.content_id + "/select_questions"),
        data: {
          preview: this.preview
        },
        dataType: 'json',
        type: 'get',
        complete: function(response) {
          TwygoLearn.questions = JSON.parse(response.responseText);
          if (TwygoLearn.questions.length > 0) {
            TwygoLearn.is_explaining = false;
            TwygoLearn.loadQuestions();
            return TwygoLearn.loadQuestion(1);
          } else {
            $("#actions button").hide();
            return $("#actions #no-questions").show();
          }
        }
      });
    },
    hiddenMobileMobileScroll: function(questionNumber) {
      var haveOverflow, mobileScroll, offsetHeight, questions, scrollHeight;
      questions = $('.content.center');
      mobileScroll = $('.mobile-scroll')[questionNumber - 1];
      if (mobileScroll === void 0) {
        return;
      }
      offsetHeight = questions[questionNumber].offsetHeight;
      scrollHeight = questions[questionNumber].scrollHeight;
      haveOverflow = offsetHeight < scrollHeight;
      if (haveOverflow && window.innerWidth < 991) {
        mobileScroll.style.display = 'initial';
        return TwygoLearn.hideMobileScrollBottom(mobileScroll);
      } else {
        return mobileScroll.style.display = 'none';
      }
    },
    checkFooterButtons: function(questionNumber) {
      var ref;
      if ($("#question_" + questionNumber + " #previous button")[0] && ((ref = $("#question_" + questionNumber + " #review")[0]) != null ? ref.style.display : void 0) !== 'none') {
        $("#footer-actions").addClass('multiple-buttons');
        return $("#question_" + questionNumber).addClass('multiple-buttons');
      } else {
        $("#footer-actions").removeClass('multiple-buttons');
        return $("#question_" + questionNumber).removeClass('multiple-buttons');
      }
    },
    hideMobileScrollBottom: function(el) {
      return $(el).siblings(".content.center").on("scroll", function() {
        if ($(this)[0].scrollHeight - $(this)[0].scrollTop - $(this)[0].clientHeight < 1) {
          return el.style.display = 'none';
        }
      });
    },
    loadQuestion: function(question_number) {
      var question_id;
      if (question_number == null) {
        question_number = 0;
      }
      $('#btn-finish').hide();
      $(".blue_btn.begin").hide();
      $("#learn-content").removeClass('show-resume');
      TwygoLearn.disableNavigation();
      if (question_number === 0) {
        question_number = TwygoLearn.questions.length;
      }
      TwygoLearn.current_question = TwygoStudents.current_question = question_number;
      $("#learn-content .content.center").hide();
      $("#total_questions").hide();
      $("#content-container > div[id^='question_']").hide();
      $("#question_" + question_number + " .content.center").show();
      $("#question_" + question_number).show();
      $("#question_" + question_number + " .content.center #loading").show();
      question_id = TwygoLearn.questions[question_number - 1].question_id;
      $("#total_questions p").attr("onclick", "TwygoLearn.saveQuestion(" + question_number + "); TwygoLearn.loadQuestion($(this).attr('id'))");
      TwygoLearn.checkFooterButtons(question_number);
      if ($("#question_" + question_number + " .content.center #question #question_title").text() === "" || TwygoLearn.is_explaining) {
        $.ajax({
          url: "/o/" + TwygoLearn.organization + ("/question_lists/" + this.content_id + "/get_question/") + question_id,
          data: {
            preview: this.preview,
            review: this.review,
            attempt_id: this.attempt_id,
            student_id: this.student_id,
            instructor_review: this.instructor_review,
            user_review: this.user_review
          },
          dataType: 'json',
          type: 'get',
          complete: function(response) {
            var $question, $question_answers, allow_null_answers, answer, archive, archiveButton, archiveId, attempt, class_label, comment, content_review, event_id, id, input_type, j, k, l, label, len1, m, readonly, ref, ref1, ref2, ref3, ref4, ref5, ref6, ref7, review, student, user_answers;
            allow_null_answers = response.allow_null_answers;
            response = JSON.parse(response.responseText);
            TwygoLearn.question_list_method = response.content.question_list_method;
            TwygoLearn.question_list_opinion = response.content.question_list_opinion;
            attempt = response.attempt || {};
            TwygoLearn.response = response;
            student = response.student || {};
            TwygoLearn.response = response;
            event_id = response.event_id || {};
            TwygoLearn.response = response;
            comment = attempt.comment;
            review = attempt.review || '';
            user_answers = attempt.answer_value || [''];
            TwygoStudents.question_id = question_id;
            TwygoLearn.question_attempt_id = TwygoStudents.question_attempt_id = attempt.id;
            if (response.question.require_answer === true) {
              $("#question_" + question_number + " .content.center #question #question_title").html("<span>" + question_number + "</span>" + response.question.title + (" <div style='color: #b2b2b2; display: inline-block; font-size: 13px'>(" + (I18n.t('_required')) + ") </div> "));
            } else {
              $("#question_" + question_number + " .content.center #question #question_title").html("<span>" + question_number + "</span>" + response.question.title);
            }
            $("#question_" + question_number + " .content.center #question #question_description").html(response.question.description);
            for (id = j = 0, ref = $("#question_" + question_number + " img").length; 0 <= ref ? j < ref : j > ref; id = 0 <= ref ? ++j : --j) {
              $("#question_" + question_number + " img")[id].style.display = "display:none";
              $("#question_" + question_number + " img")[id].onload = function() {
                var image;
                image = $(this)[0];
                if (image.width > 560) {
                  image.height = image.height * (560 / image.width);
                  image.width = 560;
                }
                return image.style.display = "display:block";
              };
            }
            $question = $("#question_" + question_number + " .content.center #question");
            if (TwygoLearn.review) {
              if (!attempt.is_waiting_review) {
                if (attempt.score === 1) {
                  $question.find("a.mark-correct").addClass("marked-as");
                } else if (attempt.score === 0.5) {
                  $question.find("a.mark-partially_correct").addClass("marked-as");
                } else {
                  $question.find("a.mark-incorrect").addClass("marked-as");
                }
              }
            }
            $question_answers = $question.find("#question_answers");
            $question_answers.text("");
            if (TwygoLearn.results_to_show_not_repeat_status === void 0) {
              TwygoLearn.results_to_show_not_repeat_status = [];
            }
            if ((TwygoLearn.is_explaining || TwygoLearn.instructor_review) && indexOf.call(TwygoLearn.results_to_show_not_repeat_status, question_number) < 0) {
              TwygoLearn.results_to_show_not_repeat_status.push(question_number);
              if (response.question.kind !== 'scale' && TwygoLearn.question_list_method === 1) {
                if (response.attempt.is_waiting_review === true) {
                  $("#question_" + question_number + " .content.center #question #answer_status").empty().append($(("<b> " + (I18n.t('result')) + " </b> <span class='result_answer_span' style='color: #000; font-weight: bold;'>") + I18n.t("javascripts.is_waiting_review") + " </span>"));
                  $("#question_" + question_number + " .content.center #question #answer_status").show();
                } else if (response.attempt.correct) {
                  $("#question_" + question_number + " .content.center #question #answer_status").empty().append($(("<b> " + (I18n.t('result')) + " </b> <span class='result_answer_span correct_answer_span'> ") + I18n.t("javascripts.correct") + " </span>"));
                  $("#question_" + question_number + " .content.center #question #answer_status").show();
                } else {
                  $("#question_" + question_number + " .content.center #question #answer_status").empty().append($(("<b> " + (I18n.t('result')) + " </b> <span class='result_answer_span wrong_answer_span'> ") + I18n.t("javascripts.wrong") + " </span>"));
                  $("#question_" + question_number + " .content.center #question #answer_status").show();
                }
              }
            }
            if (response.question.kind === 'single' || response.question.kind === 'multiple') {
              ref1 = response.answers;
              for (k = 0, len1 = ref1.length; k < len1; k++) {
                answer = ref1[k];
                if ((TwygoLearn.question_list_method === 1 && TwygoLearn.is_explaining) || TwygoLearn.instructor_review) {
                  class_label = (ref2 = "" + answer.id, indexOf.call(user_answers, ref2) >= 0) && !answer.is_correct ? 'wrong' : '';
                  class_label = answer.is_correct ? 'correct' : class_label;
                } else {
                  class_label = '';
                }
                input_type = response.question.kind === 'single' ? 'radio' : 'checkbox';
                label = $("<div id='" + answer.id + "' class='" + class_label + " question-style'>").append(("<label class='" + class_label + "' style='vertical-align: top'><input type='" + input_type + "' style='margin-top: 0px;max-width: 95%' name='") + question_id + ("' id='" + answer.id + "' value='" + answer.id + "' />" + answer.description + " </label>"));
                $question_answers.append(label);
                if (TwygoLearn.is_explaining) {
                  $("input[name='" + question_id + ("'][value='" + answer.id + "']")).attr("disabled", true);
                }
                if (ref3 = "" + answer.id, indexOf.call(user_answers, ref3) >= 0) {
                  $("input[name='" + question_id + ("'][value='" + answer.id + "']")).attr("checked", true);
                }
                for (id = l = 0, ref4 = $("#question_" + question_number + " .content.center #question #question_answers img").length; 0 <= ref4 ? l < ref4 : l > ref4; id = 0 <= ref4 ? ++l : --l) {
                  $("#question_" + question_number + " .content.center #question #question_answers img")[id].style.display = "display:none";
                  $("#question_" + question_number + " .content.center #question #question_answers img")[id].onload = function() {
                    var image;
                    image = $(this)[0];
                    if (image.width > 530) {
                      image.height = image.height * (530 / image.width);
                      image.width = 530;
                    }
                    return image.style.display = "display:block";
                  };
                }
              }
            } else if (response.question.kind === 'text') {
              $question_answers.append("<textarea id='text_" + question_id + "' style='height:250px; width: 100%;'>" + (user_answers[0] || "") + "</textarea>");
              if (TwygoLearn.is_explaining) {
                $("textarea#text_" + question_id).attr("disabled", true);
              }
            } else if (response.question.kind === 'scale') {
              for (id = m = ref5 = "" + response.question.start_scale, ref6 = "" + response.question.end_scale; ref5 <= ref6 ? m <= ref6 : m >= ref6; id = ref5 <= ref6 ? ++m : --m) {
                $question_answers.append("<div id='" + id + "' style='display: inline-block;'> <label style='text-indent: 5px'><input type='radio' name='" + question_id + "' value='" + id + "' id='" + id + "' /> <p>" + id.toString() + "</p> </label> </div>");
                if (TwygoLearn.is_explaining) {
                  $("input[name='" + question_id + "'][value='" + id + "']").attr("disabled", true);
                }
                if (ref7 = id.toString(), indexOf.call(user_answers, ref7) >= 0) {
                  $("input[name='" + question_id + "'][value='" + id + "']").attr("checked", true);
                }
              }
            } else {
              archive = $("<div id='archive' style='padding-bottom: 5px'>");
              if (attempt.archive) {
                archive.html(("<b>" + (I18n.t('selected_file')) + "</b>: ") + attempt.archive);
              }
              archiveId = $("<input type='hidden' id='attempt_archive_id' value='" + attempt.archive_id + "'/>");
              archiveButton = $("<a class='green_btn btn btn-primary inline' href='#' style='display: inline-block;' >");
              if (TwygoLearn.review) {
                if (attempt.archive) {
                  archiveButton.text(I18n.t('download_file'));
                  archiveButton.attr("href", TwygoStudents.downloadAnswerUrl());
                  archiveButton.attr("download", "download");
                } else {
                  archive.html("<b>" + (I18n.t('no_uploaded_files')) + "</b>");
                  archiveButton.hide();
                }
              } else if (TwygoLearn.is_explaining) {
                TwygoLearn.student_id = TwygoStudents.student_id = TwygoLearn.student.id;
                TwygoLearn.event_id = TwygoStudents.event_id = event_id;
                if (attempt.archive) {
                  archiveButton.text(I18n.t('download_file'));
                  archiveButton.attr("href", TwygoStudents.downloadAnswerUrl());
                  archiveButton.attr("download", "download");
                } else {
                  archive.html("<b>" + (I18n.t('no_uploaded_files')) + "</b>");
                  archiveButton.hide();
                }
              } else {
                if (attempt.archive_id) {
                  archiveButton.text(I18n.t('replace_file'));
                } else {
                  archiveButton.text(I18n.t('send_file'));
                }
                archiveButton.on("click", function() {
                  $('#file-upload').modal();
                  return $('#content_s3_edit').S3Uploader({
                    remove_completed_progress_bar: false,
                    allow_multiple_files: false,
                    before_add: validateFunction,
                    progress_bar_target: $('#progress_div'),
                    click_submit_target: $('#button_send_file')
                  });
                });
              }
              $question_answers.append(archive);
              $question_answers.append(archiveId);
              $question_answers.append(archiveButton);
            }
            $("#question_" + question_number + " .content.center #loading").hide();
            if (attempt.user_review) {
              $("#question_" + question_number + " .footer-questions #review input#" + question_number).prop("checked", true);
            }
            if (TwygoLearn.questions[question_number - 1].can_comment) {
              if (TwygoLearn.review) {
                readonly = "readonly='true'";
              }
              $("#question_" + question_number + " .content.center #question #question_comments").html(("<span style='font-weight:bold'>" + (I18n.t('comments', {
                count: 1
              })) + ":</span><textarea class='form-control' ") + readonly + " id='comment_" + question_id + "' style='height:100px; width:100%; max-width:100%;margin-top:10px'>" + (comment || "") + "</textarea>");
              $("#question_" + question_number + " .content.center #question #question_comments").show();
            }
            if (TwygoLearn.question_list_opinion && (response.question.kind === "text" || response.question.kind === "file") && (TwygoLearn.review || TwygoLearn.review_comment || TwygoLearn.user_review) && response.question_list.kind === "exam") {
              readonly = "";
              if (!TwygoLearn.review) {
                readonly = "readonly='true'";
              }
              content_review = '';
              if (response.attempt.is_waiting_review) {
                content_review = I18n.t("javascripts.is_waiting_review");
              } else if (review.length === 0) {
                content_review = I18n.t("javascripts.not_comment_review");
              } else {
                content_review = review;
              }
              $("#question_" + question_number + " .content.center #question #question_review_comment").html(("<span style='font-weight:bold'>" + (I18n.t('review_comment')) + ": <a href='javascript:void(0);' class='tips'title='" + (I18n.t('review_comment_tips')) + "'><i class='icon-question-circle'></i></a></span><label><input type='checkbox' id='check_comment_") + question_id + ("'>" + (I18n.t('review_comment_no')) + "</label><textarea class='form-control'  ") + readonly + " rel='" + question_id + "' id='review_comment_" + question_id + "' style='height:100px; width:100%; max-width:100%;'>" + (content_review || "") + "</textarea>");
              $("#question_" + question_number + " .content.center #question #question_review_comment").show();
              $(".btn-concluded").show();
            } else {
              $("#question_" + question_number + " .content.center #question #question_review_comment").hide();
            }
            if (TwygoLearn.review && (response.question.kind === "text" || response.question.kind === "file") && response.question_list.kind === "exam") {
              $("#question_" + question_number + " .content.center #question #question_review").show();
              $(".btn-concluded").show();
            } else {
              $("#question_" + question_number + " .content.center #question #question_review").hide();
            }
            if (TwygoLearn.is_explaining && (response.question.explanation !== "")) {
              $("#comment_" + question_id).val(comment || "");
              $("#comment_" + question_id).attr('readonly', 'readonly');
              $("#question_" + question_number + " .content.center #question #question_explanation #text").text("" + response.question.explanation);
              $("#question_" + question_number + " .content.center #question #question_explanation").show();
              $("#question_" + question_number + " .footer-questions #review").hide();
              TwygoLearn.checkFooterButtons(question_number);
            }
            return TwygoLearn.hiddenMobileMobileScroll(question_number);
          }
        });
        if (question_number < TwygoLearn.questions.length) {
          return $("#question_" + question_number + " .footer-questions #finish").hide();
        } else {
          return $("#question_" + question_number + " .footer-questions #next").hide();
        }
      } else {
        $("#question_" + question_number + " .content.center #loading").hide();
        return TwygoLearn.hiddenMobileMobileScroll(question_number);
      }
    },
    loadQuestions: function() {
      var $li, $ul, j, len1, question, question_number, ref;
      $ul = $("<ul>");
      question_number = 0;
      ref = TwygoLearn.questions;
      for (j = 0, len1 = ref.length; j < len1; j++) {
        question = ref[j];
        question_number++;
        $li = $("<li>").attr({
          id: question_number,
          question_number: question_number
        });
        if (question.require_answer === 1) {
          $li.html(question_number + " " + question.title + " <span style='color: #b2b2b2'> * </span>");
        } else {
          $li.html(question_number + " " + question.title);
        }
        if ((this.review && question.is_waiting_review) || (!this.review && question.user_review)) {
          $li.addClass("waiting");
        } else if (question.is_answered) {
          $li.addClass("done");
        } else {
          $li.addClass("pending");
        }
        $ul.append($li);
      }
      $ul.on("click", "li", function() {
        return TwygoLearn.reloadQuestion($(this).attr("question_number"));
      });
      return $("#total_questions").append($ul);
    },
    reloadQuestion: function(question_number) {
      if (question_number == null) {
        question_number = 0;
      }
      $("#question_" + TwygoLearn.current_question).hide();
      this.saveQuestion(TwygoLearn.current_question);
      return this.loadQuestion(question_number);
    },
    reloadQuestions: function() {
      $("#attempt_results, .check_explanation").hide();
      $(".mark-as").hide();
      return this.loadQuestion(1);
    },
    loadAttempts: function(organization) {
      TwygoLearn.organization = organization;
      return $.ajax({
        url: "/o/" + TwygoLearn.organization + ("/question_lists/" + this.content_id + "/check_score"),
        data: {
          preview: this.preview
        },
        dataType: 'json',
        type: 'get',
        complete: function(response) {
          var $attempt_line, attempt, attempts, contents, count, j, len1;
          attempts = JSON.parse(response.responseText).scores;
          contents = JSON.parse(response.responseText).event_content;
          count = $('#table-attemps-itens').find('thead > tr > th').length;
          if (attempts.length === 0) {
            $("#table-attemps-itens").find('tbody').append("<tr><td colspan='" + count + "'><span>" + I18n.t('no_attemp_made') + "</span></td></tr>");
            $('#new-attempts-box').find('.review_only_incorrects').hide();
          } else {
            for (j = 0, len1 = attempts.length; j < len1; j++) {
              attempt = attempts[j];
              $attempt_line = $("<tr>", {
                "class": "attempt_line"
              });
              $attempt_line.append("<td><span class='attempt_date_name'>" + attempt.number + " - " + attempt.date + "</span></td>");
              $attempt_line.append(attempt.situation === I18n.t('javascripts.is_waiting_review') ? "<td><span>" + attempt.situation + "</span></td>" : "<td><span class='question_list_amount'>" + attempt.percentual_correct + attempt.situation + "</span></td>");
              if (attempt.kind === "exam") {
                TwygoLearn.question_list_method = contents.question_list_method || 0;
                if (contents.question_list_method === 1 || contents.question_list_method === 2 || attempt.can_instructor_opinion) {
                  $attempt_line.append(("<td class='action'><a href='javascript:void(0);' class='btn btn-primary' onclick='TwygoLearn.loadReviewResults( TwygoLearn.student, " + TwygoLearn.content_id + ", ") + attempt.question_attempt_id + ")'>" + I18n.t("learn.views.toview") + "</a></td>");
                }
              }
              if (attempt.kind === "research") {
                $attempt_line.append(("<td><span style='width: 50%' class='attempt_date_name'> " + (I18n.t('activerecord.attributes.stage_program.date')) + ": ") + attempt.date + "</span></td>");
                $attempt_line.append("<td><span style='width: 50%' class='question_list_amount'> " + (I18n.t('activerecord.attributes.event_participant.situation')) + ": " + (I18n.t('answered')) + " </span></td>");
              }
              $("#table-attemps-itens").find('tbody').append($attempt_line);
            }
          }
          $("#question_list_attempts #loading").hide();
          return $("#learn-content .content.center").show();
        }
      });
    },
    loadReviewResults: function(student_id, content_id, attempt_id) {
      TwygoLearn.review_comment = true;
      return TwygoLearn.loadResults(student_id, content_id, attempt_id);
    },
    loadResults: function(student_id, content_id, attempt_id) {
      TwygoLearn.user_review = this.user_review = true;
      TwygoLearn.attempt_id = this.attempt_id = attempt_id;
      TwygoLearn.review_only_incorrets = this.review_only_incorrects = $('#only_incorrects').prop("checked");
      TwygoLearn.disableNavigation();
      return $.ajax({
        url: "/o/" + TwygoLearn.organization + ("/question_lists/" + this.content_id + "/number_attempts_questions/" + attempt_id),
        data: {
          preview: this.preview,
          review_only_incorrects: this.review_only_incorrects,
          review_comment: TwygoLearn.review_comment
        },
        dataType: 'json',
        type: 'get',
        complete: function(response) {
          var scores;
          TwygoLearn.questions = JSON.parse(response.responseText).attempts;
          scores = JSON.parse(response.responseText);
          if (TwygoLearn.questions.length > 0) {
            TwygoLearn.is_explaining = true;
            TwygoLearn.loadQuestions();
            TwygoLearn.loadQuestion(1);
            return TwygoLearn.loadScoreResults(scores);
          } else {
            return TwygoFlashMessage.setMessage('alert', I18n.t("javascripts.no_questions_to_show"));
          }
        }
      });
    },
    loadScoreResults: function(scores) {
      var category_score, j, len1, ref;
      if (scores.total_score.situation !== I18n.t('javascripts.is_waiting_review')) {
        $("#attempt_results #results #question_list_situation").text(scores.total_score.percentual_correct + scores.total_score.situation);
        ref = scores.category_scores;
        for (j = 0, len1 = ref.length; j < len1; j++) {
          category_score = ref[j];
          $("#attempt_results #results #question_list_categories").append("<div>" + category_score.category1_label + " : " + (category_score.category1 === "" ? I18n.t('views.learn.divers') : category_score.category1) + " - " + (category_score.category2 !== "" ? category_score.category2_label + " : " + category_score.category2 + " -" : "") + (" " + (I18n.t('questions')) + ": ") + category_score.questions_amount + (" - " + (I18n.t('hits')) + ": ") + category_score.correct_amount + "<div>");
        }
      } else {
        $("#attempt_results #results #question_list_situation").css("text-align", "center");
        $("#attempt_results #results #question_list_situation").text(I18n.t('questionnaire_submitted'));
        $("#attempt_results #results #question_list_categories").hide();
      }
      if (scores.total_score.situation === "Aprovado") {
        TwygoLearn.markComplete(TwygoLearn.content_id);
      }
      $("#attempt_results #loading").hide();
      $("#attempt_results #results, .check_explanation").show();
      return $(".mark-as").show();
    },
    markReview: function(question_number) {
      if (question_number == null) {
        question_number = 1;
      }
      if ($("#question_" + question_number + " .footer-questions #review input#" + question_number).is(":checked")) {
        return $("#total_questions ul li#" + question_number).removeClass("pending").removeClass("done").addClass("waiting");
      } else if (TwygoLearn.questions[question_number - 1].is_answered) {
        return $("#total_questions ul li#" + question_number).removeClass("waiting").removeClass("pending").addClass("done");
      } else {
        return $("#total_questions ul li#" + question_number).removeClass("waiting").removeClass("done").addClass("pending");
      }
    },
    showQuestions: function() {
      if ($('#total_questions').is(':visible')) {
        return $("#total_questions").fadeOut().hide();
      } else {
        return $("#total_questions").fadeIn().show();
      }
    },
    showAllQuestionAlternatives: function() {
      var animation_time, answers_div, content_div;
      animation_time = 1000;
      answers_div = $('.question-container:not(.question-container[style="display: none;"]) #question_answers');
      content_div = $('.question-container:not(.question-container[style="display: none;"]) .content.center');
      return content_div.animate({
        scrollTop: answers_div.height()
      }, animation_time);
    },
    showResults: function() {
      if (!TwygoLearn.is_explaining) {
        $.ajax({
          url: "/o/" + TwygoLearn.organization + ("/question_lists/" + this.content_id + "/check_category_score"),
          data: {
            preview: this.preview
          },
          dataType: 'json',
          type: 'get',
          complete: function(response) {
            var category_score, j, len1, ref, scores;
            scores = JSON.parse(response.responseText);
            if (scores.total_score.situation !== I18n.t('javascripts.is_waiting_review')) {
              $("#attempt_results #results #question_list_situation").text(scores.total_score.percentual_correct + scores.total_score.situation);
              ref = scores.category_scores;
              for (j = 0, len1 = ref.length; j < len1; j++) {
                category_score = ref[j];
                $("#attempt_results #results #question_list_categories").append("<div>" + category_score.category1_label + ": " + (category_score.category1 === "" ? I18n.t('views.learn.divers') : category_score.category1) + " - " + (category_score.category2 !== "" ? category_score.category2_label + ": " + category_score.category2 + " -" : "") + (" " + (I18n.t('questions')) + ": ") + category_score.questions_amount + (" - " + (I18n.t('hits')) + ": ") + category_score.correct_amount + "<div>");
              }
            } else {
              $("#attempt_results #results #question_list_situation").css("text-align", "center");
              $("#attempt_results #results #question_list_situation").text(I18n.t('questionnaire_submitted'));
              $("#attempt_results #results #question_list_categories").hide();
            }
            if (scores.total_score.situation === "Aprovado") {
              if (!TwygoLearn.must_not_complete_content) {
                TwygoLearn.markComplete(TwygoLearn.content_id);
              }
              if (TwygoLearn.must_not_complete_content) {
                TwygoLearn.must_not_complete_content = null;
              }
            }
            return TwygoLearn.is_explaining = true;
          }
        });
      }
      $("#attempt_results #loading").hide();
      $("#attempt_results #results, .check_explanation").show();
      return $(".mark-as").show();
    },
    saveQuestion: function(question_number, status) {
      var answer, answers_description, answers_id, archive_id, comment, is_answered, j, len1, params, question, question_id, ref, user_review;
      if (question_number == null) {
        question_number = 1;
      }
      if (status == null) {
        status = "";
      }
      if (!TwygoLearn.is_explaining) {
        question = TwygoLearn.questions[question_number - 1];
        question_id = question.question_id;
        user_review = $("#review input#" + question_number).is(":checked");
        archive_id = $("#question_" + question_number + " .content.center #question #question_answers #attempt_archive_id").val();
        is_answered = $("input[name='" + question_id + "']").is(':checked') || archive_id !== void 0;
        comment = $("#question_" + question_number + " .content.center #question #question_comments textarea").val() || "";
        TwygoLearn.markReview(question_number);
        answers_id = [];
        answers_description = [];
        ref = $("input[name='" + question_id + "']:checked");
        for (j = 0, len1 = ref.length; j < len1; j++) {
          answer = ref[j];
          if (answer.value) {
            answers_id.push(answer.value);
            answers_description.push($("div#" + answer.value + " p").text());
          } else if (answer.val()) {
            answers_id.push(answer.val());
          }
        }
        if ($("#text_" + question_id).val()) {
          answers_id.push($("#text_" + question_id).val());
        }
        params = {
          question_id: question_id,
          answers_id: answers_id,
          user_review: user_review,
          comment: comment,
          archive_id: archive_id,
          preview: this.preview,
          answers_description: answers_description,
          question_number: question_number
        };
        this.ajaxPostSaveQuestion(params);
      }
      return $("#question_" + question_number).hide();
    },
    ajaxPostSaveQuestion: function(params) {
      return $.ajax({
        method: "post",
        url: "/o/" + TwygoLearn.organization + ("/question_lists/" + this.content_id + "/save_question/"),
        data: params
      });
    },
    reloadContent: function() {
      var content;
      content = $("#content_" + TwygoLearn.content_id + " a");
      return this.loadContent(content);
    },
    saveAttempt: function(last_question) {
      var _msg, contentId;
      if (!TwygoLearn.is_explaining) {
        contentId = TwygoLearn.content_id;
        TwygoLearn.markIncomplete(contentId);
        $("#question_" + last_question).show();
        _msg = '';
        if ($('#total_questions').find('ul').find('.waiting').length > 0) {
          _msg = I18n.t('questions_awaiting_review');
        }
        if (!confirm(_msg + I18n.t('end_quiz'))) {
          return;
        }
        $("#question_" + last_question).hide();
        $("#learn-content").addClass('show-resume');
        $.ajax({
          url: "/o/" + TwygoLearn.organization + "/question_lists/" + contentId + "/save_attempt",
          data: {
            preview: this.preview
          },
          type: 'get',
          complete: function(response) {
            var response_message, response_require_answer, response_text;
            if (response.responseJSON !== void 0) {
              if (response.responseJSON.status === "ok") {
                $('#btn-finish').fadeIn();
                TwygoLearn.markComplete(contentId);
                $("#question .content.center #question #question_title").text("");
                $("#question .content.center #question #question_answers").text("");
                $("#attempt_results #results").hide();
                $("#attempt_results").show();
                return setTimeout(function() {
                  TwygoLearn.must_not_complete_content = true;
                  return TwygoLearn.showResults();
                }, 1000);
              } else {
                response_text = response.responseJSON.text || [];
                response_require_answer = response.responseJSON.require_answer_question || [];
                response_message = response.responseJSON.message;
                if (response_text === "require answer") {
                  TwygoLearn.loadQuestion(response_require_answer);
                  return TwygoFlashMessage.setMessage('error', response_message);
                }
              }
            } else {
              $("#question .content.center #question #question_title").text("");
              $("#question .content.center #question #question_answers").text("");
              $("#attempt_results #results").hide();
              $("#attempt_results").show();
              return setTimeout(function() {
                return TwygoLearn.showResults();
              }, 1000);
            }
          }
        });
      } else {
        $("#attempt_results, .check_explanation").show();
        $("#learn-content .content.center").show();
        $("#actions button").show();
        $(".mark-as").show();
        this.reloadContent();
      }
      $("#footer-actions").removeClass('multiple-buttons');
      return TwygoLearn.enableNavigation();
    },
    start_webinar: function(event_id, event_content_id, new_tab) {
      if (new_tab == null) {
        new_tab = false;
      }
      if ($('.webinar-img').hasClass('waiting') || $('.webinar-img').hasClass('ended')) {
        return;
      }
      return $.ajax({
        url: "/e/" + event_id + "/learn/" + event_content_id + "/webinar_access",
        type: 'get',
        complete: function(response) {
          var url_tab, win;
          if (response.responseJSON.status === 'success') {
            url_tab = "https://app.gotowebinar.com/index.html#" + response.responseJSON.content.webinar_id + "/" + response.responseJSON.content.webinar_key + "/" + response.responseJSON.registrant;
            if (new_tab === true) {
              $('.webinar-img-container').fadeOut('fast');
              $('.webinar-message').text(response.responseJSON.message);
              $('.webinar-message').append("<div class='case_not_open'> " + (I18n.t('in_case_tab_not_open')) + ", <a href='" + url_tab + "' target='_blank'> " + (I18n.t('views.learn.click_here')) + "  </a>. </div>");
              win = window.open(url_tab, '_blank');
              return win.focus();
            } else {
              window.onbeforeunload = function() {
                return I18n.t('confirm_leave_webinar');
              };
              TwygoLearn.confirm_load_content = true;
              $('.content-webinar-message').html("<iframe id='" + response.responseJSON.content.webinar_id + "_webinar' style='height: calc(100% - 34px)' frameborder='0' allow='autoplay; encrypted-media' allowfullscreen> </iframe>");
              $("#" + response.responseJSON.content.webinar_id + "_webinar").attr("title", "" + response.responseJSON.content.schedule_subject);
              return $("#" + response.responseJSON.content.webinar_id + "_webinar").attr("src", url_tab);
            }
          } else {
            $('.webinar-img-container').fadeOut('fast');
            return $('.webinar-message').text(response.responseJSON.message);
          }
        }
      });
    },
    should_webinar_start: function(event_content_id) {
      return $.ajax({
        url: "/e/" + TwygoEvent.eventData.id + "/learn/" + event_content_id + "/should_webinar_start",
        type: 'get',
        complete: function(response) {
          if (response.responseJSON.status === 'finished') {
            TwygoLearn.markComplete(event_content_id);
          }
          if (response.responseJSON.status === 'success') {
            $("#content_" + event_content_id + " a").click();
          }
          if (response.responseJSON.status === 'waiting') {
            $('.webinar-loader img').fadeOut('fast');
            $('.webinar-message').text(response.responseJSON.message);
            return $('.webinar-message').append("<div style='width: 100%; margin-top: 20px'> <button class='green-btn' onclick=\"$('#content_" + event_content_id + " a').click()\"> " + (I18n.t('try_again')) + " </button> <div>");
          } else {
            $('.webinar-loader img').fadeOut('fast');
            return $('.webinar-message').text(response.responseJSON.message);
          }
        }
      });
    },
    allow_content_microphone: function() {
      if (!(TwygoLearn.detectIE() > 0)) {
        return navigator.mediaDevices.getUserMedia({
          video: true,
          audio: true
        }, (function(localMediaStream) {}), function(err) {});
      }
    },
    detectIE: function() {
      var edge, msie, rv, trident, ua;
      ua = window.navigator.userAgent;
      msie = ua.indexOf('MSIE ');
      if (msie > 0) {
        return parseInt(ua.substring(msie + 5, ua.indexOf('.', msie)), 10);
      }
      trident = ua.indexOf('Trident/');
      if (trident > 0) {
        rv = ua.indexOf('rv:');
        return parseInt(ua.substring(rv + 3, ua.indexOf('.', rv)), 10);
      }
      edge = ua.indexOf('Edge/');
      if (edge > 0) {
        return parseInt(ua.substring(edge + 5, ua.indexOf('.', edge)), 10);
      }
      return false;
    }
  };

}).call(this);
(function() {
  this.TwygoLearnContent = {
    text: function($content, _id) {
      var _container_height, _content_height;
      _container_height = parseInt($content.height());
      _content_height = parseInt($content.find('.scroll').height());
      if (_content_height > _container_height) {
        return $content.on('scroll', function() {
          var _position, _scroll;
          _scroll = parseInt($(this).scrollTop());
          _position = _container_height + _scroll;
          if ((((_content_height - 21) - _position) / _container_height) === 0) {
            return TwygoLearn.markComplete(_id);
          }
        });
      } else {
        return setTimeout(function() {
          return TwygoLearn.markComplete(_id);
        }, 2000);
      }
    },
    box_frame: function($content, _id) {}
  };

}).call(this);
(function() {
  this.TwygoLearningPath = {
    path: '',
    template_course: '',
    template_user: '',
    template_item: '',
    template_select: '',
    template_check: '',
    organization_id: '',
    id: '',
    active_filter: '0',
    users_filter: {},
    users_list: {},
    events_list: {},
    mass_ids: [],
    courses_length: 0,
    initialize: function() {
      TwygoLearningPath.active_filter = $('#user_filter').val();
      TwygoLearningPath.template_course = $('#courses_item-list').html();
      TwygoLearningPath.template_user = $('#users_item-list').html();
      TwygoLearningPath.template_item = $('#item-list').html();
      TwygoLearningPath.template_select = $('#item-list_select').html();
      TwygoLearningPath.template_check = $('#item-list_checkbox').html();
      TwygoLearningPath.ajaxUsersList();
      TwygoLearningPath.ajaxCoursesList();
      TwygoLearningPath.autocompletInput();
      TwygoLearningPath.listenerSave();
      TwygoLearningPath.listenerCheckbox();
      TwygoLearningPath.listenerFilterInner();
      return TwygoLearningPath.CKLoad();
    },
    back_history: function() {
      return window.history.back();
    },
    back_index: function() {
      return window.location.href = "/o/" + TwygoLearningPath.organization_id + "/learning_paths/";
    },
    sortableInit: function() {
      return $('.learning__courses-content').sortable({
        items: "li:not(.not-sortable)",
        update: function(event, ui) {
          return TwygoLearningPath.setNewOrder($('.learning__courses-content'));
        }
      });
    },
    setNewOrder: function($selector) {
      return $selector.find('li').each(function() {
        var _index;
        _index = $selector.find('li').index(this);
        return $(this).find('.order').text(_index + 1);
      });
    },
    CKLoad: function() {
      return TwygoRichText.initialize(["learning_path_description"], {
        filebrowserImageBrowseUrl: TwygoOrganization.manageImages,
        resize_enabled: false,
        height: '198px',
        toolbars: [
          {
            name: 'insert',
            items: ['Table']
          }, {
            name: 'links',
            items: ['Link', 'Unlink']
          }
        ]
      });
    },
    changeOrder: function(url, list_by, edit) {
      if ($('#icon-' + list_by)[0] !== $('.selected-order')[0]) {
        $('.selected-order')[0].setAttribute("order", "");
      }
      $('.selected-order')[0].setAttribute("class", "");
      if ($('#icon-' + list_by)[0].getAttribute("order") === "" || $('#icon-' + list_by)[0].getAttribute("order") === "DESC") {
        $('#icon-' + list_by)[0].setAttribute("order", "ASC");
        $('#icon-' + list_by).removeClass('fa fa-angle-down');
        $('#icon-' + list_by).addClass('fa fa-angle-up selected-order');
        if (edit) {
          return TwygoLearningPath.ajaxCoursesList(list_by, 'ASC');
        } else {
          return window.location.href = url + '/?order=ASC';
        }
      } else {
        $('#icon-' + list_by)[0].setAttribute("order", "DESC");
        $('#icon-' + list_by).removeClass('fa fa-angle-up');
        $('#icon-' + list_by).addClass('fa fa-angle-down selected-order');
        if (edit) {
          return TwygoLearningPath.ajaxCoursesList(list_by, 'DESC');
        } else {
          return window.location.href = url + '/?order=DESC';
        }
      }
    },
    autocompletInput: function() {
      $('#learning-content').find('input#courses_name').on('input', function() {
        var $container, $list, _list, _value;
        _value = $(this).val();
        $container = $(this).closest('.autocomplet--content');
        $list = $('#learning-path-area').find('.courses-list');
        if (_value.length > 1) {
          _list = TwygoLearningPath.filterList(TwygoLearningPath.events_list.all, _value);
          TwygoLearningPath.buildItemList($list, _list, I18n.t('_courses'), 'courses');
          return $container.find('.autocomplet--list').fadeIn();
        } else {
          return $container.find('.autocomplet--list').fadeOut();
        }
      });
      $('#learning-content').find('input#user_name').on('keyup', function() {
        var $container, _list, _name, _type, _value;
        _value = $(this).val();
        $container = $(this).closest('.autocomplet--content');
        if (_value.length >= 2) {
          _list = [];
          _type = '';
          $container.find('.autocomplet--list').fadeIn();
          if (TwygoLearningPath.active_filter !== '0') {
            switch (TwygoLearningPath.active_filter) {
              case "1":
                _type = 'enterprises';
                _name = I18n.t('activerecord.attributes.event_participant.enterprise');
                _list = TwygoLearningPath.filterList(TwygoLearningPath.users_filter.enterprises, _value);
                break;
              case "2":
                _type = 'roles';
                _name = I18n.t('activerecord.attributes.event_participant.role');
                _list = TwygoLearningPath.filterList(TwygoLearningPath.users_filter.roles, _value);
                break;
              case "3":
                _type = 'department';
                _name = I18n.t('department');
                _list = TwygoLearningPath.filterList(TwygoLearningPath.users_filter.departments, _value);
            }
            TwygoLearningPath.buildItemListSelect($('#learning-path-area').find('.users-list'), _list, _name, _type);
            return $('.users-list').removeClass('ajax-loading');
          } else {
            return $.ajax({
              url: "/o/" + TwygoLearningPath.organization_id + "/learning_paths/users_by_filter.json",
              data: {
                id: TwygoLearningPath.id,
                term: _value,
                filter: "name",
                all: 1
              },
              dataType: 'json',
              type: 'get',
              async: false,
              beforeSend: function() {
                return $('.users-list').addClass('ajax-loading');
              },
              success: function(response) {
                var $list;
                $('.users-list').removeClass('ajax-loading');
                $list = $('#learning-path-area').find('.users-list');
                TwygoLearningPath.users_list = response.users;
                return TwygoLearningPath.buildItemList($list, TwygoLearningPath.users_list, I18n.t('activerecord.models.user', {
                  count: 1
                }), 'users');
              }
            });
          }
        } else {
          return $container.find('.autocomplet--list').fadeOut();
        }
      });
      $('.autocomplet--list').find('.btn-cancel').on('click', function() {
        return $(this).closest('.autocomplet--list').fadeOut();
      });
      return $('#user_filter').on('change', function(e) {
        return TwygoLearningPath.active_filter = $(this).val();
      });
    },
    filterList: function(__list, __filter) {
      var __new_list;
      __new_list = [];
      $.each(__list, function(i, o) {
        if (o.name.toLowerCase().indexOf(__filter.toLowerCase()) >= 0) {
          __new_list.push(o);
        }
      });
      return __new_list;
    },
    ajaxCoursesList: function(list_by, order) {
      if (list_by == null) {
        list_by = 'sequence';
      }
      if (order == null) {
        order = 'ASC';
      }
      return $.ajax({
        url: "/o/" + TwygoLearningPath.organization_id + "/learning_paths/events_tab.json",
        dataType: 'json',
        type: 'GET',
        data: {
          id: TwygoLearningPath.id,
          list_by: list_by,
          order: order
        },
        async: true,
        beforeSend: function() {
          return $('#courses').addClass('ajax-loading');
        },
        success: function(response, textStatus, jqXHR) {
          var $list;
          $list = $('#learning-path-area').find('.courses-list');
          TwygoLearningPath.events_list = response;
          if (TwygoLearningPath.events_list["in"].length) {
            return TwygoLearningPath.buildCourseItemList($('.learning__courses-content'), TwygoLearningPath.events_list["in"]);
          }
        },
        complete: function(response) {
          TwygoLearningPath.sortableInit();
          return $('#courses').removeClass('ajax-loading');
        }
      });
    },
    ajaxUsersList: function() {
      return $.ajax({
        url: "/o/" + TwygoLearningPath.organization_id + "/learning_paths/users_tab.json",
        dataType: 'json',
        type: 'GET',
        async: true,
        data: {
          id: TwygoLearningPath.id
        },
        beforeSend: function() {
          return $('.courses-list').addClass('ajax-loading');
        },
        success: function(response) {
          var _list;
          _list = response["in"];
          TwygoLearningPath.users_filter = response.infor;
          return TwygoLearningPath.buildUserItemList($('.learning__users-content'), _list);
        },
        complete: function(response) {
          return $('.courses-list').removeClass('ajax-loading');
        }
      });
    },
    buildItemList: function($container, list, _msg, _type) {
      var _out;
      _out = '';
      if (list.length === 0) {
        _out = "<li class='not-found'>\n  " + (I18n.t('view.not_found_list', {
          msg: _msg
        })) + "\n</li>";
      } else {
        $.each(list, function(i, item) {
          item['type'] = _type;
          return _out += Mustache.render(TwygoLearningPath.template_item, item);
        });
      }
      return $container.html(_out);
    },
    buildItemListSelect: function($container, list, _msg, _type) {
      var _out;
      _out = '';
      if (list.length === 0) {
        _out = "<li class='not-found'>\n  " + (I18n.t('view.not_found_list', {
          msg: _msg
        })) + "\n</li>";
      } else {
        $.each(list, function(i, item) {
          item['type'] = _type;
          return _out += Mustache.render(TwygoLearningPath.template_select, item);
        });
      }
      return $container.html(_out);
    },
    buildItemListCheck: function($container, list, _msg, _type) {
      var _out;
      _out = '';
      if (list.length === 0) {
        _out = "<li class='not-found'>\n  Nenhum item encontrado\n</li>";
      } else {
        $.each(list, function(i, item) {
          item['type'] = _type;
          return _out += Mustache.render(TwygoLearningPath.template_check, item);
        });
      }
      return $container.html(_out);
    },
    buildCourseItemList: function($container, list) {
      var _msg, _out;
      _out = '';
      _msg = I18n.t('activerecord.attributes.event_stage.event');
      if (list.length === 0) {
        _out = "<li class='not-found'>\n   " + (I18n.t('view.not_found_list', {
          msg: _msg
        })) + "\n</li>";
      } else {
        $.each(list, function(i, item) {
          return _out += Mustache.render(TwygoLearningPath.template_course, item);
        });
      }
      return $container.html(_out);
    },
    buildUserItemList: function($container, list) {
      var _msg, _out;
      _out = '';
      _msg = I18n.t("user.user");
      if (list.length === 0) {
        _out = "<li class='not-found'>\n  " + (I18n.t('view.not_found_list', {
          msg: _msg
        })) + "\n</li>";
      } else {
        $.each(list, function(i, item) {
          return _out += Mustache.render(TwygoLearningPath.template_user, item);
        });
      }
      return $container.html(_out);
    },
    associate_courses: function(_id) {
      var _name, _order;
      _order = $("#learning__courses").find('.dinamyc-list > li').length + 1;
      _name = $('#courses').find(".item-" + _id).find('.name').text().trim();
      return $.ajax({
        type: 'POST',
        url: "/o/" + TwygoLearningPath.organization_id + "/learning_paths/associate_course.json",
        dataType: 'json',
        async: true,
        data: {
          id: TwygoLearningPath.id,
          type: 'courses',
          associate_id: _id,
          sequence: _order,
          name: _name
        },
        beforeSend: function() {
          $('#courses').find('.inner-form').addClass('ajax-loading');
          return $('#courses').find('.autocomplet--list').fadeOut();
        },
        success: function(response) {
          var _out;
          TwygoFlashMessage.setMessage(response.type, response.msg);
          _out = Mustache.render(TwygoLearningPath.template_course, response);
          return $('#courses').find('.dinamyc-list').append(_out);
        },
        error: function(response, text) {
          return TwygoFlashMessage.setMessage(response.responseJSON.type, response.responseJSON.msg);
        },
        complete: function(response) {
          var $list;
          TwygoLearningPath.events_list.all = [];
          $list = $('#learning-path-area').find('.courses-list');
          TwygoLearningPath.buildItemList($list, [], I18n.t('_courses'), 'courses');
          $('#courses').find('.autocomplet--list').fadeIn();
          return $('#courses').find('.inner-form').removeClass('ajax-loading');
        }
      });
    },
    associate_users: function(_id) {
      var _name;
      _name = $('#students').find('.users-list').find(".item-" + _id).find('.name').text().trim();
      return $.ajax({
        type: 'POST',
        url: "/o/" + TwygoLearningPath.organization_id + "/learning_paths/associate_user.json",
        dataType: 'json',
        async: true,
        data: {
          id: TwygoLearningPath.id,
          type: 'users',
          associate_id: _id,
          name: _name
        },
        beforeSend: function() {
          $('.autocomplet--list > ul').addClass('ajax-loading');
          return $('#students').find('.autocomplet--list').fadeOut();
        },
        success: function(response) {
          var _out;
          response.total = TwygoLearningPath.events_list["in"].length;
          _out = Mustache.render(TwygoLearningPath.template_user, response);
          if ($('#students').find('.dinamyc-list').find('.not-found').length) {
            $('#students').find('.dinamyc-list').html('');
          }
          return TwygoFlashMessage.setMessage(response.type, response.msg);
        },
        error: function(response, text) {
          TwygoFlashMessage.setMessage(response.responseJSON.type, response.responseJSON.msg);
          return $("#students").removeClass('ajax-loading');
        },
        complete: function(response) {
          return $('.users-list').removeClass('ajax-loading');
        }
      });
    },
    associateItem: function(type, _id, line) {
      switch (type) {
        case 'courses':
          TwygoLearningPath.associate_courses(_id);
          break;
        case 'users':
          TwygoLearningPath.associate_users(_id);
      }
      return line.addClass("disabled");
    },
    mass_associate_users: function() {
      $('#select-users_modal .close').trigger('click');
      if (TwygoLearningPath.mass_ids.length > 0) {
        return $.ajax({
          type: 'POST',
          url: "/o/" + TwygoLearningPath.organization_id + "/learning_paths/mass_associate_user.json",
          dataType: 'json',
          async: true,
          data: {
            learning_path_ids: [TwygoLearningPath.id],
            associate_ids: TwygoLearningPath.mass_ids
          },
          beforeSend: function() {
            return $("#students").addClass('ajax-loading');
          },
          error: function(response, text) {
            TwygoFlashMessage.setMessage(response.responseJSON.type, response.responseJSON.msg);
            return $("#students").removeClass('ajax-loading');
          },
          success: function(response) {
            TwygoFlashMessage.setMessage(response.type, response.msg);
            return $("#students").removeClass('ajax-loading');
          },
          complete: function() {
            return TwygoLearningPath.mass_ids = [];
          }
        });
      }
    },
    remove: function(_id, _type) {
      if (confirm('Deseja realmente remover está associação?')) {
        return $.ajax({
          type: 'DELETE',
          url: "/o/" + TwygoLearningPath.organization_id + "/learning_paths/remove_associate.json",
          dataType: 'json',
          async: true,
          data: {
            id: TwygoLearningPath.id,
            type: _type,
            associate_id: _id
          },
          beforeSend: function() {
            return $(".learning__" + _type + "-content").addClass('ajax-loading');
          },
          success: function(response) {
            $(".learning__" + _type + "-content").find("[data-rel=" + _id + "]").fadeOut().remove();
            TwygoFlashMessage.setMessage('success', response.msg);
            if (_type === 'courses') {
              return TwygoLearningPath.setNewOrder($('.learning__courses-content'));
            }
          },
          complete: function(response) {
            return $(".learning__" + _type + "-content").removeClass('ajax-loading');
          }
        });
      }
    },
    remove_user_from_learning_path: function(_id, _type) {
      return $.ajax({
        type: 'DELETE',
        url: "/o/" + TwygoLearningPath.organization_id + "/learning_paths/remove_associate.json",
        dataType: 'json',
        async: true,
        data: {
          id: TwygoLearningPath.id,
          type: _type,
          associate_id: _id
        },
        beforeSend: function() {
          return $(".learning__" + _type + "-content").addClass('ajax-loading');
        },
        success: function(response) {
          $(".learning__" + _type + "-content").find("[data-rel=" + _id + "]").fadeOut().remove();
          if (_type === 'courses') {
            return TwygoLearningPath.setNewOrder($('.learning__courses-content'));
          }
        },
        complete: function(response) {
          return $(".learning__" + _type + "-content").removeClass('ajax-loading');
        }
      });
    },
    "delete": function(event) {
      var ModalRemoveCoupons, answer, event_json;
      ModalRemoveCoupons = TwygoModalRemoveItem;
      ModalRemoveCoupons.initialize({
        id: 'modal-remove-learning-path',
        configuration: {
          url: "/o/" + TwygoLearningPath.organization_id + "/learning_paths/",
          async: true
        },
        callbacks: {
          beforeSend: function() {
            return $("#learning-path_table").addClass('ajax-loading');
          },
          error: function(response) {
            return TwygoFlashMessage.setMessage('error', response.responseJSON.msg);
          },
          complete: function(response) {
            return $("#learning-path_table").removeClass('ajax-loading');
          },
          success: function(response) {
            TwygoFlashMessage.setMessage(response.type, response.msg);
            return $("#path-" + event[0]).fadeOut();
          }
        }
      });
      event_json = JSON.stringify({
        id: event[0],
        name: event[1]
      });
      return answer = ModalRemoveCoupons.open(event_json);
    },
    listenerSave: function() {
      return $('form.learning_path-form').on('submit', function(event) {
        return $('form.learning_path-form').addClass('ajax-loading');
      });
    },
    updateSequence: function() {
      var __list;
      __list = {};
      $('.learning__courses-content').find('li').each(function(i, e) {
        var _index, _rel;
        _index = $(this).find('.order').text().trim();
        _rel = $(this).attr('data-rel').trim();
        if (!!_rel) {
          return __list[_rel] = _index;
        }
      });
      return $.ajax({
        type: 'POST',
        url: "/o/" + TwygoLearningPath.organization_id + "/learning_paths/courses_sequence.json",
        dataType: 'json',
        async: true,
        data: {
          id: TwygoLearningPath.id,
          list: __list
        },
        beforeSend: function() {
          return $('#courses').find('.inner-form').addClass('ajax-loading');
        },
        success: function(response) {
          return TwygoFlashMessage.setMessage(response.type, response.msg);
        },
        complete: function(response) {
          return $('#courses').find('.inner-form').removeClass('ajax-loading');
        }
      });
    },
    toggleModal: function() {
      $('#select-users_modal').fadeIn('fast');
      $('#select-users_modal').find('.inner-box').delay(500).addClass('show');
      $('#select-users_modal .close').on('click', function() {
        $('#select-users_modal').find('.inner-box').removeClass('show');
        return $('#select-users_modal').delay(500).fadeOut('fast');
      });
      return $('#select-users_modal #submit-associate').on('click', function() {
        $(this).off('click');
        return TwygoLearningPath.mass_associate_users();
      });
    },
    openSelect: function(_term, _filter) {
      var _label;
      TwygoLearningPath.toggleModal();
      _label = $('#user_filter').find(":selected").text();
      setTimeout(function() {
        $('#select-users_modal').find('.panel-header').find('.description').find('.filter').text(_label + ": ");
        return $('#select-users_modal').find('.panel-header').find('.description').find('.term').text(_term);
      }, 500);
      return $.ajax({
        type: 'GET',
        url: "/o/" + TwygoLearningPath.organization_id + "/learning_paths/users_by_filter.json",
        dataType: 'json',
        async: true,
        data: {
          id: TwygoLearningPath.id,
          term: _term,
          filter: _filter
        },
        beforeSend: function() {
          return $('#select-users_modal').find('.inner-box').addClass('ajax-loading');
        },
        error: function(response, text) {
          TwygoFlashMessage.setMessage(response.responseJSON.type, response.responseJSON.msg);
          return $('#select-users_modal .close').trigger('click');
        },
        success: function(response) {
          return TwygoLearningPath.buildItemListCheck($('#select-users_modal').find('.list_select-users'), response.users, response.filter, _filter);
        },
        complete: function(response) {
          $('#select-users_modal').find('.inner-box').removeClass('ajax-loading');
          $('#select-users_modal').find('.panel-header').find('.description').find('.filter').text('');
          return $('#select-users_modal').find('.panel-header').find('.description').find('.term').text('');
        }
      });
    },
    listenerCheckbox: function() {
      $('#select-users_all').on('change', function(e) {
        var _checked;
        _checked = $(this).prop('checked');
        return $('.list_select-users').find('li').each(function(i, item) {
          $(this).find('input[type="checkbox"]').prop('checked', _checked);
          return TwygoLearningPath.addToMassId($(this).find('input[type="checkbox"]'));
        });
      });
      return $('.list_select-users').on('change', 'input[type="checkbox"]', function(e) {
        return TwygoLearningPath.addToMassId($(this));
      });
    },
    addToMassId: function(user) {
      if (user.prop('checked')) {
        return TwygoLearningPath.mass_ids.push(user.val());
      } else {
        return TwygoLearningPath.mass_ids = TwygoLearningPath.mass_ids.filter(function(value) {
          return value !== _id;
        });
      }
    },
    listenerFilterInner: function() {
      return $('#inner-filter').on('input', function() {
        var __value;
        __value = $(this).val().toLowerCase();
        return $('.list_select-users').find('li').each(function() {
          var __name;
          __name = $(this).find('.name').text().toLowerCase();
          if (__name.indexOf(__value) > -1) {
            return $(this).fadeIn();
          } else {
            return $(this).fadeOut();
          }
        });
      });
    },
    showSuccess: function(response) {
      response = JSON.parse(response.replace("\n", ""));
      if (response.action === 'create') {
        TwygoFlashMessage.setMessage(response.type, response.msg);
        return setTimeout(function() {
          return window.location.href = "/o/" + TwygoLearningPath.organization_id + "/learning_paths/" + response.id + "/edit";
        }, 1000);
      } else {
        TwygoFlashMessage.setMessage(response.type, response.msg);
        $('.learning_path-form').removeClass('ajax-loading');
        return setTimeout(function() {
          return window.location.reload();
        }, 1000);
      }
    },
    showErros: function(fields, messages) {
      var _$list, _form, _header, field, j, k, len, len1, msg;
      messages = JSON.parse(messages);
      fields = JSON.parse(fields);
      _$list = $("<ul/>");
      _form = $('form.learning_path-form');
      _header = $("<h2>").text(I18n.t("activerecord.errors.template.header", {
        count: messages.length,
        model: I18n.t('activerecord.models.event')
      }));
      _$list.append(_header);
      for (j = 0, len = messages.length; j < len; j++) {
        msg = messages[j];
        _$list.append($("<li>").text(msg));
      }
      for (k = 0, len1 = fields.length; k < len1; k++) {
        field = fields[k];
        _form.find(":input[name$='[" + field + "]']").parent('div').addClass('field_with_errors');
        _form.find(":input[name$='[" + field + "]']").on('input', function() {
          if ($(this).val().length > 2) {
            return $(this).parent('div').removeClass('field_with_errors');
          }
        });
      }
      $('#error-content').html(_$list).slideDown();
      return _form.removeClass('ajax-loading');
    },
    showToastPrivatePubUser: function(condition) {
      switch (condition) {
        case 'success':
          return TwygoFlashMessage.setMessage("success", I18n.t('learning_path.success_import_user'));
        case 'error':
          return TwygoFlashMessage.setMessage("error", I18n.t('learning_path.error_import_user'));
        case 'alert':
          return TwygoFlashMessage.setMessage("alert", I18n.t('learning_path.alert_import_user'));
      }
    },
    showToastPrivatePubCourse: function(condition, customErrorMessage) {
      if (!!customErrorMessage) {
        customErrorMessage = I18n.t('learning_path.error_import_course');
      }
      return setTimeout(function() {
        if (condition) {
          return TwygoFlashMessage.setMessage("success", I18n.t('learning_path.success_import_course'));
        } else {
          return TwygoFlashMessage.setMessage("error", customErrorMessage);
        }
      }, 500);
    }
  };

}).call(this);
(function() {
  this.TwygoLearningPathUser = {
    organization_id: '',
    user_id: '',
    initialize: function() {
      TwygoLearningPathUser.loadLeaningPathsByUserAndOrganization();
      return TwygoLearningPathUser.listenerBtnShow();
    },
    loadLeaningPathsByUserAndOrganization: function() {
      var _html;
      _html = $('#my-learning_paths').html();
      return $.ajax({
        url: "/my-courses-by-user.json",
        dataType: 'json',
        type: 'GET',
        data: {
          organization_id: TwygoApplication.currentOrganizationId
        },
        async: true,
        beforeSend: function() {
          return $('#my-progress').addClass('ajax-loading');
        },
        success: function(response, textStatus, jqXHR) {
          return TwygoLearningPathUser.buildMyLearningPaths(_html, response.paths);
        },
        complete: function(response) {
          $('#my-progress').removeClass('ajax-loading');
          TwygoMyContents.animation_progress();
          return TwygoLearningPathUser.sliderInit();
        }
      });
    },
    sliderInit: function() {},
    buildMyLearningPaths: function($tmpl, list) {
      var _out;
      _out = '';
      if (list.length === 0) {
        _out = "<div class='not-found'>\n  " + (I18n.t('no_tracks_for_user')) + "\n</div>";
      } else {
        $.each(list, function(i, item) {
          item.courses.map(function(course) {
            course.course_release_date = TwygoApplication.course_release_date(TwygoApplication.date_format(course.date_time_start), TwygoApplication.date_format(course.date_time_end));
            course.course_closing_date = TwygoApplication.course_closing_date(TwygoApplication.date_format(course.date_time_start), TwygoApplication.date_format(course.date_time_end));
            return course.presente = !(course.future || course.past);
          });
          return _out += Mustache.render($tmpl, item);
        });
      }
      return $('#my-progress').html(_out);
    },
    listenerBtnShow: function() {
      return $('#my-progress').on('click', '.btn-show', function() {
        var $parent, _length, _max_position, _position;
        $(this).toggleClass('open');
        $parent = $(this).closest('.learning_path-box');
        $parent.find('.learning-content__inner').addClass('ajax-loading');
        $parent.find('.learning-content').slideToggle();
        _position = parseInt($parent.find('.learning-content').attr('data-position'));
        _length = parseInt($parent.find('.slider_init-container .event-box').length);
        _max_position = _length - 4;
        if (_max_position <= 0 || _position < 4) {
          _position = 0;
        } else if (_position > _max_position) {
          _position = _max_position;
        } else {
          _position = _position - 1;
        }
        if ($(this).hasClass('open')) {
          $(this).find('.text').text(I18n.t('hide_courses'));
        } else {
          $(this).find('.text').text(I18n.t('show_courses'));
        }
        return setTimeout(function() {
          return $parent.find('.learning-content__inner').removeClass('ajax-loading');
        }, 500);
      });
    }
  };

}).call(this);
(function() {
  this.TwygoLogin = {
    msg_callback: {
      resent_mail: I18n.t("instructions_email_sent"),
      remember_pass: I18n.t("instructions_recover_password_email_sent")
    },
    initialize: function() {
      $("#forgot-password").click(function() {
        $(".forgot-password").modal({
          opacity: 50,
          position: [50],
          overlayClose: true
        });
        TwygoLogin.bindModalEvents("remember_pass");
        $("#user_email_password").val($("#user_email").val()).focus();
        $("#user_email_resent, #user_email_password").removeClass("red_border");
        return $(".error-message").html("").hide();
      });
      $("#re-sent").click(function() {
        $(".resent-mail-confirmation").modal({
          opacity: 50,
          position: [50],
          overlayClose: true
        });
        $("#user_email_resent").val($("#user_email").val()).focus();
        $("#user_email_resent, #user_email_password").removeClass("red_border");
        $(".error-message").html("").hide();
        TwygoLogin.bindModalEvents("resent_mail");
        return $("#user_email_resent").focus().val("");
      });
      $("#user_email").focus();
      $("#master-login #text div button").click(function() {
        return $("#master-login #text").fadeOut("fast", function() {
          return $("#master-login #cadastro").fadeIn("fast", function() {
            TwygoLogin.clearErrors();
            $("#first-name").focus();
            $(".new_user").bind("ajax:complete", function(data, status, xhr) {
              var response;
              $("#button-confirm-signup").removeAttr("disabled");
              if (status.status === 201) {
                if (status.getResponseHeader('Location').indexOf('#') > -1) {
                  $("#master-login #cadastro").fadeOut("fast", function() {
                    return $("#master-login #message-success").fadeIn("fast");
                  });
                } else {
                  location.href = status.getResponseHeader('Location');
                }
              }
              if (status.status === 422) {
                response = status.responseJSON.errors;
                if (typeof response.email !== "undefined") {
                  $("#cadastro_email, #email_confirmation").addClass("red_border");
                  $(".email-error").html((I18n.t('activerecord.attributes.user.email')) + " " + response.email).show();
                  $(".email_confirmation-error").html("&nbsp;").show();
                }
                if (typeof response.email_confirmation !== "undefined") {
                  $("#email_confirmation").addClass("red_border");
                  $(".email_confirmation-error").html((I18n.t('activerecord.attributes.user.email_confirmation')) + " " + response.email_confirmation).show();
                }
                if (typeof response.password !== "undefined") {
                  $("#user-pass, #user-pass-confirmation").addClass("red_border");
                  $(".pass-error").html((I18n.t('activerecord.attributes.user.password')) + " " + response.password).show();
                }
                if (typeof response.first_name !== "undefined") {
                  $("#first-name").addClass("red_border");
                  $(".name-error").html((I18n.t('activerecord.attributes.user.first_name')) + " " + response.first_name).show();
                  $(".namec-error").html("&nbsp;").show();
                }
                if (typeof response.phone !== "undefined") {
                  $("#phone").addClass("red_border");
                  $(".fields-error").html((I18n.t('activerecord.attributes.user.phone')) + " " + response.phone).show();
                }
                if (typeof response.cpf !== "undefined") {
                  $("#cpf").addClass("red_border");
                  $(".fields-error").html((I18n.t('activerecord.attributes.user.cpf')) + " " + response.cpf).show();
                }
                if (typeof response.rg !== "undefined") {
                  $("#rg").addClass("red_border");
                  $(".fields-error").html((I18n.t('activerecord.attributes.user.rg')) + " " + response.rg).show();
                }
                if (typeof response.address !== "undefined") {
                  $("#address").addClass("red_border");
                  $(".fields-error").html((I18n.t('activerecord.attributes.user.address')) + " " + response.address).show();
                }
                if (typeof response.address2 !== "undefined") {
                  $("#address2").addClass("red_border");
                  $(".fields-error").html((I18n.t('activerecord.attributes.user.address2')) + " " + response.address2).show();
                }
                if (typeof response.city !== "undefined") {
                  $("#city").addClass("red_border");
                  $(".fields-error").html((I18n.t('activerecord.attributes.user.city')) + " " + response.city).show();
                }
                if (typeof response.state !== "undefined") {
                  $("#state").addClass("red_border");
                  $(".fields-error").html((I18n.t('activerecord.attributes.user.state')) + " " + response.state).show();
                }
                if (typeof response.country !== "undefined") {
                  $("#country").addClass("red_border");
                  $(".fields-error").html((I18n.t('activerecord.attributes.user.country')) + " " + response.country).show();
                }
                if (typeof response.manager !== "undefined") {
                  $("#manager").addClass("red_border");
                  $(".fields-error").html((I18n.t('activerecord.attributes.user.manager')) + " " + response.manager).show();
                }
                if (typeof response.team !== "undefined") {
                  $("#team").addClass("red_border");
                  $(".fields-error").html((I18n.t('activerecord.attributes.user.team')) + " " + response.team).show();
                }
                if (typeof response.enterprise !== "undefined") {
                  $("#enterprise").addClass("red_border");
                  $(".fields-error").html((I18n.t('activerecord.attributes.user.enterprise')) + " " + response.enterprise).show();
                }
                if (typeof response.business_line !== "undefined") {
                  $("#business_line").addClass("red_border");
                  $(".fields-error").html((I18n.t('activerecord.attributes.user.business_line')) + " " + response.business_line).show();
                }
                if (typeof response.number_of_employees !== "undefined") {
                  $("#number_of_employees").addClass("red_border");
                  $(".fields-error").html((I18n.t('activerecord.attributes.user.number_of_employees')) + " " + response.number_of_employees).show();
                }
                if (typeof response.role !== "undefined") {
                  $("#role").addClass("red_border");
                  $(".fields-error").html((I18n.t('activerecord.attributes.user.role')) + " " + response.role).show();
                }
                return $("#cadastro .red_border:first").focus();
              }
            });
            return $(".new_user").bind("ajax:beforeSend", function() {
              $("#button-confirm-signup").attr("disabled", "disabled");
              return TwygoLogin.clearErrors();
            });
          });
        });
      });
      $("#cancel-signup-link").click(function() {
        return $("#master-login #cadastro").fadeOut("fast", function() {
          return $("#master-login #text").fadeIn("fast", function() {
            return $("#new_user input").each(function() {
              $(this).val("");
              return TwygoLogin.clearErrors();
            });
          });
        });
      });
      if (location.hash === '#signup') {
        return $("#master-login #text div button").click();
      }
    },
    clearErrors: function() {
      $("#cadastro_email, #email_confirmation, #user-pass, #user-pass-confirmation, #first-name, #last-name, #email_confirmation, #phone, #cpf, #rg, #address, #address2, #city, #state, #country, #manager, #team, #enterprise, #business_line, #number_of_employees, #role").removeClass("red_border");
      return $(".email-error, .pass-error, .name-error, .namec-error, .email_confirmation-error, .fields-error").hide();
    },
    bindModalEvents: function(element) {
      return $("#" + element).bind("ajax:complete", function(data, status, xhr) {
        var response;
        if (status.status === 200 || status.status === 201) {
          $.modal.close();
          return TwygoFlashMessage.setMessage("success", TwygoLogin.msg_callback[element]);
        } else {
          response = eval("(" + status.responseText + ")");
          $(".error-message").html("Email " + response.errors.email).show();
          $("#user_email_resent, #user_email_password").addClass("red_border");
          return false;
        }
      }).bind("ajax:loading", function() {
        return $("#user_email_resent");
      });
    },
    oauth_info: function(user_info) {
      var fake_pass;
      if (Object.keys(user_info).length > 1) {
        $('#first-name').val(user_info.first_name);
        $('#last-name').val(user_info.last_name);
        $('#cadastro_email').val(user_info.email);
        if (user_info.photo) {
          $('form#new_user').append("<input value='" + user_info.photo + "' type='hidden' name='user[image]' id='user_image'>");
        }
        $('form#new_user').append("<input value='" + user_info.social_login + "' type='hidden' name='user[social_login]' id='user_social_login'>");
        $('form#new_user').append("<input value='" + user_info.uid + "' type='hidden' name='user[uid]' id='user_uid'>");
        $('form#new_user').append("<input value='" + user_info.provider + "' type='hidden' name='user[provider]' id='user_provider'>");
        fake_pass = Math.random().toString(36).substring(2);
        $('#user-pass').val(fake_pass);
        $('#user-pass-confirmation').val(fake_pass);
        $('#user-pass').css('display', function() {
          return 'none';
        });
        return $('#user-pass-confirmation').css('display', function() {
          return 'none';
        });
      }
    },
    fillAddressByCEP: function() {
      var cep, validacep;
      cep = $("#zip_code").val().replace(/\D/g, '');
      if (cep !== '') {
        validacep = /^[0-9]{8}$/;
        if (validacep.test(cep)) {
          $(".cep-loader").fadeIn("fast");
          return $.getJSON('//viacep.com.br/ws/' + cep + '/json/?callback=?', function(dados) {
            if (!('erro' in dados)) {
              $('#address').val(dados.logradouro);
              $('#city').val(dados.localidade);
              $('#state').val(dados.uf);
              $('#district').val(dados.bairro);
              $(".cep-loader").fadeOut("fast");
              return $(".zip-code-error").fadeOut("fast");
            } else {
              $(".zip-code-error").text(I18n.t('zip_code_not_found'));
              $(".zip-code-error").fadeIn("fast");
              $(".cep-loader").fadeOut("fast");
              $('#address').val("");
              $('#city').val("");
              $('#state').val("");
              $('#district').val("");
              return setTimeout(function() {
                return $(".zip-code-error").fadeOut("fast");
              }, 5000);
            }
          });
        } else {
          $(".zip-code-error").text(I18n.t('invalid_zip_code'));
          $(".zip-code-error").fadeIn("fast");
          $('#district').val("");
          return setTimeout(function() {
            return $(".zip-code-error").fadeOut("fast");
          }, 5000);
        }
      } else {
        return $(".zip-code-error").fadeOut("fast");
      }
    },
    bindFieldValidationInput: function() {
      $('input[id$="district"]').on('input', function() {
        return TwygoProfessionalManagement.checkValidationFieldError($(this), 50);
      });
      return $('input[id$="address_number"]').on('input', function() {
        return TwygoProfessionalManagement.checkValidationFieldError($(this), 10);
      });
    },
    checkValidationFieldError: function($element, max_length) {
      $element.val($element.val().substr(0, max_length));
      if ($element.val().length >= max_length && $element.parent().find('.validate-field-error').length === 0) {
        $element.parent().append("<span class='validate-field-error'>" + (I18n.t("max_characteres")) + "</span>");
        return setTimeout(function() {
          return $element.parent().children().remove('.validate-field-error');
        }, 5000);
      }
    },
    changePassVisibility: function(el) {
      var passField;
      passField = el.siblings('input')[0];
      if (passField.type === 'password') {
        passField.type = 'text';
        return el.attr('class', 'fa fa-eye');
      } else {
        passField.type = 'password';
        return el.attr('class', 'fa fa-eye-slash');
      }
    },
    checkPasswordValidation: function() {
      var password, passwordConfirmation;
      password = $("#user_password")[0].value;
      passwordConfirmation = $("#user_password_confirmation")[0].value;
      return document.getElementById("password-field-validation").dispatchEvent(new CustomEvent("checkPasswordValidation", {
        detail: {
          password: password,
          passwordConfirmation: passwordConfirmation
        }
      }));
    }
  };

}).call(this);
(function() {
  this.TwygoMaxLengthInputArea = {
    showMessage: function(input_value) {
      var inputValueId, max_length;
      max_length = 0;
      inputValueId = input_value.get(0).id;
      if (input_value.attr("maxlength")) {
        max_length = parseInt(input_value.attr("maxlength"));
        if (input_value.val().length === max_length) {
          if (input_value.siblings($('validate_characters_' + inputValueId))) {
            $("span").remove('#validate_characters_' + inputValueId);
          }
          $("<span id='validate_characters_" + inputValueId + "'> " + I18n.t('invalid_title') + "</span>").css('color', 'red').insertAfter(input_value);
          return setTimeout(function() {
            return $("span").remove('#validate_characters_' + inputValueId);
          }, 5000);
        } else {
          return $("span").remove('#validate_characters_' + inputValueId);
        }
      }
    }
  };

}).call(this);
(function() {
  this.TwygoMaxLengthTextArea = {
    initialize: function(text_area) {
      var max_length;
      max_length = 0;
      if (text_area.hasAttribute("maxlength")) {
        max_length = text_area.getAttribute("maxlength");
      }
      $("<span id='cke_maxlength_" + text_area.id + "'>" + I18n.t("characters") + ": 0 / " + max_length + "</span>").insertAfter($("#" + text_area.id));
      return $("#" + text_area.id).on('keyup', (function(_this) {
        return function() {
          var charCount, span;
          span = $("#cke_maxlength_" + text_area.id);
          charCount = parseInt($("#" + text_area.id).val().length);
          if (charCount > parseInt(max_length) || charCount === parseInt(max_length)) {
            span.css("color", "red");
          } else {
            span.css("color", "black");
          }
          if (parseInt(max_length) > 0) {
            return span.html(I18n.t("characters") + ": " + charCount + " / " + max_length);
          }
        };
      })(this));
    }
  };

}).call(this);
(function() {
  this.TwygoMenu = {
    organization_id: null,
    initialize: function(organization_id) {
      this.organization_id = organization_id;
      this.updateElement();
      return this.bindMenu();
    },
    bindMenu: function() {
      return $("#menu ul li a.menu-target").on('click', function() {
        $(this).addClass('actv');
        $('#new-content').addClass('ajax-loading');
        $("#menu ul li, #menu ul li a").removeClass("actv");
        return TwygoMenu.loadPage($(this).attr("link"));
      });
    },
    loadPage: function(request_url) {
      var anchor, link;
      if (request_url !== "" && request_url !== void 0) {
        TwygoApplication.loader();
        anchor = request_url.indexOf("?") >= 0 ? "&" : "?";
        link = request_url + anchor + "layout=blank";
        if (!$("#center").length) {
          $("#details").wrap("<div id='center-column'></div>");
          $("#center-column").wrap("<div id='center'></div>");
        }
        return $("#details").load(link, function() {
          $('#new-content').removeClass('ajax-loading');
          if (history.pushState) {
            history.pushState("", "", request_url);
          } else {
            location.hash = "!" + request_url;
          }
          TwygoApplication.loader("hide");
          return TwygoMenu.updateElement();
        });
      }
    },
    setHeader: function(text, link, skipBlank) {
      if (link == null) {
        link = "";
      }
      if (skipBlank == null) {
        skipBlank = true;
      }
      $('#breadcrumb').text('');
      if ($.trim(text) === "" && skipBlank) {
        return;
      }
      if ($.trim(link) === "") {
        return $("#title_bar .page-title__inner:last").html(text);
      } else {
        if ($("#title_bar .page-title__inner:last a").length > 0) {
          return $("#title_bar .page-title__inner:last a").attr("href", link).html(text);
        } else {
          return $("#title_bar .page-title__inner:last").html($("<a>").attr("href", link).html(text));
        }
      }
    },
    setActiveMenu: function(item) {
      var menuItens;
      if ($.trim(item) === "") {
        return;
      }
      menuItens = $("#menu ul li");
      if (menuItens.find(item).length > 0) {
        menuItens.find(".actv").removeClass("actv");
        return menuItens.find(item).addClass("actv");
      }
    },
    updateElement: function() {
      var brother, element, hash_path, parents, path, text;
      path = location.pathname + location.search;
      if ((hash_path = location.hash.split("#!")[1]) !== void 0) {
        path = hash_path;
      }
      element = $("#menu a[link='" + path + "']").html() !== void 0 ? $("#menu a[link='" + path + "']") : $("#menu a[href='" + path + "']");
      if (element.length > 0) {
        text = "<div>" + (element.html()) + "</div>";
        text = $(text).find('span, i').remove().end().html();
        if ($(".page-title a").length > 0) {
          $(".page-title a").text(text);
        } else {
          TwygoMenu.setHeader(text);
        }
        $("#menu ul li, #menu ul li a").removeClass("actv");
        element.addClass("actv");
      } else if (($("#menu a[href='" + path + "']").length)) {
        element = $("#menu a[href='" + path + "']");
        element.addClass("actv");
      } else if (path.indexOf('users') > -1) {
        element = $("#menu a[link$='/users']");
        element.addClass("actv");
      } else if (path.indexOf('portfolio') > -1) {
        element = $("#menu a[link='/portfolio']");
        element.addClass("actv");
      } else if (path.indexOf('team') > -1) {
        element = $("#menu a[link$='/team']");
        element.addClass("actv");
        text = "" + (element.text());
      } else if (path.indexOf('learning_paths') > -1) {
        element = $("#menu a[href$='/learning_paths']");
        element.addClass("actv");
      } else if (path.indexOf('payments') > -1) {
        element = $("#menu a[href$='/payments']");
        element.addClass("actv");
      } else if (location.search.split("/").pop() === "my-contents") {
        element = $("#menu a[href='/my-contents']");
        element.addClass("actv");
      } else if (path.indexOf('play') > -1) {
        element = $("#menu a[href$='/play']");
        element.addClass("actv");
      } else {
        path = location.pathname;
        if (path === "/") {
          path = "/suggested";
        }
        element = $("#menu a[link='" + path + "']");
        text = "<div>" + (element.html()) + "</div>";
        text = $(text).find('span, i').remove().end().html();
        if (path === "/my_network") {
          text = I18n.t('menu.network');
        }
        if (path === "/users/edit") {
          text = I18n.t('menu.settings');
        }
        $("#menu ul li, #menu ul li a").removeClass("actv");
      }
      if ($(".page-title a").length > 0) {
        $(".page-title a").html(text);
      } else if (text !== 'undefined') {
        TwygoMenu.setHeader(text);
      }
      parents = element.closest("ul.submenu");
      brother = element.next(".submenu");
      if (parents.length > 0) {
        parents.show();
        return parents.parents("li").addClass("menu-opened");
      } else if (brother.length > 0) {
        return brother.show();
      }
    }
  };

}).call(this);
(function() {
  this.TwygoMobileMenu = {
    initialize: function(organizations) {
      this.user_organizations = organizations;
      TwygoMobileMenu.dontOpenMenuIfInCustomDomain();
      this.bindMobileMenu();
      return this.setSelectedMenu();
    },
    bindMobileMenu: function() {
      $('#mobile-search, #mobile-close-search-bar').off().on('click', function() {
        return TwygoMobileMenu.showSearchBottomBar();
      });
      $('#mobile-top-user-area').off().on('click', function() {
        return TwygoMobileMenu.showMenuBar();
      });
      $('.mobile-user-profile').off().on('click', function(e) {
        return TwygoMobileMenu.toggleStudentsOptionsMenu();
      });
      $('.nav-bg').off().on('click', function() {
        return TwygoMobileMenu.hideMenuBar();
      });
      $('#mobile-close-menu').off().on('click', function() {
        return TwygoMobileMenu.hideMenuBar();
      });
      $("#mobile-logo:not(.offline)").off().on('click', function() {
        return TwygoMobileMenu.toggleOrganizationsMenu();
      });
      return $('#thin-arrow-right, .open-mobile-menu').off().on('click', function() {
        return TwygoMobileMenu.toggleEventsMenu();
      });
    },
    dontOpenMenuIfInCustomDomain: function() {
      if (this.user_organizations.length <= 0) {
        $('#mobile-logo .icon-solid-arrow').hide();
      }
      if (this.user_organizations.length <= 0) {
        return $('#mobile-logo').addClass('offline');
      }
    },
    toggleStudentsOptionsMenu: function() {
      if ($('.mobile-user-profile').hasClass("mobile-user-profile-opened")) {
        return TwygoMobileMenu.hideStudentsOptionsMenu();
      } else {
        return TwygoMobileMenu.showStudentsOptionsMenu();
      }
    },
    setSelectedMenu: function() {
      var brother, element, hash_path, parents, path, text;
      path = location.pathname + location.search;
      if ((hash_path = location.hash.split("#!")[1]) !== void 0) {
        path = hash_path;
      }
      element = $(".mobile-nav a[href='" + path + "']");
      if (element.length > 0) {
        text = "<div>" + (element.html()) + "</div>";
        text = $(text).find('span, i').remove().end().html();
        $(".mobile-nav ul li, .mobile-nav ul li a").parent().removeClass("actv");
        element.parent().addClass("actv");
      }
      parents = element.parents(".submenu");
      brother = element.next(".submenu");
      if (parents.length > 0) {
        parents.show();
        return parents.parents("li").addClass("menu-opened");
      } else if (brother.length > 0) {
        return brother.show();
      }
    },
    hideStudentsOptionsMenu: function() {
      this.closeOrganizationsMenu();
      $('.mobile-user-options').hide();
      $('.mobile-user-profile').css('position', 'absolute');
      return $('.mobile-user-profile').removeClass('mobile-user-profile-opened');
    },
    showStudentsOptionsMenu: function() {
      this.closeOrganizationsMenu();
      $('.mobile-user-options').show();
      $('.mobile-user-profile').css('position', 'relative');
      $('.mobile-user-profile').addClass('mobile-user-profile-opened');
      return $('.mobile-nav').animate({
        scrollTop: $('.mobile-nav').height()
      }, 1000);
    },
    toggleEventsMenu: function() {
      this.closeOrganizationsMenu();
      if ($('#thin-arrow-right, .open-mobile-menu').hasClass("my-events-opened")) {
        $('#menu-my-events').fadeOut("fast");
        return $('#thin-arrow-right, .open-mobile-menu').removeClass('my-events-opened');
      } else {
        $('#menu-my-events').fadeIn("fast");
        return $('#thin-arrow-right, .open-mobile-menu').addClass('my-events-opened');
      }
    },
    showMenuBar: function() {
      $('.mobile-nav').addClass("opened-mobile-nav");
      $('.nav-bg').fadeIn("fast");
      return $('body').addClass('overflow-hidden');
    },
    hideMenuBar: function() {
      this.closeOrganizationsMenu();
      this.hideStudentsOptionsMenu();
      $('.mobile-nav').removeClass("opened-mobile-nav");
      $('.nav-bg').fadeOut("fast");
      return $('body').removeClass('overflow-hidden');
    },
    closeOrganizationsMenu: function() {
      if ($('.mobile-organizations-list').hasClass("mobile-organizations-list-opened")) {
        $('.mobile-organizations-list').hide();
        $('.mobile-organizations-list').removeClass('mobile-organizations-list-opened');
        return $('#mobile-logo').removeClass('mobile-logo-opened');
      }
    },
    toggleOrganizationsMenu: function() {
      if ($('.mobile-organizations-list').hasClass("mobile-organizations-list-opened")) {
        $('.mobile-organizations-list').fadeOut("fast");
        $('.mobile-organizations-list').removeClass('mobile-organizations-list-opened');
        return $('#mobile-logo').removeClass('mobile-logo-opened');
      } else {
        $('.mobile-organizations-list').fadeIn("fast");
        $('.mobile-organizations-list').addClass('mobile-organizations-list-opened');
        return $('#mobile-logo').addClass('mobile-logo-opened');
      }
    },
    showSearchBottomBar: function() {
      if ($('#mobile-search-bottom-bar').hasClass('mobile-search-bottom-bar-opened')) {
        $('#mobile-search-bottom-bar').removeClass("mobile-search-bottom-bar-opened");
        return $('#mobile-search').fadeIn("fast");
      } else {
        $('#mobile-search').fadeOut("fast");
        $('#mobile-search-bottom-bar').addClass("mobile-search-bottom-bar-opened");
        $('#mobile-top-search-input').focus();
        return $('#groups_search_field').focus();
      }
    },
    confirmGoToAdministration: function(organization_id) {
      var ModalConfirm;
      ModalConfirm = TwygoModalConfirmItem.initialize({
        id: 'confirm-modal-confirm_go_to_administration',
        message: I18n.t('views.administration_confirm_message')
      });
      return TwygoModalConfirmItem.open(organization_id);
    }
  };

}).call(this);
(function() {
  this.TwygoModalConfirmItem = {
    id: null,
    callbacks: null,
    configuration: null,
    message: null,
    CURRENT_OBJECT: {
      id: null,
      name: null
    },
    HTML_MODAL: null,
    HTML_PARAGRAPH_MESSAGE: null,
    HTMLButtonCancel: null,
    HTMLButtonClose: null,
    HTMLButtonConfirmed: null,

    /**
     * Cria uma modal para remover item
     * @typeof {Object} params deve ser passado:
     * @property {string} params.id - identificado que irá na div do model
     * @typeof {Object} params.callbacks objetos com funções que podem ser chamadas
     * @typeof {Object} params.configuration objetos com as demais configurações
     * @property {string} url da request de deleção
     * @property {boolean} reload para regaregar pagina após sucesso na requisição
     */
    initialize: function(params) {
      TwygoModalConfirmItem.setParams(params);
      TwygoModalConfirmItem.initElementHTML();
      TwygoModalConfirmItem.setConfigurationInit();
      TwygoModalConfirmItem.setFunctionsCallBacks();
      TwygoModalConfirmItem.initFunctionOfCallBack();
      return {
        open: TwygoModalConfirmItem.open
      };
    },
    setParams: function(params) {
      if (params.id === void 0) {
        throw "No id parameter was passed";
      }
      if (params.callbacks === void 0) {
        params.callbacks = {};
      }
      if (params.configuration === void 0) {
        params.configuration = {};
      }
      TwygoModalConfirmItem.id = params.id;
      TwygoModalConfirmItem.message = params.message;
      TwygoModalConfirmItem.callbacks = params.callbacks;
      return TwygoModalConfirmItem.configuration = params.configuration;
    },
    initElementHTML: function() {
      var idButtonClose, idCancel, idConfirmed;
      idCancel = "#" + TwygoModalConfirmItem.id + "-cancel";
      idConfirmed = "#" + TwygoModalConfirmItem.id + "-confirmed";
      idButtonClose = "#" + TwygoModalConfirmItem.id + "-close";
      TwygoModalConfirmItem.HTMLButtonCancel = document.querySelector(idCancel);
      TwygoModalConfirmItem.HTMLButtonClose = document.querySelector(idButtonClose);
      TwygoModalConfirmItem.HTMLButtonConfirmed = document.querySelector(idConfirmed);
      TwygoModalConfirmItem.HTML_MODAL = document.querySelector("#" + TwygoModalConfirmItem.id);
      return TwygoModalConfirmItem.HTML_PARAGRAPH_MESSAGE = document.querySelector("#" + TwygoModalConfirmItem.id + "-msg");
    },
    setConfigurationInit: function() {
      if (TwygoModalConfirmItem.configuration.reload === void 0) {
        TwygoModalConfirmItem.configuration.reload = true;
      }
      if (TwygoModalConfirmItem.configuration.type_ok) {
        TwygoModalConfirmItem.HTMLButtonCancel.classList.add('d-none');
        return TwygoModalConfirmItem.HTMLButtonConfirmed.innerText = "OK";
      }
    },
    setFunctionsCallBacks: function() {
      if (TwygoModalConfirmItem.callbacks.open === void 0) {
        TwygoModalConfirmItem.callbacks.open = TwygoModalConfirmItem.open;
      }
      if (TwygoModalConfirmItem.callbacks.close === void 0) {
        TwygoModalConfirmItem.callbacks.close = TwygoModalConfirmItem.close;
      }
      if (TwygoModalConfirmItem.callbacks.defaultConfirmed === void 0) {
        return TwygoModalConfirmItem.callbacks.defaultConfirmed = TwygoModalConfirmItem.defaultConfirmed;
      }
    },
    open: function(object) {
      object = TwygoModalConfirmItem.validObject(object);
      TwygoModalConfirmItem.CURRENT_OBJECT = object;
      TwygoModalConfirmItem.HTML_MODAL.classList.remove('hidden');
      TwygoModalConfirmItem.HTML_PARAGRAPH_MESSAGE.classList.add('block');
      return TwygoModalConfirmItem.setDynamicMessage();
    },
    validObject: function(object) {
      if (typeof object === 'undefined') {
        object = '{}';
      }
      if (typeof object === 'string') {
        object = JSON.parse(object);
      }
      return object;
    },
    defaultConfirmed: function() {
      $.ajax({
        url: TwygoModalConfirmItem.getURLAjax(),
        type: TwygoModalConfirmItem.getTypeAjax(),
        async: TwygoModalConfirmItem.getAsyncAjax(),
        data: TwygoModalConfirmItem.getDataAjax(),
        beforeSend: function() {
          if (typeof TwygoModalConfirmItem.callbacks.beforeSend === 'function') {
            return TwygoModalConfirmItem.callbacks.beforeSend();
          }
        },
        success: function(response) {
          if (typeof TwygoModalConfirmItem.callbacks.success === 'function') {
            return TwygoModalConfirmItem.callbacks.success(response);
          }
        },
        complete: function() {
          if (TwygoModalConfirmItem.configuration.reload) {
            window.location.reload(true);
          }
          if (typeof TwygoModalConfirmItem.callbacks.complete === 'function') {
            return TwygoModalConfirmItem.callbacks.complete();
          }
        }
      });
      return TwygoModalConfirmItem.close();
    },
    getURLAjax: function() {
      return TwygoModalConfirmItem.configuration.url;
    },
    getTypeAjax: function() {
      return TwygoModalConfirmItem.configuration.type;
    },
    getAsyncAjax: function() {
      if ((typeof TwygoModalConfirmItem.configuration.async === 'undefined') || (typeof TwygoModalConfirmItem.configuration.async === null)) {
        return TwygoModalConfirmItem.configuration.async = false;
      } else {
        return TwygoModalConfirmItem.configuration.async;
      }
    },
    getDataAjax: function() {
      return TwygoModalConfirmItem.configuration.data;
    },
    close: function() {
      TwygoModalConfirmItem.HTML_MODAL.classList.remove('block');
      TwygoModalConfirmItem.HTML_MODAL.classList.add('hidden');
      return TwygoModalConfirmItem.reset();
    },
    setDynamicMessage: function() {
      return TwygoModalConfirmItem.HTML_PARAGRAPH_MESSAGE.innerText = TwygoModalConfirmItem.message;
    },
    reset: function() {
      return TwygoModalConfirmItem.CURRENT_OBJECT = {
        id: null,
        name: null
      };
    },
    initFunctionOfCallBack: function() {
      if (TwygoModalConfirmItem.HTMLButtonCancel) {
        TwygoModalConfirmItem.HTMLButtonCancel.addEventListener('click', TwygoModalConfirmItem.callbacks.close);
      }
      if (TwygoModalConfirmItem.HTMLButtonClose) {
        TwygoModalConfirmItem.HTMLButtonClose.addEventListener('click', TwygoModalConfirmItem.callbacks.close);
      }
      if (TwygoModalConfirmItem.HTMLButtonConfirmed) {
        return TwygoModalConfirmItem.HTMLButtonConfirmed.addEventListener('click', TwygoModalConfirmItem.callbacks.defaultConfirmed);
      }
    }
  };

}).call(this);
(function() {
  this.TwygoModalRemoveItem = {
    id: null,
    callbacks: null,
    configuration: null,
    CURRENT_OBJECT: {
      id: null,
      name: null
    },
    HTML_MODAL: null,
    HTML_PARAGRAPH_MESSAGE: null,
    HTML_MESSAGE_TITLE: null,
    HTML_SUB_TITLE: null,

    /**
     * Cria uma modal para remover item
     * @typeof {Object} params deve ser passado:
     * @property {string} params.id - identificado que irá na div do model
     * @typeof {Object} params.callbacks objetos com funções que podem ser chamadas
     * @typeof {Object} params.configuration objetos com as demais configurações
     * @property {string} url da request de deleção
     * @property {boolean} reload para regaregar pagina após sucesso na requisição
     */
    initialize: function(params) {
      TwygoModalRemoveItem.setParams(params);
      TwygoModalRemoveItem.initElementHTML();
      TwygoModalRemoveItem.setConfigurationInit();
      TwygoModalRemoveItem.setFunctionsCallBacks();
      TwygoModalRemoveItem.initFunctionOfCallBack();
      return {
        open: TwygoModalRemoveItem.open
      };
    },
    setParams: function(params) {
      if (params.id === void 0) {
        throw "No id parameter was passed";
      }
      if (params.callbacks === void 0) {
        params.callbacks = {};
      }
      if (params.configuration === void 0) {
        params.configuration = {};
      }
      TwygoModalRemoveItem.id = params.id;
      TwygoModalRemoveItem.message_title = params.message_title;
      TwygoModalRemoveItem.message = params.message;
      TwygoModalRemoveItem.callbacks = params.callbacks;
      TwygoModalRemoveItem.configuration = params.configuration;
      return TwygoModalRemoveItem.sub_title = params.sub_title;
    },
    initElementHTML: function() {
      TwygoModalRemoveItem.HTML_MODAL = document.querySelector("#" + TwygoModalRemoveItem.id);
      TwygoModalRemoveItem.HTML_PARAGRAPH_MESSAGE = $("#" + TwygoModalRemoveItem.id + "-msg");
      TwygoModalRemoveItem.HTML_MESSAGE_TITLE = document.querySelector("#" + TwygoModalRemoveItem.id + "-msg_title");
      return TwygoModalRemoveItem.HTML_SUB_TITLE = document.querySelector("#" + TwygoModalRemoveItem.id + "_sub_title");
    },
    setConfigurationInit: function() {
      if (TwygoModalRemoveItem.configuration.reload === void 0) {
        return TwygoModalRemoveItem.configuration.reload = true;
      }
    },
    setFunctionsCallBacks: function() {
      if (TwygoModalRemoveItem.callbacks.open === void 0) {
        TwygoModalRemoveItem.callbacks.open = TwygoModalRemoveItem.open;
      }
      if (TwygoModalRemoveItem.callbacks.close === void 0) {
        TwygoModalRemoveItem.callbacks.close = TwygoModalRemoveItem.close;
      }
      return TwygoModalRemoveItem.callbacks.defaultConfirmed = TwygoModalRemoveItem.defaultConfirmed;
    },
    open: function(object) {
      object = TwygoModalRemoveItem.validObject(object);
      TwygoModalRemoveItem.CURRENT_OBJECT = object;
      TwygoModalRemoveItem.HTML_MODAL.classList.remove('hidden');
      TwygoModalRemoveItem.HTML_MESSAGE_TITLE.classList.add('block');
      return TwygoModalRemoveItem.setDynamicMessage();
    },
    validObject: function(object) {
      if (typeof object === 'undefined') {
        object = '{}';
      }
      if (typeof object === 'string') {
        object = JSON.parse(object);
      }
      return object;
    },
    defaultConfirmed: function() {
      $.ajax({
        url: TwygoModalRemoveItem.getURLAjax(),
        data: TwygoModalRemoveItem.configuration.data,
        type: TwygoModalRemoveItem.configuration.type || "DELETE",
        beforeSend: function() {
          if (typeof TwygoModalRemoveItem.callbacks.beforeSend === 'function') {
            return TwygoModalRemoveItem.callbacks.beforeSend();
          }
        },
        success: function(response) {
          if (typeof TwygoModalRemoveItem.callbacks.success === 'function') {
            return TwygoModalRemoveItem.callbacks.success(response);
          }
        },
        error: function(response) {
          if (typeof TwygoModalRemoveItem.callbacks.error === 'function') {
            TwygoModalRemoveItem.callbacks.error(response);
            return;
          }
          if (response.responseJSON && response.responseJSON.type === 'error' && response.responseJSON.msg) {
            TwygoFlashMessage.setMessage("error", response.responseJSON.msg);
          }
          if (response.status !== 200) {
            return TwygoFlashMessage.setMessage("error", I18n.t("could_not_remove"));
          }
        },
        complete: function() {
          if (TwygoModalRemoveItem.configuration.reload) {
            window.location.reload(false);
          }
          if (typeof TwygoModalRemoveItem.callbacks.complete === 'function') {
            return TwygoModalRemoveItem.callbacks.complete(response);
          }
        }
      });
      return TwygoModalRemoveItem.close();
    },
    getURLAjax: function() {
      if (TwygoModalRemoveItem.CURRENT_OBJECT.id) {
        return TwygoModalRemoveItem.configuration.url + TwygoModalRemoveItem.CURRENT_OBJECT.id;
      } else {
        return TwygoModalRemoveItem.configuration.url;
      }
    },
    getAsyncAjax: function() {
      if ((typeof TwygoModalRemoveItem.configuration.async === 'undefined') || (typeof TwygoModalRemoveItem.configuration.async === null)) {
        return TwygoModalRemoveItem.configuration.async = false;
      } else {
        return TwygoModalRemoveItem.configuration.async;
      }
    },
    close: function() {
      TwygoModalRemoveItem.HTML_MODAL.classList.remove('block');
      TwygoModalRemoveItem.HTML_MODAL.classList.add('hidden');
      return TwygoModalRemoveItem.reset();
    },
    setDynamicMessage: function() {
      if (TwygoModalRemoveItem.message_title) {
        TwygoModalRemoveItem.HTML_MESSAGE_TITLE.innerText = TwygoModalRemoveItem.message_title;
      }
      if (TwygoModalRemoveItem.message) {
        TwygoModalRemoveItem.HTML_PARAGRAPH_MESSAGE.html(TwygoModalRemoveItem.message);
      }
      if (TwygoModalRemoveItem.sub_title) {
        TwygoModalRemoveItem.HTML_SUB_TITLE.innerText = TwygoModalRemoveItem.sub_title;
      }
      if (TwygoModalRemoveItem.CURRENT_OBJECT.name === void 0) {
        return;
      }
      return TwygoModalRemoveItem.HTML_PARAGRAPH_MESSAGE.innerText = I18n.t('common.modal_delete', {
        name: TwygoModalRemoveItem.CURRENT_OBJECT.name
      });
    },
    reset: function() {
      return TwygoModalRemoveItem.CURRENT_OBJECT = {
        id: null,
        name: null
      };
    },
    initFunctionOfCallBack: function() {
      var HTMLButtonCancel, HTMLButtonClose, HTMLButtonConfirmed, idButtonClose, idCancel, idConfirmed;
      idCancel = "#" + TwygoModalRemoveItem.id + "-cancel";
      idConfirmed = "#" + TwygoModalRemoveItem.id + "-confirmed";
      idButtonClose = "#" + TwygoModalRemoveItem.id + "-close";
      HTMLButtonCancel = document.querySelector(idCancel);
      HTMLButtonClose = document.querySelector(idButtonClose);
      HTMLButtonConfirmed = document.querySelector(idConfirmed);
      HTMLButtonCancel.addEventListener('click', TwygoModalRemoveItem.callbacks.close);
      HTMLButtonClose.addEventListener('click', TwygoModalRemoveItem.callbacks.close);
      return HTMLButtonConfirmed.addEventListener('click', TwygoModalRemoveItem.callbacks.defaultConfirmed);
    }
  };

}).call(this);
(function() {


}).call(this);
(function() {
  this.TwygoMyContents = {
    _ajax_url: '/my-contents.json',
    _params: null,
    _$last: null,
    _$all: null,
    _$cards: null,
    _$filter: null,
    _array_controll: null,
    _names_list: null,
    _search: false,
    initialize: function(arg) {
      var DOM_all, DOM_cards, DOM_certificate, DOM_filter, DOM_last, _events_status, _orderby;
      DOM_last = arg.DOM_last, DOM_all = arg.DOM_all, DOM_cards = arg.DOM_cards, DOM_filter = arg.DOM_filter, DOM_certificate = arg.DOM_certificate;
      this._$last = $(DOM_last);
      this._$all = $(DOM_all);
      this._$cards = $(DOM_cards);
      this._$filter = $(DOM_filter);
      this._$certificate = $(DOM_certificate);
      _orderby = $(DOM_filter).find('#events_orderby').val();
      _events_status = $(DOM_filter).find('#events_status').val();
      this.listener_select();
      this.search_load_list();
      return this.load_events_ajax();
    },
    loop_cards: function($selector, _list, hidden, block) {
      if (_list == null) {
        _list = [];
      }
      if (hidden == null) {
        hidden = false;
      }
      $selector.find('.cards_content').html('');
      if (_list.length > 0) {
        return _list.forEach(function(el, index) {
          var $tag, out;
          if (block.includes(el.id)) {
            el.events_block = true;
          } else {
            el.events_block = false;
          }
          out = TwygoMyContents.render_mustache(el);
          $tag = $(out).find('.progress');
          return $selector.find('.cards_content').append(out);
        });
      } else {
        $selector.find('.cards_content').html('<div class="not-found"><p class="col-12 not-found--events">' + I18n.t('no_courses_found') + '</p></div>');
        if (hidden) {
          return $selector.fadeOut();
        }
      }
    },
    enable_search: function(situation) {
      TwygoMyContents._search = true;
      TwygoMyContents.init_name();
      return TwygoMyContents.search_input_list();
    },
    render_mustache: function(element) {
      var template;
      element.course_release_date = TwygoApplication.course_release_date(TwygoApplication.date_format(element.date_time_start), TwygoApplication.date_format(element.date_time_end));
      element.course_closing_date = TwygoApplication.course_closing_date(TwygoApplication.date_format(element.date_time_start), TwygoApplication.date_format(element.date_time_end));
      element.presente = !(element.future || element.past);
      template = TwygoMyContents._$cards.html();
      return Mustache.render(template, element);
    },
    filter_my_contents: function(filter_status, filter_orderby) {
      return this.load_events_ajax();
    },
    loading: function(status) {
      if (status === 'in') {
        $('#new-content--inner').addClass('loading');
        return this._$filter.each(function(el, i) {
          $(this).prop('disabled', true);
        });
      } else {
        setTimeout(function() {
          return $('#new-content--inner').removeClass('loading');
        }, 1500);
        return this._$filter.each(function(el, i) {
          $(this).removeProp('disabled');
        });
      }
    },
    listener_select: function() {
      return this._$filter.find('select').on('change', function(e) {
        TwygoMyContents.load_events_ajax();
        return e.stopPropagation();
      });
    },
    init_name: function() {
      setTimeout(function() {
        return TwygoMyContents._names_list = TwygoMyContents._$all.find('.event-name');
      }, 500);
      if (TwygoMyContents._search) {
        return setTimeout(function() {
          var _text;
          _text = $('#top-search-input').val();
          return TwygoMyContents.filter_list(_text);
        }, 1000);
      }
    },
    animation_progress: function(_elements) {
      return $('.event-box').find('[data-score]').each(function(el, i) {
        var $self, _score;
        $self = $(this);
        _score = $self.attr('data-score');
        $self.find('.progress-bar').circleProgress({
          size: 40,
          thickness: 3,
          value: _score / 100,
          lineCap: 'round',
          animation: {
            duration: 6000,
            easing: "circleProgressEasing"
          },
          fill: {
            gradient: ['#56BD5B', '#469C4A']
          }
        });
        return $self.find('.progress-count').text((_score * 1) + '%');
      });
    },
    search_load_list: function() {
      return $('#top-search-input').on('keydown', function(e) {
        var _view_list;
        if (e.keyCode === 13 && !TwygoMyContents._search) {
          e.preventDefault();
          e.stopPropagation();
          _view_list = $('#events_status').val();
          $('#events_status').val('all').trigger('change');
        }
      });
    },
    filter_list: function(_search) {
      var _regex;
      _regex = new RegExp(_search, "i");
      if (_search.length > 2) {
        return TwygoMyContents._names_list.each(function(element, index) {
          var _match, _s;
          _s = $(this).find('h3').text();
          _match = _regex.exec(_s);
          $(this).closest('.col-12').removeClass('hidden');
          if (_match === null) {
            return $(this).closest('.col-12').addClass('hidden');
          }
        });
      } else {
        return $('#list_all__content').find('.col-12').removeClass('hidden');
      }
    },
    search_input_list: function() {
      return $('#top-search-input').on('keyup', function(e) {
        var _search;
        if (TwygoMyContents._search) {
          _search = $.trim(this.value);
          TwygoMyContents.filter_list(_search);
          if (e.keyCode === 13) {
            e.preventDefault();
            return e.stopPropagation();
          }
        }
      });
    },
    load_events_ajax: function(_params) {
      var params_filter;
      params_filter = {
        situation: $('#events_status').prop('selected', true).val() || '',
        orderby: $('#events_orderby').val(),
        filter_name: $('#filterMyContentsName').val(),
        filter_category: $('#filterMyContentsCategory').val(),
        filter_period_start: $('#filterMyContentsPeriodStart').val(),
        filter_period_end: $('#filterMyContentsPeriodEnd').val(),
        filter_speaker: $('#selectMyContentsSpeaker').prop('selected', true).val() || '',
        check_filter_nil_date: $('#checkFilterNilDate').is(":checked")
      };
      return $.ajax({
        url: TwygoMyContents.ajax_url,
        type: 'GET',
        dataType: 'json',
        data: params_filter,
        beforeSend: function() {
          return TwygoMyContents.loading('in');
        },
        success: function(json, textStatus, jqXHR) {
          if (params_filter.situation && params_filter.orderby) {
            TwygoMyContents._$last.fadeOut();
          } else {
            TwygoMyContents._array_controll = json.lasts;
            TwygoMyContents._$last.fadeIn();
          }
          TwygoMyContents.loop_cards(TwygoMyContents._$last, json.lasts, true, json.events_blocked);
          return TwygoMyContents.loop_cards(TwygoMyContents._$all, json.all, null, json.events_blocked);
        },
        complete: function(response) {
          TwygoMyContents.loading('out');
          TwygoMyContents.animation_progress();
          return TwygoMyContents.enable_search(params_filter.situation);
        }
      });
    },
    exist_value: function(value) {
      if (value) {
        return value;
      } else {
        return null;
      }
    },
    show_clear_button: function(value) {
      return !value;
    },
    build_cards: function(filter_select_status, filter_course_name, filter_category, filter_date_start, filter_date_end, filter_select_speaker, filter_checked_nil_date) {
      var _html, checked_nil_date, data, out, show_clear, speaker_filtered, status_filtered;
      _html = $('#filter_card').html();
      if (filter_select_status !== I18n.t('menu.all').trim()) {
        status_filtered = filter_select_status;
      } else {
        status_filtered = '';
      }
      if (filter_select_speaker !== I18n.t("javascripts.all_instructors")) {
        speaker_filtered = filter_select_speaker;
      } else {
        speaker_filtered = '';
      }
      if (filter_checked_nil_date) {
        checked_nil_date = '';
      } else {
        checked_nil_date = I18n.t("javascripts.omit_undated_courses");
      }
      if ([status_filtered, filter_course_name, filter_category, filter_date_start, filter_date_end, speaker_filtered, checked_nil_date].every(this.show_clear_button)) {
        show_clear = false;
      } else {
        show_clear = true;
      }
      data = {
        "filters": [
          {
            value: this.exist_value(status_filtered),
            id: 'events_status'
          }, {
            value: this.exist_value(filter_course_name),
            id: 'filterMyContentsName'
          }, {
            value: this.exist_value(filter_category),
            id: 'filterMyContentsCategory'
          }, {
            value: this.exist_value(filter_date_start),
            id: 'filterMyContentsPeriodStart'
          }, {
            value: this.exist_value(filter_date_end),
            id: 'filterMyContentsPeriodEnd'
          }, {
            value: this.exist_value(speaker_filtered),
            id: 'selectMyContentsSpeaker'
          }, {
            value: this.exist_value(checked_nil_date),
            id: 'checkFilterNilDate'
          }
        ],
        "clear_filter": show_clear
      };
      out = Mustache.render(_html, data);
      return $('#filter-cards').html(out);
    }
  };

}).call(this);
(function() {
  this.TwygoMyCourseList = {
    _ajax_url: '/course_list.json',
    _params: null,
    _$all: null,
    _$cards: null,
    _names_list: null,
    initialize: function(arg) {
      var DOM_all, DOM_cards;
      DOM_all = arg.DOM_all, DOM_cards = arg.DOM_cards;
      this._$all = $(DOM_all);
      this._$cards = $(DOM_cards);
      TwygoMyCourseList.search_input_list('text');
      TwygoMyCourseList.load_events_ajax(null);
      TwygoMyCourseList.listener_select();
      return this;
    },
    loop_cards: function($selector, _list, hidden) {
      if (_list == null) {
        _list = [];
      }
      if (hidden == null) {
        hidden = false;
      }
      $selector.find('.cards_content').html('');
      if (_list.length > 0) {
        return _list.forEach(function(el, index) {
          var $tag, out;
          out = TwygoMyCourseList.render_mustache(el);
          $tag = $(out).find('.progress');
          return $selector.find('.cards_content').append(out);
        });
      } else {
        $selector.find('.cards_content').html('<div class="not-found"><p class="col-12 not-found--events">' + I18n.t('no_courses_found') + '</p></div>');
        if (hidden) {
          return $selector.fadeOut();
        }
      }
    },
    listener_select: function() {
      return $('#events_orderby').on('change', function(e) {
        var _params, _type, _value;
        _params = {};
        _type = $(this).attr('data-type');
        _value = $(this).val();
        _params[_type] = _value;
        TwygoMyCourseList.load_events_ajax(_params);
        return e.stopPropagation();
      });
    },
    render_mustache: function(element) {
      var template;
      template = TwygoMyCourseList._$cards.html();
      return Mustache.render(template, element);
    },
    loading: function(status) {
      if (status === 'in') {
        return $('#new-content--inner').addClass('loading');
      } else {
        return setTimeout(function() {
          return $('#new-content--inner').removeClass('loading');
        }, 1000);
      }
    },
    init_name: function() {
      return setTimeout(function() {
        return TwygoMyCourseList._names_list = TwygoMyCourseList._$all.find('.event-name');
      }, 1000);
    },
    search_input_list: function(text) {
      return $('#top-search-input').on('keyup keydown', function(e) {
        var _regex, _search;
        if (e.keyCode === 13) {
          e.preventDefault();
          e.stopPropagation();
        }
        _search = $.trim(this.value);
        _regex = new RegExp(_search, "i");
        if (_search.length > 2) {
          return TwygoMyCourseList._names_list.each(function(element, index) {
            var _match, _s;
            _s = $(this).find('h3').text();
            _match = _regex.exec(_s);
            $(this).closest('.col-12').removeClass('hidden');
            if (_match === null) {
              return $(this).closest('.col-12').addClass('hidden');
            }
          });
        } else {
          return $('#list_all__content').find('.col-12').removeClass('hidden');
        }
      });
    },
    load_events_ajax: function(_params) {
      return $.ajax({
        url: TwygoMyCourseList._ajax_url,
        type: 'GET',
        dataType: 'json',
        data: _params,
        beforeSend: function() {
          return TwygoMyCourseList.loading('in');
        },
        success: function(json, textStatus, jqXHR) {
          return TwygoMyCourseList.loop_cards(TwygoMyCourseList._$all, json.all);
        },
        complete: function(response) {
          TwygoMyCourseList.loading('out');
          return TwygoMyCourseList.init_name();
        }
      });
    }
  };

}).call(this);
(function() {
  var page, size;

  page = 0;

  size = 20;

  this.TwygoMyNetwork = {
    urls: {
      find_users: 'users/isearch'
    },
    initialize: function(is_search) {
      this.is_search = is_search;
      $(document).on("click", ".tab_selector", function() {
        return TwygoMyNetwork.tab_select($(this).parent().next().children("#" + ($(this).attr('list'))), this);
      });
      $(document).on("click", "#who_more_friend", function(event) {
        return TwygoMyNetwork.who_more($(this), event);
      });
      if (is_search) {
        $(".tab_selector").last().click();
      } else {
        $(".tab_selector").first().click();
      }
      return $(document).on("keyup", "#name_search input", this.triggerSearch);
    },
    tab_select: function(tab, element) {
      $(".tab_selector").removeClass('selected');
      $(element).addClass('selected');
      return TwygoMyNetwork.show_content(tab);
    },
    show_content: function(tab) {
      $(".tab").hide();
      tab.show();
      if (tab.attr('loaded') === "false" && tab.attr("id") !== "find_users") {
        page = 0;
        return TwygoMyNetwork.load_user_list(tab.attr('id'), {
          reset: true
        });
      }
    },
    add_friend: function(element, event) {
      var status, tabname, user;
      if (event) {
        safePreventEvent(event);
      }
      element = $(element);
      user = element.attr('user');
      tabname = element.attr('tab');
      $('.tab#requests, .tab#friends').attr('loaded', false);
      status = 2;
      return $.ajax({
        url: "/create_relation/?status=2&friend=" + user,
        type: "post",
        dataType: "json",
        success: function(response) {
          if (tabname) {
            return TwygoMyNetwork.update_relation_line(response, tabname, element);
          } else {
            TwygoFlashMessage.setMessage('notice', I18n.t("solicitation_sent"));
            return TwygoMyNetwork.update_user_bar(status);
          }
        }
      });
    },
    load_user_list: function(tabname, options) {
      var url;
      url = TwygoMyNetwork.urls[tabname] || tabname;
      return $.ajax({
        url: "/" + url,
        data: {
          page: page,
          size: size,
          elements: ((options != null ? options.reset : void 0) ? 0 : TwygoMyNetwork.existing_users_list(tabname)),
          q: $("#name_search input").val()
        },
        type: "post",
        dataType: "json",
        success: function(response) {
          if (options != null ? options.reset : void 0) {
            $("#" + tabname + " ul").html('');
          }
          return TwygoMyNetwork.user_ul(response, tabname);
        }
      });
    },
    update_relation: function(element, e) {
      var status, tabname, user;
      if (e) {
        safePreventEvent(e);
      }
      element = $(element);
      status = element.attr('status');
      user = element.attr('user');
      tabname = element.attr('tab');
      $(".tab#friends").attr("loaded", false);
      return $.ajax({
        url: "/update_relation/?status=" + status + "&user=" + user,
        type: "post",
        dataType: "json",
        success: function(response) {
          if (tabname !== void 0) {
            return TwygoMyNetwork.update_relation_line(response, tabname, element);
          } else {
            return TwygoMyNetwork.update_user_bar(status);
          }
        }
      });
    },
    update_user_bar: function(status) {
      switch (parseInt(status)) {
        case 1:
          $("#user_relation").text(I18n.t("javascripts.my_network"));
          $(".user-details .user-name a").addClass("friends").text(I18n.t("javascripts.my_network"));
          break;
        case 2:
          $("#user_relation").text(I18n.t("relations.pending"));
          $(".user-details .user-name a").addClass("pending").text(I18n.t("relations.pending"));
      }
      $("#user_relation").parent().removeAttr("onClick");
      return $(".user-details .user-name a").unbind("click");
    },
    update_relation_line: function(response, tabname, element) {
      var li, resend;
      resend = !element.parent().is(":has([status=null])");
      li = element.parent().html("").append(TwygoMyNetwork.relation_buttons(response.relation, $("#" + tabname))).parents("li:first").removeClass().addClass("list_" + response.relation.status);
      if (tabname === 'find_users') {
        if (!($.inArray(response.relation.status, [4, null]) >= 0)) {
          li.addClass('ghost').remove();
        }
      } else {
        if (response.relation.status !== 2) {
          li.addClass('ghost').remove();
        }
      }
      if (response.relation.status === 2) {
        TwygoFlashMessage.setMessage('notice', I18n.t(resend ? 'solicitation_resent' : 'solicitation_sent'));
      }
      return TwygoMyNetwork.update_counters(element);
    },
    update_counters: function(element) {
      switch (parseInt(element.attr("status"))) {
        case 0:
          $("#friend_counter").text(parseInt($("#friend_counter").text()) - 1);
          break;
        case 1:
          $("#friend_counter").text(parseInt($("#friend_counter").text()) + 1);
          $(".request_counter").text(parseInt($(".request_counter").text()) - 1);
          break;
        case 4:
          $(".request_counter").text(parseInt($(".request_counter").text()) - 1);
      }
      if (parseInt($(".request_counter").text()) === 0) {
        return $(".request_counter").hide();
      }
    },
    user_ul: function(response, tabname) {
      var tab;
      tab = $("#" + tabname);
      tab.attr("loaded", true);
      if (response.provider === 'facebook') {
        tab.children("ul").append("<li style='height: 13px;'><a class='share friend_name share-twygo-link facebook-share' id='share-facebook' href='http://" + window.location.host + "'>" + (I18n.t("javascripts.advertise_facebook")) + "</a></li>");
      }
      tab.children("ul").append(TwygoMyNetwork.user_li(response, tab));
      $("a[more='" + (tab.attr('id')) + "']").hide();
      if (response.can_show_more_results) {
        return $("a[more='" + (tab.attr('id')) + "']").show();
      }
    },
    user_li: function(response, tab) {
      var addClass, list;
      addClass = "";
      list = ($.map(response.users, function(user, i) {
        var avatar, display, employ, emply_from, from, full_name;
        if (i > 19 && this.is_search) {
          display = "none";
          addClass = " hidden";
        }
        full_name = user.first_name + " " + user.last_name;
        employ = jQuery.map([user.enterprise, user.role], function(n, i) {
          if (n !== "") {
            return n;
          }
        }).join(", ");
        from = jQuery.map([user.city, user.state], function(n, i) {
          if (n !== "") {
            return n;
          }
        }).join("/");
        emply_from = jQuery.map([employ, from], function(n, i) {
          if (n !== "") {
            return n;
          }
        }).join(" - ");
        avatar = user.avatar_url || TwygoUser.avatar_src(user);
        return ("<li class='list_" + user.status) + addClass + ("' style='display: flex; justify-content: space-between;'> <div style='display: flex'> <a href='/p/" + user.id + "'> <div class='friend_photo'> <img src='" + avatar + "' width='30px' height='30px'/> </div> </a> <div style='display: flex; flex-direction: column'> <div class='friend_name'> <a href='/p/" + user.id + "' class='friend_name'>" + full_name + "</a> </div> <div class='friend_employ'>" + (emply_from.truncate(35)) + "</div> </div> </div> <div style='display: flex; align-items: center'> " + (TwygoMyNetwork.relation_buttons(user, tab)) + " </div> </li>");
      })).join("");
      if (response.users.length > 20 && this.is_search) {
        $("a[more='find_contacts']").show();
      }
      return list;
    },
    relation_buttons: function(user, tab) {
      switch (user.status) {
        case 0:
          return "<div class='relation_status status_0' title='" + (I18n.t("javascripts.canceled")) + "'></div>";
        case 1:
          return "<div class='relation_status status_1' title='" + (I18n.t("javascripts.my_network")) + "'></div>";
        case 2:
          switch (tab.attr('id')) {
            case 'friends':
            case 'find_users':
              if (tab.attr('id') === 'find_users') {
                user.id = user.friend_id;
              }
              return "<a class='friend_relation gray_btn' onClick='TwygoMyNetwork.update_relation(this,event)' status='2' tab='" + (tab.attr('id')) + "' user='" + user.id + "' href='#'>" + (I18n.t("javascripts.resend_request")) + "</a> <a class='cancel_request' onClick='TwygoMyNetwork.update_relation(this,event)' status='0' tab='" + (tab.attr('id')) + "' user='" + user.id + "' href='#'> <img title='" + (I18n.t("javascripts.cancel_request")) + "' src='" + TwygoApplication.assets.ngo + "'> </a>";
            case 'requests':
              return "<a class='friend_relation gray_btn' onClick='TwygoMyNetwork.update_relation(this,event)' status='1' tab='" + (tab.attr('id')) + "' user='" + user.id + "' href='#'>" + (I18n.t("views.accept")) + "</a> <a class='friend_relation gray_btn' onClick='TwygoMyNetwork.update_relation(this,event)' status='4' tab='" + (tab.attr('id')) + "' user='" + user.id + "' href='#'>" + (I18n.t("views.ignore")) + "</a>";
          }
          break;
        case 4:
          switch (tab.attr('id')) {
            case 'friends':
              return "<a class='friend_relation gray_btn' onClick='TwygoMyNetwork.update_relation(this,event)' status='2' tab='" + (tab.attr('id')) + "' user='" + user.id + "' href='#'>" + (I18n.t("javascripts.resend_request")) + "</a> <a class='cancel_request' onClick='TwygoMyNetwork.update_relation(this,event)' status='0' tab='" + (tab.attr('id')) + "' user='" + user.id + "' href='#'> <img title='" + (I18n.t("javascripts.cancel_request")) + "' src='" + TwygoApplication.assets.ngo + "'> </a>";
            case 'requests':
              return "<div class='relation_status status_4' title='" + (I18n.t("views.ignored")) + "'></div>";
            case 'find_users':
              return "<a class='friend_relation gray_btn' onClick='TwygoMyNetwork.update_relation(this,event)' status='1' tab='" + (tab.attr('id')) + "' user='" + user.id + "' href='#'>" + (I18n.t("views.accept")) + "</a>";
          }
          break;
        default:
          return "<a class='friend_relation gray_btn' onclick='TwygoMyNetwork.add_friend(this,event)' status='null' tab='" + (tab.attr('id')) + "' user='" + user.id + "' href='#'>" + (I18n.t("views.invite")) + "</a>";
      }
    },
    who_more: function(element, e) {
      var tabname;
      if (element.attr("more") !== "find_contacts") {
        if (e) {
          safePreventEvent(e);
        }
        page = parseInt(element.attr("page")) + 1;
        element.attr("page", page);
        tabname = $(element).parent().attr("id");
        return TwygoMyNetwork.load_user_list(tabname);
      } else {
        return TwygoMyNetwork.update_contact_list(e);
      }
    },
    update_contact_list: function(e) {
      var i;
      i = 0;
      while (i < 20 && $(".hidden:first").length) {
        i++;
        $(".hidden:first").show();
        $(".hidden:first").removeClass('hidden');
      }
      if (!$(".hidden:first").length) {
        return $("a[more='find_contacts']").hide();
      }
    },
    existing_users_list: function(tabname) {
      return $("#" + tabname).children("ul").children("li:not(.ghost)").size();
    },
    triggerSearch: function(e) {
      $("a[more='find_contacts']").hide();
      clearInterval(TwygoMyNetwork.searchTrigger);
      return TwygoMyNetwork.searchTrigger = setTimeout(TwygoMyNetwork.search, 350);
    },
    search: function(e) {
      var queryString;
      queryString = $.trim($("#name_search input").val());
      if (queryString === "") {
        $('.tab:visible ul').html("");
        $('.show_more_search, .tab:visible .no_results').hide();
        return;
      }
      return $.ajax({
        url: "/users/isearch",
        data: {
          q: queryString
        },
        dataType: 'json',
        type: 'post',
        success: function(response) {
          var ul;
          ul = $('.tab:visible ul');
          $('.tab span.no_results').remove();
          ul.html('');
          if (response.users.length === 0) {
            ul.after("<span class=\"no_results\">" + I18n.t('contact_search_no_results', {
              query: queryString
            }) + "</span>");
            $('.show_more_people', '#find_users').hide();
          } else {
            TwygoMyNetwork.user_ul(response, "find_users");
          }
          $("a.show_more_search")[response.total > $('li', ul).size() ? 'show' : 'hide']();
          if ($.trim($("#name_search > input").val()) === '') {
            ul.html('');
          }
          return $(".show_more_search").attr("page", 2);
        }
      });
    }
  };

}).call(this);
(function() {
  this.TwygoMyProfessionalProfile = {
    organization_id: "",
    professional_id: "",
    profiles: [],
    competencies: [],
    levels: [],
    requirements: [],
    requirements_completed: [],
    translation_scope: "my_professional_profile",
    is_mine: false,
    initialize: function() {
      var $this, competency, competency_id, hash, j, len, ref;
      this.setupData();
      $this = this;
      this.addHeaderLink("", function() {
        return $this.showProfileList();
      });
      this.buildProfileList();
      hash = void 0;
      if (location.hash !== "") {
        hash = location.hash.split("#")[1];
        location.hash = "";
      }
      competency_id = parseInt(hash);
      if (isNaN(competency_id)) {
        return this.showProfileList();
      } else {
        ref = this.competencies;
        for (j = 0, len = ref.length; j < len; j++) {
          competency = ref[j];
          if (competency.id === competency_id) {
            this.addHeaderLink(competency.description, function() {
              return $this.showCompetencyOverview();
            });
            this.buildCompetencyOverview(competency);
            this.showCompetencyOverview();
            return;
          }
        }
        return this.showProfileList();
      }
    },
    cancelButton: function(action) {
      if (action === 'competency') {
        return this.showProfileOverview();
      } else {
        return this.showProfileList();
      }
    },
    addHeaderLink: function(text, action, prepend) {
      var li;
      if (typeof prepend === "undefined") {
        prepend = false;
      }
      li = $("<li>").append($("<a href='#'>").text(text).click(function() {
        var results;
        action();
        results = [];
        while ($(this).parent().next().length > 0) {
          results.push($(this).parent().next().remove());
        }
        return results;
      }));
      if (prepend) {
        return $(".header ul").prepend(li);
      } else {
        return $(".header ul").append(li);
      }
    },
    hideAllSections: function() {
      return $(".profiles_list, .profile_overview, .competency_overview").hide();
    },
    hideProfileList: function() {
      return $(".profiles_list").hide();
    },
    hideProfileOverview: function() {
      return $(".profile_overview").hide();
    },
    hideCompetencyOverview: function() {
      return $(".competency_overview").hide();
    },
    showProfileList: function() {
      this.hideAllSections();
      return $(".profiles_list").fadeIn();
    },
    showProfileOverview: function() {
      this.hideAllSections();
      return $(".profile_overview").fadeIn();
    },
    showCompetencyOverview: function() {
      this.hideAllSections();
      return $(".competency_overview").fadeIn();
    },
    buildProgressBox: function(progress) {
      if (typeof progress === 'undefined') {
        progress = 0;
      }
      return $("<div class='progress_box' align='center'>").append($("<span class='progress_percent'>").text(Math.round(progress) + "%")).append($("<div class='progress_bar' align='left'>").append($("<div class='progress'>").css("width", Math.round(progress))));
    },
    clearProfileList: function() {
      this.hideProfileList();
      return $(".profiles_list > .profiles").empty();
    },
    clearProfileOverview: function() {
      this.hideProfileOverview();
      return $(".profile_overview > .profile, .profile_overview > .competencies").empty();
    },
    clearCompetencyOverview: function() {
      this.hideCompetencyOverview();
      return $(".competency_overview > .competency, .competency_overview > .table_box").empty();
    },
    buildProfileList: function(profiles) {
      var $this;
      if (typeof profiles === 'undefined') {
        profiles = this.profiles;
      }
      $this = this;
      this.clearProfileList();
      return $.map(profiles, function(pro) {
        return $(".profiles_list > .profiles").append($this.buildProfileBox(pro));
      });
    },
    buildProfileOverview: function(pro) {
      var $this, competency, j, len, ref, results;
      if (typeof pro === 'undefined') {
        return;
      }
      this.clearProfileOverview();
      $this = this;
      $(".profile_overview > .profile").data("profile", pro).append($("<div class='profile_title'>").text(pro.description)).append(this.buildProgressBox(pro.progress));
      ref = pro.competencies;
      results = [];
      for (j = 0, len = ref.length; j < len; j++) {
        competency = ref[j];
        results.push($(".profile_overview > .competencies").append($this.buildCompetencyBox(competency)));
      }
      return results;
    },
    buildCompetencyOverview: function(competency) {
      var $this, completion_date, j, k, len, len1, level, level_status, level_status_class, line, ref, ref1, requirement, requirement_body, table, table_body;
      this.clearCompetencyOverview();
      $this = this;
      table_body = $("<tbody>");
      level_status = [I18n.t("not_started", I18n.t("event_type_running", I18n.t("javascripts.completed")))];
      level_status_class = ["level_pending", "level_started", "level_completed"];
      ref = competency.levels;
      for (j = 0, len = ref.length; j < len; j++) {
        level = ref[j];
        requirement_body = $("<tbody>");
        ref1 = level.requirements;
        for (k = 0, len1 = ref1.length; k < len1; k++) {
          requirement = ref1[k];
          completion_date = requirement.completion_date !== void 0 ? I18n.l('date.formats.default', requirement.completion_date) : "";
          line = requirement_body.append($("<tr class='requirement_row' id='requirement_row_" + requirement.id + "'>").append($("<td class='requirement_status'>").addClass(requirement.completed ? "complete" : "incomplete")).append($("<td class='requirement_description'>").attr("title", requirement.description).text(requirement.description)));
          if (requirement.completed) {
            line.find("tr:last").append($("<td class='requirement_complete_date'>").attr("title", completion_date).text(completion_date));
          } else if (TwygoMyProfessionalProfile.is_mine && requirement.model_id !== null) {
            line.find("tr:last").append($("<td class='requirement_subscribe_button'>").append($("<a class='signup-event btn btn-primary inline ghost'>").text(I18n.t("javascripts.sign_up")).attr("target", "_blank").attr("href", "/e/" + requirement.model_id)));
          } else if (TwygoMyProfessionalProfile.is_mine) {
            line.find("tr:last").append($("<td width='60px'>"));
          } else {
            line.find("tr:last").append($("<td width='60px'>").append($("<input class='register-requirement btn btn-primary inline ghost'>").attr("type", 'button').attr("value", I18n.t("javascripts.register")).attr("onClick", "TwygoProfilesManagement.floatRegisterRequirement('" + this.professional_id + "','" + requirement.id + "','register', " + this.organization_id + ")")));
          }
        }
        table_body.append($("<tr class='level_row' id='level_row_" + level.id + "'>").attr("level_id", level.id).append($("<td class='linkv open-details table-marker'>").append($("<button class='div-competency-cell div-table-arrow-down btn btn-default'><i class='icon-chevron-down-1'></i></button>").append($("<br>")))).append($("<td class='level_name ellipsis'>").text(level.name).attr("title", level.name)).append($("<td class='level_status ellipsis'>").text(level_status[level.status]).attr("title", level_status[level.status]).addClass(level_status_class[level.status])).append($("<td class='level_progress ellipsis'>").attr("title", level.progress + "%").text(Math.round(level.progress) + "%")).append($("<td class='level_progress_bar ellipsis'>").attr("title", "Progresso").append($("<div class='progress_bar' align='left'>").append($("<div class='progress'>").css("width", level.progress))))).append($("<tr class='requirements_row hidden' id='requirements_row_" + level.id + "'>").append($("<td colspan=5>").append($("<table>").append(requirement_body))));
      }
      table = $("<div class='list table-responsive'>").append($("<table class='table professional_level_table table--new'>").append(table_body));
      table.find(".open-details").click(function() {
        var id;
        id = $(this).parents(".level_row").attr("level_id");
        $("table.professional_level_table .open-details .div-competency-cell").removeClass("div-table-arrow-up").addClass("div-table-arrow-down");
        if ($("#requirements_row_" + id).is(":visible")) {
          return $(".requirements_row").slideUp(200);
        }
        $(this).find(".div-competency-cell").removeClass("div-table-arrow-down").addClass("div-table-arrow-up");
        return $(".requirements_row").slideUp(200, function() {
          return setTimeout(function() {
            return $("#requirements_row_" + id).slideDown(200);
          }, 100);
        });
      });
      $(".competency_overview > .competency").data("competency", competency).append(this.buildProgressBox(competency.progress)).append(this.buildLevelGraph(competency)).append($("<div class='description'>").text(competency.description)).append($("<div class='current_level ellipsis'>").text(competency.current_level === void 0 ? I18n.t('javascripts.no_level_completed') : competency.current_level.name));
      return $(".competency_overview > .table_box").append(table);
    },
    buildProfileBox: function(pro) {
      var $this, competency, competency_list, j, len, ref;
      if (typeof pro === 'undefined') {
        pro = {};
      }
      $this = this;
      competency_list = $("<div class='profile_competencies_list'>");
      ref = pro.competencies;
      for (j = 0, len = ref.length; j < len; j++) {
        competency = ref[j];
        competency_list.append($("<div class='competency'>").addClass(["incomplete", "started", "complete"][competency.status]).append($("<div class='icon'>")).append($("<div class='description'>").text(competency.description)));
      }
      return $("<div class='profile'>").append(this.buildProgressBox(pro.progress)).append($("<div class='description'>").text(pro.description)).append(competency_list).click(function() {
        $this.addHeaderLink(pro.description, function() {
          return $this.showProfileOverview();
        });
        $this.buildProfileOverview(pro);
        return $this.showProfileOverview();
      });
    },
    buildCompetencyBox: function(competency) {
      var $this, j, len, level, level_list, ref;
      if (typeof competency === 'undefined') {
        competency = {};
      }
      $this = this;
      level_list = $("<div class='levels'>");
      ref = competency.levels;
      for (j = 0, len = ref.length; j < len; j++) {
        level = ref[j];
        level_list.append($("<div class='level'>").addClass(["incomplete", "started", "complete"][level.status]).append($("<div class='icon'>")).append($("<div class='description'>").text(level.name)));
      }
      return $("<div class='competency'>").append($this.buildProgressBox(competency.progress)).append($("<div class='description'>").text(competency.description)).append(level_list).click(function() {
        $this.addHeaderLink(competency.description, function() {
          return $this.showCompetencyOverview();
        });
        $this.buildCompetencyOverview(competency);
        return $this.showCompetencyOverview();
      });
    },
    buildLevelGraph: function(competency) {
      var $this, badges, graph;
      graph = $("<div class='completed_levels_graph'>");
      $this = this;
      $.map(competency.levels, function(level, i) {
        return graph.append($("<div class='level_badge'>").addClass(level.completed ? "complete" : "incomplete").attr("title", level.name).append($("<div class='link prev'>")).append($("<div class='badge'>").append($("<span class='level_number'>").text(i + 1))).append($("<div class='link next'>")).append($("<div class='level_name'>").text(level.name)));
      });
      badges = graph.find(".level_badge");
      if (badges.length > 5 && badges.filter(".complete").length >= 3) {
        badges.filter(":lt(" + (badges.filter(".complete").length - 2) + ")").hide();
        badges.filter(":gt(" + (4 + (badges.filter(".complete").length - 2 < 0 ? 0 : badges.filter(".complete").length - 2)) + ")").hide();
        badges.filter(":nth-child(" + (badges.filter(".complete").length - 1) + ")").find(".link:first").css("background", "none");
      }
      return graph;
    },
    unique: function(arr) {
      var result;
      result = [];
      $.map(arr, function(item) {
        if (result.indexOf(item) === -1) {
          return result.push(item);
        }
      });
      return result;
    },
    updateRequirementPercentage: function() {
      var percentage, requirements, requirements_completed;
      requirements = TwygoMyProfessionalProfile.requirements.length;
      requirements_completed = TwygoMyProfessionalProfile.requirements_completed.length;
      percentage = Math.round((requirements_completed / requirements) * 100);
      $(".requirement_overview .requirement .progress_box .progress_percent").text(percentage + "%");
      return $(".requirement_overview .requirement .progress_box .progress_bar .progress").css("width", percentage + "px");
    },
    setupData: function() {
      var $this;
      $this = this;
      $.map($this.requirements, function(requirement) {
        var j, len, ref, requirement_completed, results;
        requirement.completed = false;
        requirement.completion_date = void 0;
        ref = $this.requirements_completed;
        results = [];
        for (j = 0, len = ref.length; j < len; j++) {
          requirement_completed = ref[j];
          if (requirement_completed.requirement_id === requirement.id) {
            requirement.completed = true;
            results.push(requirement.completion_date = requirement_completed.completion_date);
          } else {
            results.push(void 0);
          }
        }
        return results;
      });
      $.map($this.levels, function(level) {
        level.completed_ids = [];
        level.requirements = $.grep($this.requirements, function(requirement) {
          if (level.requirement_ids.indexOf(requirement.id) >= 0) {
            if (requirement.completed) {
              level.completed_ids.push(requirement.id);
            }
            return true;
          }
          return false;
        });
        level.completed_count = level.completed_ids.length;
        level.total_count = level.requirement_ids.length;
        level.progress = level.completed_count / level.total_count * 100;
        if (isNaN(level.progress)) {
          level.progress = 0;
        }
        return level.status = level.progress > 0 ? 1 : 0;
      });
      $.map($this.competencies, function(competency) {
        var j, len, level, ref;
        competency.completed_ids = [];
        competency.requirement_ids = [];
        competency.levels = $.grep($this.levels, function(level) {
          if (competency.level_ids.indexOf(level.id) >= 0) {
            $.merge(competency.completed_ids, level.completed_ids);
            $.merge(competency.requirement_ids, level.requirement_ids);
            return true;
          }
          return false;
        });
        ref = competency.levels;
        for (j = 0, len = ref.length; j < len; j++) {
          level = ref[j];
          level.completed = level.progress === 100;
          if (level.completed) {
            level.status = 2;
          }
          if (!level.completed) {
            break;
          }
          competency.current_level = level;
        }
        competency.completed_count = competency.completed_ids.length;
        competency.total_count = competency.requirement_ids.length;
        competency.progress = competency.completed_count / competency.total_count * 100;
        if (isNaN(competency.progress)) {
          competency.progress = 0;
        }
        competency.completed = competency.progress === 100;
        return competency.status = competency.progress === 100 ? 2 : competency.progress === 0 ? 0 : 1;
      });
      $.map($this.profiles, function(pro) {
        pro.completed_ids = [];
        pro.requirement_ids = [];
        pro.competencies = $.grep($this.competencies, function(competency) {
          if (pro.competency_ids.indexOf(competency.id) >= 0) {
            $.merge(pro.completed_ids, competency.completed_ids);
            $.merge(pro.requirement_ids, competency.requirement_ids);
            return true;
          }
          return false;
        });
        pro.completed_count = $this.unique(pro.completed_ids).length;
        pro.total_count = $this.unique(pro.requirement_ids).length;
        pro.progress = pro.completed_count / pro.total_count * 100;
        pro.progress = isNaN(pro.progress) ? 0 : Math.round(pro.progress);
        pro.completed = pro.progress === 100;
        return pro.status = pro.progress === 100 ? 2 : pro.progress === 0 ? 0 : 1;
      });
      return this;
    }
  };

}).call(this);
(function() {
  this.TwygoNetworkSearch = {
    initialize: function(contacts) {
      return TwygoMyNetwork.user_ul(contacts, "find_users");
    }
  };

}).call(this);
(function() {
  this.TwygoNotificationPopUp = {
    showNotification: function(id, eventName, message, url, contactFunction, btnLabel) {
      return document.getElementById(id).dispatchEvent(new CustomEvent(eventName, {
        detail: {
          message: message,
          url: url,
          contactFunction: contactFunction,
          btnLabel: btnLabel
        }
      }));
    }
  };

}).call(this);
(function() {
  this.TwygoOrganization = {
    currentTrackerId: null,
    initialize: function() {
      this.twitterFieldBinds();
      this.tableBinds();
      return $("input[name='commit']").click(function() {
        return $(this).off().on("click", function(e) {
          return safePreventEvent(e);
        });
      });
    },
    twitterFieldBinds: function() {
      var twitterNicknameField;
      twitterNicknameField = $("#organization_twitter_nickname");
      twitterNicknameField.data("originalValue", $.trim(twitterNicknameField.val()));
      return twitterNicknameField.keyup(function() {
        var originalValue, value;
        value = $.trim($(this).val());
        originalValue = $(this).data("originalValue");
        return $(".twauth").html(value === originalValue && value !== "" ? "(" + (I18n.t('already_authenticated')) + ")" : "");
      });
    },
    tableBinds: function() {
      return $(".open-details").click(function() {
        var link_open;
        link_open = $(this);
        return $("#table-info table").animate({
          width: 490
        }, 500, function() {
          $(".table-marker").removeClass("table-marker");
          link_open.addClass("table-marker");
          $("a.open-details").css("margin-left", "0px !important");
          $("#event-details").show();
          $("#ajax-loader").fadeIn("slow");
          return $("#ajax-result").html("").load("/o/1/load_details?event_id=1", function() {
            return $("#ajax-loader").hide();
          });
        });
      });
    },
    bindSearchInputs: function() {
      TwygoOrganization.removeEnterKey("partner_name");
      return $("#partner_name").on("input", function() {
        if ($.trim($(this).val()).length > 2) {
          return TwygoOrganization.triggerSearch();
        } else if ($.trim($(this).val()).length === 0) {
          return $(".partnerList").hide();
        } else {
          return TwygoOrganization.hideDetailsLoadingIndicator();
        }
      });
    },
    removeEnterKey: function(id) {
      return $("#" + id).on("keydown", function(e) {
        var keyCode;
        keyCode = (e.keyCode ? e.keyCode : (e.which ? e.which : e.charCode));
        if (keyCode === 13) {
          return false;
        }
      });
    },
    triggerSearch: function() {
      clearInterval(TwygoMyNetwork.searchTrigger);
      return TwygoMyNetwork.searchTrigger = setTimeout(TwygoOrganization.search, 350);
    },
    search: function() {
      var organizationName;
      organizationName = $.trim($("#partner_name").val());
      TwygoOrganization.showDetailsLoadingIndicator();
      return $.ajax({
        url: "/o/search",
        data: {
          name: organizationName,
          org: TwygoApplication.currentOrganizationId
        },
        dataType: 'json',
        type: 'post',
        success: function(response) {
          TwygoOrganization.hideDetailsLoadingIndicator();
          return TwygoOrganization.partnerLists(response);
        }
      });
    },
    partnerLists: function(response) {
      var j, len, ref, result, results;
      if (response.results.length === 0) {
        $(".partnerList").html($("<div id= 'partner_not_found'> <i class='fas fa-search'></i> <h5> " + (I18n.t("common.not_found")) + " </h3> </div"));
        return $(".partnerList").show();
      } else {
        $(".partnerList").html("<ul>");
        ref = response.results;
        results = [];
        for (j = 0, len = ref.length; j < len; j++) {
          result = ref[j];
          $(".partnerList ul").append("<li style='display:flex'> <div class='partner_image'> <img src='" + (TwygoEventManagement.logo_src(result)) + "'></img> </div> <div class='orgName' title='" + result.name + "'> <div>" + result.name + "</div> </div> <div id='addOrg' class='addOrg'> <a id='" + result.id + "' href='javascript:void(0)' class='btn btn-add ghost inline waves-effect' onClick='TwygoOrganization.addPartner(this, " + result.id + ", \"" + result.name + "\", \"" + (TwygoEventManagement.logo_src(result)) + "\");$(this).removeAttr(\"onclick\");'>" + (I18n.t('views.associate')) + "</a> </div> </li>");
          $("#" + result.id).data("result", result);
          results.push($(".partnerList").show());
        }
        return results;
      }
    },
    addPartner: function(element, id, name, logo) {
      safePreventEvent(element);
      TwygoOrganization.showDetailsLoadingIndicator();
      return $.ajax({
        url: "/o/" + TwygoApplication.currentOrganizationId + "/add_partner",
        data: {
          partner_id: "" + id
        },
        dataType: 'json',
        type: 'put',
        success: function(response) {
          var partner_row;
          if (response.ispartner) {
            partner_row = $("#partners-manager");
          } else {
            partner_row = $("#partner-rels");
          }
          TwygoOrganization.closeOrgList();
          $(partner_row).show();
          $(partner_row).find('.row').append("<div class='col-md-4 col-lg-3 partner-card'> <div class='organization box org_new' style='display:none'> <a class='close' href='#' onclick='TwygoOrganization.removePartner(this," + id + ")' title='" + (I18n.t("common.delete")) + "'> <img alt='" + (I18n.t("common.delete")) + "' class='delete' src='/assets/icons/admin/delete.png' title='" + (I18n.t("common.delete")) + "' /> </a> <span class='partners_logo' style='background-image: url(" + response.url + ")'> <img alt='Logo - " + name + "' class='orgLogo' src='" + response.url + "' title='Logo - " + name + "' /> </span> <span class='orgName' title='" + name + "'> " + name + " <a class='settings' href='/o/" + id + "/edit'><i class='icon-cog'></i></a> </span> </div> </div>");
          $(".org_new").fadeIn('slow');
          return TwygoOrganization.hideDetailsLoadingIndicator();
        }
      });
    },
    removePartner: function(element, id) {
      var answer, parent_row;
      safePreventEvent(element);
      answer = confirm(I18n.t("views.partners.are_you_sure_destroy"));
      if (answer) {
        TwygoOrganization.showDetailsLoadingIndicator();
        return $.ajax({
          url: "/o/" + TwygoApplication.currentOrganizationId + "/remove_partner",
          data: {
            partner_id: "" + id
          },
          dataType: 'json',
          type: 'delete',
          success: function(response) {}
        }, parent_row = $(element).closest('.row'), $(element).closest('.partner-card').remove(), TwygoOrganization.hidePartnerRow(parent_row), TwygoOrganization.hideDetailsLoadingIndicator());
      }
    },
    hidePartnerRow: function(parent_row) {
      if ($(parent_row).children().length === 0) {
        return $(parent_row).parent().hide();
      }
    },
    closeOrgList: function() {
      $(".partnerList").fadeOut("fast");
      return $("#partner_name").val("");
    },
    showDetailsLoadingIndicator: function() {
      return $(".loading-partner").fadeIn("fast");
    },
    hideDetailsLoadingIndicator: function() {
      return $(".loading-partner").fadeOut("fast");
    },
    partnerNotAllowed: function() {
      return TwygoFlashMessage.setMessage("alert", I18n.t("partner_not_allowed"));
    },
    manageImages: function() {
      return "/o/" + TwygoApplication.currentOrganizationId + "/images";
    },
    uploadCertificate: function(action) {
      return $("#org-certificate-upload > .field").upload_form({
        callback: function() {
          return $("#org-certificate-upload").twygomodal();
        },
        params: {
          action: action,
          param: "model[image_url]",
          success_action: "TwygoOrganization.changeCertificate",
          files_allowed: /(\.|\/)(pdf)$/i,
          files_allowed_error_msg: I18n.t("javascripts.certificate_must_be_in_pdf", {
            max_size: TwygoCommon.megabytes(2)
          })
        }
      });
    },
    changeCertificate: function(e, object) {
      $(".organization_form").find("#organization_certificate_id").val(object.id);
      $(".organization_form").find("#certificate-description").find(".name").text(object.name);
      $(".organization_form").find("#certificate-description").find(".size").text(object.size + " bytes");
      $(".organization_form").find("#certificate-description").find(".view-certificate").attr("href", object.path);
      $(".organization_form").find("#certificate-description").show();
      $(".organization_form :input[name*=certificate_params]").prop("disabled", false);
      return $.twygomodal.close();
    },
    removeCertificate: function() {
      $(".organization_form :input[name*=certificate_params]").prop("disabled", true);
      $(".organization_form").find("#organization_certificate_id").val("");
      return $(".organization_form").find("#certificate-description").hide();
    },
    uploadFavicon: function(action) {
      return $("#favicon-modal > .field").upload_form({
        callback: function() {
          return $("#favicon-modal").twygomodal();
        },
        params: {
          location: "organizations/" + TwygoApplication.currentOrganizationId + "/favicon/",
          action: action,
          param: "model[image_url]",
          success_action: "TwygoOrganization.changeFavicon",
          files_allowed: /(\.|\/)(png)$/i,
          privacy: 'public-read',
          files_allowed_error_msg: I18n.t("javascripts.favicon_must_be_png", {
            max_size: TwygoCommon.megabytes(0.5)
          })
        }
      });
    },
    changeFavicon: function(event, response) {
      TwygoApplication.loader();
      $('#favicon-description img').attr('src', response['img_url']);
      $('#favicon-description .name .text').text(response['name']);
      $('#favicon-description .size .text').text(response['size']);
      $('#favicon-description').removeClass('hidden');
      $('.remove-favicon').removeClass('hidden');
      $('#favicon-edit .manage-fivecon').text(I18n.t('views.organizations.change_favicon'));
      return TwygoApplication.loader();
    },
    removeFavicon: function() {
      if (confirm(I18n.t('views.organizations.are_you_sure_to_delete_favicon')) === false) {
        return;
      }
      TwygoApplication.loader();
      $('.remove-favicon').addClass('hidden');
      $('#favicon-description').addClass('hidden');
      return $.ajax({
        url: "/o/" + TwygoApplication.currentOrganizationId + "/delete_favicon",
        dataType: 'json',
        type: 'delete',
        success: function(response) {
          if (response['status'] === "success") {
            $('#favicon-description').addClass('hidden');
            $('#favicon-edit .manage-fivecon').text(I18n.t('views.organizations.add_favicon'));
            TwygoFlashMessage.setMessage("success", response['message']);
            return TwygoApplication.loader();
          } else {
            TwygoFlashMessage.setMessage("alert", response['message']);
            return TwygoApplication.loader();
          }
        }
      });
    },
    previewCertificate: function() {
      var params;
      params = {};
      $.each($(".organization_form :input[name*=certificate_params]"), function(i, field) {
        var $field;
        $field = $(field);
        if ($field.is("[type=checkbox]")) {
          return params[$field.attr("name")] = $field.is(":checked") ? 1 : 0;
        } else {
          return params[$field.attr("name")] = $field.val();
        }
      });
      params["template"] = $("#organization_certificate_id").val();
      return $.ajax({
        url: "/o/" + TwygoApplication.currentOrganizationId + "/preview_certificate",
        data: params,
        dataType: 'json',
        type: 'put'
      });
    },
    lockButtonSave: function() {
      return setTimeout((function() {
        $('.organization_form .save').addClass('locked');
        return $('.organization_form .save').prop('disabled', true);
      }), 1);
    },
    unlockButtonSave: function() {
      $('.organization_form .save').removeClass('locked');
      return $('.organization_form .save').prop('disabled', false);
    },
    onDestroyPixel: function(id) {
      var loadingBox, loadingClass;
      loadingClass = 'ajax-loading';
      loadingBox = '.inner-box';
      return $.ajax({
        url: "/o/" + TwygoApplication.currentOrganizationId + "/trackers/" + id,
        type: "DELETE",
        beforeSend: function() {
          return $('#pixel-lists').find(loadingBox).addClass(loadingClass);
        },
        error: function(response) {
          return TwygoFlashMessage.setMessage("error", I18n.t('organization_trackers.messages.fail.delete'));
        },
        success: function(response) {
          $('#pixels').html(response);
          return TwygoFlashMessage.setMessage("success", I18n.t('organization_trackers.messages.success.delete'));
        },
        complete: function() {
          return $('#pixel-form').find(loadingBox).removeClass(loadingClass);
        }
      });
    },
    onSavePixels: function(identifier, code) {
      var createUrl, editUrl, loadingBox, loadingClass, url;
      loadingClass = 'ajax-loading';
      loadingBox = '.inner-box';
      editUrl = "/o/" + TwygoApplication.currentOrganizationId + "/trackers/" + TwygoOrganization.currentTrackerId;
      createUrl = "/o/" + TwygoApplication.currentOrganizationId + "/trackers";
      url = TwygoOrganization.currentTrackerId === null ? createUrl : editUrl;
      return $.ajax({
        url: url,
        data: {
          tracker: {
            code: code,
            identifier: identifier,
            id: TwygoOrganization.currentTrackerId
          }
        },
        type: TwygoOrganization.currentTrackerId === null ? 'POST' : 'PUT',
        beforeSend: function() {
          return $('#pixel-form').find(loadingBox).addClass(loadingClass);
        },
        success: function(response) {
          TwygoFlashMessage.setMessage("success", I18n.t('organization_trackers.messages.success.create'));
          $('#pixel-form').fadeOut();
          return $('#pixels').html(response);
        },
        error: function(response) {
          var element, errors, item, j, len, message, ref, results;
          if (response.status === 422) {
            errors = response.responseJSON;
            ref = Object.keys(errors);
            results = [];
            for (j = 0, len = ref.length; j < len; j++) {
              item = ref[j];
              element = I18n.t("activerecord.attributes.organization_tracker." + item);
              message = element + " " + errors[item];
              results.push(TwygoFlashMessage.setMessage("error", message));
            }
            return results;
          } else {
            return TwygoFlashMessage.setMessage("error", I18n.t('organization_trackers.messages.fail.create'));
          }
        },
        complete: function() {
          $('#identifier').val('');
          $('#tracker-code').val('');
          return $('#pixel-form').find(loadingBox).removeClass(loadingClass);
        }
      });
    }
  };

}).call(this);
(function() {
  this.TwygoOrganizationAutenticate = {
    initialize: function() {
      return this.formSubmit();
    },
    generateSecrete: function() {
      var organization_id;
      organization_id = TwygoApplication.currentOrganizationId;
      return $.ajax({
        url: "/o/" + organization_id + "/organization_secrets/refresh_secret.json",
        dataType: 'json',
        type: 'GET',
        beforeSend: function() {
          return $('#new_organization_secret').find('.loading-content > loading').fadeIn();
        },
        success: function(response) {
          $('#organization_secret_secret').val(response.secret);
          return TwygoFlashMessage.setMessage("success", response.msg);
        },
        complete: function() {
          return $('#new_organization_secret').find('.loading-content > loading').fadeOut();
        }
      });
    },
    formSubmit: function() {
      $(".secret_key_form").on("ajax:beforeSend", function() {
        return $(".secret_key_form").addClass("ajax-loading");
      });
      $(".secret_key_form").on("ajax:success", function(e, response) {
        return TwygoFlashMessage.setMessage("success", response.msg);
      });
      $(".secret_key_form").on("ajax:error", function(e, response) {
        return TwygoFlashMessage.setMessage("error", response.responseJSON.msg);
      });
      return $(".secret_key_form").on("ajax:complete", function() {
        return $(".secret_key_form").removeClass("ajax-loading");
      });
    }
  };

}).call(this);
(function() {
  this.TwygoOrganizationFilter = {
    initialize: function(query, filters) {
      if (filters.city !== void 0) {
        this.city = filters.city[0];
      }
      $('#schedule-city-filter').val(this.city);
      this.query = query;
      $('#schedule-query').val(this.query);
      return this.filterBinds();
    },
    filterBinds: function() {
      $('#schedule-city-filter').change(function() {
        TwygoOrganizationFilter.city = $(this).val();
        return TwygoOrganizationFilter.triggerFilter();
      });
      return $("#schedule-query").keyup(function() {
        if (TwygoOrganizationFilter.query !== $.trim($(this).val())) {
          TwygoOrganizationFilter.query = $.trim($(this).val());
          return TwygoOrganizationFilter.triggerFilter();
        }
      });
    },
    triggerFilter: function() {
      clearInterval(this.filterTrigger);
      return this.filterTrigger = setTimeout(TwygoOrganizationFilter.filter, 350);
    },
    filter: function() {
      var container, loadMore;
      if (TwygoOrganizationFilter.request && TwygoOrganizationFilter.request.state() !== 'resolved') {
        TwygoOrganizationFilter.request.abort();
      }
      window.$currentQueryString = TwygoOrganizationFilter.query;
      window.$currentFacetFilters = TwygoOrganizationFilter.city !== '' ? {
        city: [TwygoOrganizationFilter.city]
      } : void 0;
      loadMore = $('.more-results');
      container = $(loadMore.attr('data-output') + '> .events');
      $(document).append(loadMore);
      container.empty();
      container.append(loadMore);
      TwygoPaginator.hideMoreResultsLoadingIndicator(loadMore);
      TwygoPaginator.showMoreResultsLoadingIndicator(loadMore);
      loadMore.show();
      return TwygoOrganizationFilter.request = $.ajax(loadMore.attr('data-url'), {
        data: {
          q: $currentQueryString,
          page: 1,
          facet_filters: $currentFacetFilters
        },
        method: 'get',
        success: function(results) {
          loadMore = $('.more-results');
          if (results !== '0') {
            container.append(results);
          } else {
            container.append($('<div>', {
              'class': 'no-results'
            }).append(I18n.t('views.no_results_filters')));
          }
          container.append(loadMore);
          loadMore.data("currentResultsPage", 1);
          if ($("#cannot-show-more-results", container).size() > 0 || results === '0') {
            loadMore.hide();
          } else {
            loadMore.show();
          }
          return TwygoPaginator.hideMoreResultsLoadingIndicator(loadMore);
        }
      });
    }
  };

}).call(this);
(function() {
  this.TwygoOrganizationScope = {
    initialize: function(organizations) {
      this.organizations = organizations;
      this.createOrganizationMenu();
      return this.bindEvents();
    },
    bindEvents: function() {
      var toggleMenu;
      toggleMenu = function(toggleSelector, targetSelector) {
        return $(toggleSelector).click(function() {
          var $organizationScopeMenu;
          $organizationScopeMenu = $("#organization_scope_menu");
          $organizationScopeMenu.css("top", $("#top").height()).css("left", $(targetSelector).offset().left);
          if ($organizationScopeMenu.is(":visible")) {
            return $organizationScopeMenu.slideUp();
          } else {
            $organizationScopeMenu.slideDown();
            return setTimeout(function() {
              return $organizationScopeMenu.addClass("hideOnClickOut");
            }, 100);
          }
        });
      };
      toggleMenu("#mobile-menu-toggle", "#mobile-logo-topbar");
      return toggleMenu("#menu-toggle", "#logo");
    },
    check_login_user_limit: function(_org_id, e) {
      return $.ajax({
        url: "/o/" + _org_id + "/check_login_user_limit",
        dataType: 'json',
        type: "get",
        success: function(response) {
          if ($(e.target).is(".org-link") || $(e.target).parents(".org-link").length > 0) {
            return;
          }
          $("#organization_scope_menu").removeClass("hideOnClickOut").hide();
          return window.location.href = "/select_scope/" + _org_id;
        },
        error: function(error) {
          var contactText, errorMessage, message, supportFunction, supportUrl;
          errorMessage = error.responseJSON;
          message = errorMessage.message;
          supportUrl = errorMessage.url_support;
          supportFunction = errorMessage.function_support;
          contactText = errorMessage.contact_text;
          return TwygoNotificationPopUp.showNotification('plan_sub_notification_modal', 'opennotificationmodal', "" + message, "" + supportUrl, "" + supportFunction, "" + contactText);
        }
      });
    },
    createOrganizationMenu: function() {
      var $img, i, i18nTitle, len, li, list, menu, org, ref;
      if (this.organizations.length <= 0) {
        $("#menu-toggle").addClass("hidden");
      }
      if (this.organizations.length <= 0) {
        $("#logo").addClass("offline");
      }
      if (this.organizations.length <= 0) {
        return;
      }
      menu = $("<div id='organization_scope_menu'>");
      menu.hide();
      list = $("<ul>");
      ref = this.organizations;
      for (i = 0, len = ref.length; i < len; i++) {
        org = ref[i];
        $img = $("<img src='" + org.logo_path + "' />");
        li = $("<li>").attr("org_id", "" + org.id);
        li.append($("<div>").addClass("org-logo").append($img));
        li.append($("<div>").addClass("org-text").text(org.name));
        if (org.status === 1) {
          i18nTitle = I18n.t("inactive_organization");
          li.append($("<div title='" + i18nTitle + "'>").addClass("org-link inactive").append($("<img alt='" + i18nTitle + "' width='15px' src='/assets/icons/forbidden.png'>")));
        }
        if (org.admin) {
          li.append($("<div title='" + I18n.t("menu.management") + "'>").addClass("org-link admin").append($("<div class='icon'>")));
          li.append($("<div title='" + I18n.t("menu.events") + "'>").addClass("org-link view").append($("<div class='icon'>")));
        } else {
          li.append($("<div title='" + I18n.t("menu.events") + "'>").addClass("org-link view").append($("<div class='icon'>")));
        }
        list.append(li);
      }
      $(list).find("li").click(function(e) {
        var _org_id;
        _org_id = $(this).attr("org_id");
        return $.ajax({
          url: "/api/v1/o/" + _org_id + "/available_organizations/check_access_to_organization",
          dataType: 'json',
          type: "get",
          success: function(response) {
            return TwygoOrganizationScope.check_login_user_limit(_org_id, e);
          },
          error: function(error) {
            var errorData;
            errorData = Object.assign({}, error.responseJSON, {
              translate: {
                orgChangePasswordTitle: I18n.t('confirmation_password_modal.organization_change_password_title'),
                userPasswordLabel: I18n.t('confirmation_password_modal.user_password_label'),
                forgotPasswordLink: I18n.t('confirmation_password_modal.forgot_password_link'),
                signInButton: I18n.t('confirmation_password_modal.sign_in_button')
              }
            });
            return TwygoConfirmationOrganizationPassword.showConfirmation('confirmation_organization_password_modal', 'open-confirmation-password', errorData);
          }
        });
      });
      $(list).find(".org-link").click(function() {
        $("#organization_scope_menu").removeClass("hideOnClickOut").hide();
        if ($(this).hasClass("admin")) {
          return window.location.href = "/o/" + ($(this).parent().attr("org_id")) + "/events?tab=events";
        } else {
          return window.location.href = "/o/" + ($(this).parent().attr("org_id"));
        }
      });
      menu.append(list);
      return $("body").append(menu);
    }
  };

}).call(this);
(function() {
  this.TwygoPaginator = {
    initialize: function(bundle) {
      var key, results1, value;
      $("div.more-results.paginator").on("click", this.loadMoreResults);
      results1 = [];
      for (key in bundle) {
        value = bundle[key];
        results1.push(TwygoPaginator[key] = value);
      }
      return results1;
    },
    loadMoreResults: function() {
      var currentResultsPage, element, p;
      element = $(this);
      (p = TwygoPaginator).showMoreResultsLoadingIndicator(element);
      if (!window.$currentQueryString) {
        window.$currentQueryString = "";
      }
      if (!window.$currentFacetFilters) {
        window.$currentFacetFilters = void 0;
      }
      currentResultsPage = element.data("currentResultsPage") || 1;
      return $.get(element.attr("data-url"), {
        q: $currentQueryString,
        facet_filters: $currentFacetFilters,
        page: currentResultsPage + 1,
        ghosts: p.ghosts(element)
      }, function(results) {
        var container;
        container = element.attr("data-container");
        if (results !== TwygoPaginator.noResults) {
          $(".separator").last().after(results);
          element.data("currentResultsPage", currentResultsPage + 1);
        }
        if ($("#cannot-show-more-results", container).size() > 0) {
          element.hide();
        }
        return p.hideMoreResultsLoadingIndicator(element);
      }, 'html');
    },
    showMoreResultsLoadingIndicator: function(element) {
      this.moreResultsContent = element.html();
      element.html($("<img>", {
        src: TwygoApplication.assets.ajaxLoader,
        css: {
          "margin-top": "5px"
        }
      }));
      return element.append($("<span>", {
        css: {
          "margin-left": "5px",
          'top': '-3px',
          'position': 'relative'
        }
      }).append(I18n.t('views.loading')));
    },
    hideMoreResultsLoadingIndicator: function(element) {
      return element.html(this.moreResultsContent);
    },
    ghosts: function(element) {
      return $($.trim(element.attr("data-item-selector")) + ".ghost:visible").size();
    }
  };

}).call(this);
(function() {
  this.TwygoPartners = {
    openModal: function(plan_code, plan_id) {
      $('#add-partner-modal').fadeIn();
      return $('#add-partner-modal').find('.close').on('click', function() {
        $('#add-partner-modal').fadeOut();
        return TwygoPartners.resetInformation();
      });
    },
    ajaxEvents: function() {
      $('#organization_partners_form').bind("ajax:beforeSend", function() {});
      return $('#organization_partners_form').bind("ajax:success", function(e, response) {});
    },
    ajaxResponse: function(message, status) {
      if (status === 500) {
        return TwygoFlashMessage.setMessage("error", message);
      } else {
        TwygoFlashMessage.setMessage("success", message);
        TwygoPartners.resetInformation();
        return setTimeout(function() {
          return location.reload();
        }, 1000);
      }
    },
    resetInformation: function() {
      $('#organization_partners_form').reset();
      $('#add-partner-modal').find('.img-preview').fadeOut('fast');
      $('#add-partner-modal').find('.icon-picture-o').fadeIn();
      return $('#organization_partners_form').find(".form-row").each(function() {
        $(this).find('#fielderror').remove();
        return $(this).find('input').removeClass('error');
      });
    },
    formValidation: function() {
      var email_partner, name_partner, ref, ref1;
      $('#organization_partners_form').find(".form-row").each(function() {
        $(this).find('#fielderror').remove();
        return $(this).find('input').removeClass('error');
      });
      name_partner = (ref = $('#organization_name').val() === "") != null ? ref : {
        "true": false
      };
      email_partner = (ref1 = $('#organization_email').val() === "") != null ? ref1 : {
        "true": false
      };
      if (name_partner) {
        $('#organization_name').addClass('error');
        $('#organization_name').parent().append("<div id='fielderror' class='error'>" + (I18n.t('javascripts.required_field')) + "</div>");
      }
      if (email_partner) {
        $('#organization_email').addClass('error');
        $('#organization_email').parent().append("<div id='fielderror' class='error'>" + (I18n.t('javascripts.required_field')) + "</div>");
      }
      if (name_partner || email_partner) {
        return false;
      }
    },
    cancelButton: function() {
      $('#add-partner-modal').fadeOut();
      return TwygoPartners.resetInformation();
    }
  };

}).call(this);
(function() {
  this.TwygoPaymentsCheckout = {
    _wizard: '',
    _pagseguro: {
      url: 'https://ws.pagseguro.uol.com.br',
      buyer_id: '',
      brand: '',
      client_ip: '',
      plan_id: '',
      plan_code: '',
      session: '',
      token: '',
      status: false
    },
    __user: false,
    __card: null,
    initialize: function(_session, _ip, _user_id, is_development) {
      if (is_development) {
        TwygoPaymentsCheckout._pagseguro.url = "https://ws.sandbox.pagseguro.uol.com.br";
      }
      this.__user = _user_id;
      this._pagseguro.session = _session;
      this._pagseguro.client_ip = _ip;
      this.stepsPluginInit();
      this.getAddressCEP();
      this.getCardBrand();
      PagSeguroDirectPayment.setSessionId(_session);
      return TwygoUtility.emailVerify($('#personal-email'));
    },
    stepsPluginInit: function() {
      return TwygoPaymentsCheckout._wizard = $("#payment-checkout").find('.steps-container').steps({
        headerTag: "h3",
        bodyTag: "section",
        transitionEffect: "slideLeft",
        autoFocus: true,
        titleTemplate: '<span class="index">#index#</span><span>#title#</span>',
        labels: {
          finish: I18n.t('start_using'),
          next: I18n.t('common.next'),
          previous: I18n.t('common.prev'),
          loading: I18n.t('views.loading')
        },
        onInit: function(event, currentIndex) {
          TwygoPaymentsCheckout.cardPreview();
          TwygoUtility.phoneValidationAndMask($("#personal-phone"));
          $("#personal-document").mask("000.000.000-00");
          $("#card-birthDate").mask("00/00/0000");
          return $("#personal-address_postalCode").mask("00.000-000");
        },
        onStepChanging: function(event, currentIndex, newIndex) {
          var _required;
          _required = 0;
          if (newIndex < currentIndex) {
            return true;
          }
          if (currentIndex === 0) {
            return TwygoPaymentsCheckout.validatonPerson();
          }
          if (currentIndex === 1) {
            if (TwygoPaymentsCheckout.validatonPayment()) {
              TwygoPaymentsCheckout.getCardRequestToken();
              return setTimeout(function() {
                return true;
              }, 2000);
            } else {
              return false;
            }
          }
        },
        onStepChanged: function(event, currentIndex, priorIndex) {
          if (currentIndex === 1) {
            TwygoPaymentsCheckout.getBuyerIdPagSeguro();
            $('a[href="#next"]').text(I18n.t('common.confirm_purchase'));
          } else {
            $('a[href="#next"]').text(I18n.t('common.next'));
          }
          return true;
        },
        onFinishing: function() {
          if (TwygoPaymentsCheckout._pagseguro.status) {
            window.location.href = '/users/edit';
            return true;
          } else {
            return false;
          }
        }
      });
    },
    validatonPerson: function() {
      $('#personal-data').find('.required').each(function(e, i) {
        if ($(this).val().length === 0) {
          return $(this).addClass('error');
        } else {
          return $(this).removeClass('error');
        }
      });
      TwygoUtility.validationCPF($('#personal-document'));
      TwygoUtility.emailValidate($('#personal-email'));
      if (TwygoPaymentsCheckout.__user === '0') {
        TwygoPaymentsCheckout.registerUser();
      }
      return $('#personal-data').find('.required.error').length === 0 && $('#payment-data').find('.onerror').length === 0;
    },
    validatonPayment: function() {
      $('#payment-data').find('.required').each(function(e, i) {
        if ($(this).val().length === 0) {
          return $(this).addClass('error');
        } else {
          return $(this).removeClass('error');
        }
      });
      TwygoPaymentsCheckout.validationCardNumber();
      TwygoPaymentsCheckout.validationDateExpiration();
      TwygoPaymentsCheckout.validationBirthDate();
      TwygoPaymentsCheckout.validationCVC();
      return $('#payment-data').find('.required.error').length === 0;
    },
    cardPreview: function() {
      return TwygoPaymentsCheckout.__card = new Card({
        form: '#payment-data',
        container: '#js-card',
        formSelectors: {
          numberInput: 'input#card-number',
          expiryInput: 'input#card-expiration',
          cvcInput: 'input#card-cvc',
          nameInput: 'input#card-name'
        },
        placeholders: {
          name: I18n.t('cardholder_name')
        }
      });
    },
    registerUser: function() {
      if (!$('#personal-email').hasClass('onerror') && !$('#personal-email').hasClass('logged')) {
        return $.ajax({
          url: "/plans/create_user",
          data: {
            user: {
              email: $('#personal-email').val(),
              name: $('#personal-name').val(),
              cpf: $('#personal-document').val(),
              phone: $('#personal-phone').val(),
              postalCode: $('#personal-address_postalCode').val(),
              number: $('#personal-address_number').val(),
              street: $('#personal-address_street').val(),
              district: $('#personal-address_district').val(),
              complement: $('#personal-address_complement').val(),
              city: $('#personal-address_city').val(),
              state: $('#personal-address_state').val(),
              country: $('#personal-address_country').val()
            }
          },
          type: 'POST',
          dataType: 'json',
          beforeSend: function() {
            return $('.modal-new').find('.inner-box').addClass('ajax-loading');
          },
          success: function(response, textStatus, jqXHR) {
            $('.modal-new').find('.inner-box').removeClass('ajax-loading');
            return TwygoPaymentsCheckout.__user = response.id;
          },
          error: function(jqXHR, textStatus, errorThrown) {
            $('.modal-new').find('.inner-box').removeClass('ajax-loading');
            return TwygoPaymentsCheckout._wizard.steps('previous');
          }
        });
      } else {
        return false;
      }
    },
    getPaymentInfo: function() {
      return {
        plan: TwygoPaymentsCheckout._pagseguro.plan_code,
        reference: "PLAN-00",
        sender: {
          name: $('#personal-name').val(),
          email: $('#personal-email').val(),
          ip: TwygoPaymentsCheckout._pagseguro.client_ip,
          hash: TwygoPaymentsCheckout._pagseguro.buyer_id,
          phone: TwygoPaymentsCheckout.setPersonPhone(),
          document: {
            type: 'CPF',
            value: TwygoPaymentsCheckout.setPersonDocument()
          },
          address: TwygoPaymentsCheckout.setPersonAddres()
        },
        payment_method: {
          token: $('#card-token').val(),
          holder: {
            name: $('#card-name').val(),
            birth_date: $('#card-birthDate').val(),
            document: {
              type: 'CPF',
              value: TwygoPaymentsCheckout.setPersonDocument()
            },
            billing_address: TwygoPaymentsCheckout.setPersonAddres(),
            phone: TwygoPaymentsCheckout.setPersonPhone()
          }
        }
      };
    },
    setPersonPhone: function() {
      var _match, _phone, _regex;
      _regex = /\((\d{2})\)\s(\d*.*)/gm;
      _phone = $('#personal-phone').val();
      _match = _regex.exec(_phone);
      return {
        area_code: _match[1].replace(/\D/g, ''),
        number: _match[2].replace(/\D/g, '')
      };
    },
    setPersonAddres: function() {
      return {
        street: $('#personal-address_street').val(),
        number: $('#personal-address_number').val(),
        complement: $('#personal-address_complement').val(),
        district: $('#personal-address_district').val(),
        city: $('#personal-address_city').val(),
        state: $('#personal-address_state').val(),
        country: 'BRA',
        postal_code: $('#personal-address_postalCode').val().replace(/\D/g, '')
      };
    },
    setPersonDocument: function() {
      return $('#personal-document').val().replace(/\D/g, '');
    },
    setAddresInput: function(address) {
      $('#personal-address_street').val(address.logradouro);
      $('#personal-address_district').val(address.bairro);
      $('#personal-address_city').val(address.localidade);
      return $('#personal-address_state').val(address.uf);
    },
    getAddressCEP: function() {
      $('#personal-address_postalCode').not('complet').on('focusout', function(e) {
        return TwygoUtility.searchByCEP($(this), TwygoPaymentsCheckout.setAddresInput);
      });
      return $('#personal-address_postalCode').not('complet').on('keypress', function(e) {
        if (e.which === 13) {
          return TwygoUtility.searchByCEP($(this), TwygoPaymentsCheckout.setAddresInput);
        }
      });
    },
    getBuyerIdPagSeguro: function() {
      return PagSeguroDirectPayment.onSenderHashReady(function(response) {
        if (response.status === 'error') {
          return false;
        }
        return TwygoPaymentsCheckout._pagseguro.buyer_id = response.senderHash;
      });
    },
    openPayment: function(plan_code, plan_id) {
      TwygoPaymentsCheckout._pagseguro.plan_code = plan_code;
      TwygoPaymentsCheckout._pagseguro.plan_id = plan_id;
      TwygoPaymentsCheckout.getPlanInfor(plan_id);
      $('#payment-checkout').fadeIn();
      return $('#payment-checkout').find('.close').on('click', function() {
        $('#payment-checkout').fadeOut();
        return TwygoPaymentsCheckout.resetInformation();
      });
    },
    openDetails: function(plan_code, plan_id) {
      TwygoPaymentsCheckout._pagseguro.plan_code = plan_code;
      TwygoPaymentsCheckout._pagseguro.plan_id = plan_id;
      TwygoPaymentsCheckout.getPlanInfor(plan_id);
      $('#payment-details').fadeIn();
      return $('#payment-details').find('.close').on('click', function() {
        $('#payment-details').fadeOut();
        return TwygoPaymentsCheckout.resetInformation();
      });
    },
    getPlanInfor: function(plan_id) {
      return $.ajax({
        url: "/plan/" + plan_id + "/infor.json",
        type: 'GET',
        dataType: 'json',
        beforeSend: function() {
          return $('.modal-new').find('.inner-box').addClass('ajax-loading');
        },
        success: function(response, textStatus, jqXHR) {
          return TwygoPaymentsCheckout.setInformation(response.infor);
        },
        error: function(jqXHR, textStatus, errorThrown) {},
        complete: function() {
          return $('.modal-new').find('.inner-box').removeClass('ajax-loading');
        }
      });
    },
    resetInformation: function() {
      $('.infor-name').text('');
      $('.infor-value').text('');
      $('.list-course--inner').html('');
      $('.infor-description').html('');
      return $('#plan-ref').val('');
    },
    setInformation: function(infor) {
      numeral.locale('pt-BR');
      $('.infor-name').text(infor.name);
      $('.infor-value').text(numeral(parseFloat(infor.value)).format('$ 0,0.00'));
      $('.infor-description').html(infor.description);
      $('#plan-ref').val(infor.ref);
      return $.each(infor.courses, function(i, c) {
        var __html;
        __html = "<div class='col-md-6'>\n  <div class='item'>\n    <h4>" + c.name + "</h4>\n    <!-- <a href='/e/" + c.permalink + "' target='_blank' class='btn btn-primary ghost inline'>\n      " + (I18n.t('view_courses')) + "\n    </a> -->\n  </div>\n</div>";
        return $('.list-course--inner').append(__html);
      });
    },
    getCardRequestToken: function() {
      var _expiration, resp;
      $('#payment-data').addClass('loading');
      $('#payment-congradularion').addClass('loading');
      $('.actions').find('[href="#finish"]').closest('li').addClass('disabled').attr('aria-disabled', true);
      _expiration = TwygoPaymentsCheckout.dateExpirationNormalize();
      return resp = PagSeguroDirectPayment.createCardToken({
        cardNumber: $('#card-number').val().replace(/\D/g, ''),
        brand: TwygoPaymentsCheckout._pagseguro.brand,
        cvv: $('#card-cvc').val().replace(/\D/g, ''),
        expirationMonth: _expiration.month,
        expirationYear: _expiration.year,
        success: function(response) {
          $('#card-token').val(response.card.token);
          return TwygoPaymentsCheckout.requestAccessionPlan();
        },
        error: function(response) {
          $('#payment-data').find('.alert').addClass('alert-error').html(I18n.t('error_credit_card')).fadeIn();
          return setTimeout(function() {
            TwygoPaymentsCheckout._wizard.steps('previous');
            return $('#payment-data').removeClass('loading');
          }, 1500);
        },
        complete: function(response) {
          return setTimeout(function() {
            return $('#payment-data').removeClass('loading');
          }, 2000);
        }
      });
    },
    validationDateExpiration: function() {
      var _value;
      _value = $('#card-expiration').val().replace(/\D/g, '');
      if (_value.length < 6) {
        return $('#card-expiration').addClass('error');
      } else {
        return $('#card-expiration').removeClass('error');
      }
    },
    validationCVC: function() {
      var _value;
      _value = $('#card-cvc').val().replace(/\D/g, '');
      if (_value.length < 3) {
        return $('#card-cvc').addClass('error');
      } else {
        return $('#card-cvc').removeClass('error');
      }
    },
    validationBirthDate: function() {
      var _value;
      _value = $('#card-birthDate').val().replace(/\D/g, '');
      if (_value.length < 8) {
        return $('#card-birthDate').addClass('error');
      } else {
        return $('#card-birthDate').removeClass('error');
      }
    },
    validationCardNumber: function() {
      var _value;
      _value = $('#card-number').val().replace(/\D/g, '');
      if (_value.length < 16) {
        return $('#card-number').addClass('error');
      } else {
        return $('#card-number').removeClass('error');
      }
    },
    dateExpirationNormalize: function() {
      var _date, _match, _regex;
      _regex = /(\d{2})\s\/\s(\d{4})/gm;
      _date = $('#card-expiration').val();
      _match = _regex.exec(_date);
      return {
        month: _match[1].replace(/\D/g, ''),
        year: _match[2].replace(/\D/g, '')
      };
    },
    getCardBrand: function() {
      return $('#card-number').on('keyup', function(e) {
        var __params, _bin;
        _bin = $(this).val().replace(/\D/g, '');
        if (_bin.length === 6) {
          __params = {
            cardBin: _bin,
            success: function(response) {
              TwygoPaymentsCheckout._pagseguro.brand = response.brand.name;
              return $('#card-number').removeClass('error');
            },
            error: function(response) {
              if (TwygoPaymentsCheckout.__card.cardType === 'unknown') {
                alert(I18n.t('error_validate_card'));
                return $('#card-number').addClass('error').val('');
              } else {
                return TwygoPaymentsCheckout._pagseguro.brand = TwygoPaymentsCheckout.__card.cardType;
              }
            }
          };
          return PagSeguroDirectPayment.getBrand(__params);
        }
      });
    },
    requestAccessionPlan: function() {
      var __params;
      $('#payment-congradularion').find('.payment-response.alert').html('');
      $('.actions').find('[href="#finish"]').closest('li').addClass('disabled').attr('aria-disabled', true);
      TwygoPaymentsCheckout._pagseguro.status = false;
      __params = TwygoPaymentsCheckout.getPaymentInfo();
      return $.ajax({
        url: "/plans/subscribe",
        data: {
          payment: __params,
          plan_id: TwygoPaymentsCheckout._pagseguro.plan_id
        },
        type: 'POST',
        dataType: 'json',
        success: function(response, textStatus, jqXHR) {
          if (response.type === 'success') {
            TwygoPaymentsCheckout._pagseguro.status = true;
            $('#payment-congradularion').find('.payment-response.alert').addClass('alert-success').removeClass('hidden alert-error');
            $('.actions').find('[href="#finish"]').closest('li').removeClass('disabled').removeAttr('aria-disabled');
          } else {
            $('#payment-congradularion').find('.payment-response.alert').addClass('alert-error').removeClass('hidden alert-error');
          }
          return $('#payment-congradularion').find('.payment-response.alert').html(response.msg);
        },
        error: function(jqXHR, textStatus, errorThrown) {
          $('#payment-congradularion').find('.payment-response').addClass('alert-error').removeClass('hidden alert-sucess');
          return $('#payment-congradularion').find('.payment-response').html(jqXHR.responseJSON.msg);
        },
        complete: function(response) {
          return setTimeout(function() {
            $('#payment-congradularion').removeClass('loading');
            $('#payment-data').removeClass('loading');
            if (TwygoPaymentsCheckout.__user !== '0' && !$('#personal-email').hasClass('logged')) {
              return $('#payment-congradularion').find('.register.alert').removeClass('hidden');
            }
          }, 2000);
        }
      });
    }
  };

}).call(this);
(function() {
  this.TwygoPayments = {
    path: '',
    course_html: '',
    user_html: '',
    organization_id: 0,
    coursesList: [],
    courseListHidden: [],
    is_load_plans: true,
    is_load_users: true,
    plan_id: 0,
    initialize: function(organization_id) {
      $("#payment-tabs").tabs();
      this.organization_id = organization_id;
      this.path = "/o/" + organization_id;
      this.loadPlanPagseguro();
      this.toggleModal();
      this.editPlanTarget();
      this.submitFormConfiguration();
      this.course_html = $('#course_item').html();
      this.user_html = $('#users_item').html();
      return TwygoHistory.init();
    },
    initPlan: function(organization_id, plan_id) {
      this.organization_id = organization_id;
      this.path = "/o/" + organization_id;
      this.is_load_plans = true;
      this.plan_id = plan_id;
      this.getPlanCourses(plan_id);
      this.getPlanUser(plan_id);
      this.autocompletCourse();
      this.autocompletUser();
      this.formActions();
      this.course_html = $('#course_item').html();
      this.user_html = $('#users_item').html();
      TwygoApplication.closeAlert();
      TwygoCommon.previewAvatar();
      return $("#plan-tabs").tabs();
    },
    CKLoad: function() {
      return TwygoRichText.initialize(["payment_plan_description_details", 'payment_plan_excerpt'], {
        filebrowserImageBrowseUrl: TwygoOrganization.manageImages,
        resize_enabled: false,
        height: '450px',
        toolbars: [
          {
            name: 'insert',
            items: ['Table']
          }, {
            name: 'links',
            items: ['Link', 'Unlink']
          }
        ]
      });
    },
    backIndex: function() {
      var __url;
      __url = this.path + "/payments/";
      $('#details').addClass('ajax-loading');
      $('.autocomplet--list').fadeOut();
      return $("#details").load(__url, function(response) {
        $('#details').html(response);
        $('#details').removeClass('ajax-loading');
        return history.pushState({
          action: 'index'
        }, 'Lista de Planos', __url);
      });
    },
    formActions: function() {
      $("form.plan-form").on('ajax:beforeSend', function() {
        return $("form.plan-form").addClass('ajax-loading');
      });
      return $("form.plan-form").on('ajax:complete', function(event, xhr, settings) {
        var response;
        response = xhr.responseJSON;
        TwygoFlashMessage.setMessage(response.type, response.msg);
        return $("form.plan-form").removeClass('ajax-loading');
      });
    },
    toggleModal: function() {
      $("#add-plan").on('click', function() {
        $('#plans-modaladd').fadeIn('fast');
        return $('#plans-modaladd').find('.inner-box').delay(500).addClass('show');
      });
      return $('#plans-modaladd .close').on('click', function() {
        $('#plans-modaladd').find('.inner-box').removeClass('show');
        return $('#plans-modaladd').delay(500).fadeOut('fast');
      });
    },
    loadShowPlan: function(plan_id) {
      var __url;
      __url = this.path + "/payments/plan/" + plan_id + "/";
      $('#details').addClass('ajax-loading');
      return $("#details").load(__url, function(response) {
        $('#details').html(response);
        $('#details').removeClass('ajax-loading');
        return TwygoPayments.CKLoad();
      });
    },
    editPlanTarget: function() {},
    autocompletCourse: function() {
      $('.autocomplet--list').fadeOut();
      $('.autocomplet--list').find('.btn-cancel').on('click', function() {
        return $('.autocomplet--list').fadeOut();
      });
      return $('#courses_name').on('input', function() {
        var _value;
        _value = $(this).val();
        if (_value.length > 3) {
          TwygoPayments.courseListExecute(_value);
          return $('#rel-cursos').find('.autocomplet--list').fadeIn();
        } else {
          return $('#rel-cursos').find('.autocomplet--list').fadeOut();
        }
      });
    },
    autocompletUser: function() {
      return $('#user_name').on('keyup', function() {
        var _value;
        _value = $.trim($("#user_name").val());
        if (_value.length > 3) {
          return $.ajax({
            url: "/users/search/?organization_id=" + TwygoPayments.organization_id,
            data: {
              q: _value
            },
            dataType: 'json',
            type: 'get',
            async: false,
            success: function(response) {
              TwygoPayments.userListLoop(response.users, 'add', '.users-list');
              return $('#rel-users').find('.autocomplet--list').fadeIn();
            }
          });
        } else {
          return $('#rel-users').find('.autocomplet--list').fadeOut();
        }
      });
    },
    courseListExecute: function(_value) {
      var new_list;
      if (TwygoPayments.coursesList.length > 0) {
        new_list = TwygoPayments.courseListFilter(TwygoPayments.coursesList, _value);
        return TwygoPayments.courseListLoop(new_list, 'add', '.courses-list');
      } else {
        return TwygoPayments.getCoursesList(_value);
      }
    },
    courseListLoop: function(list, type, $container) {
      var _msg, _out;
      _out = '';
      _msg = type === 'add' ? 'encontrado' : 'cadastrado';
      if (list.length === 0) {
        _out = "<li class='not-found'>\n  " + (I18n.t('no_courses')) + " " + _msg + "\n</li>";
      } else {
        $.each(list, function(i, o) {
          o[type] = true;
          return _out += Mustache.render(TwygoPayments.course_html, o);
        });
      }
      return $('body').find($container).html(_out);
    },
    userListLoop: function(list, type, $container) {
      var _out;
      _out = '';
      if (list.length === 0) {
        _out = "<li class='not-found'>\n  " + (I18n.t('no_users_linked')) + "\n</li>";
      } else {
        $.each(list, function(i, o) {
          o[type] = true;
          o['status'] = o['status'] === 1;
          o['status_class'] = o['status'] ? 'on' : 'off';
          if (type === 'add') {
            o['name'] = o.first_name + " " + o.last_name;
          }
          o['payment_status'] = I18n.t('pagseguro.' + o['payment_status']);
          return _out += Mustache.render(TwygoPayments.user_html, o);
        });
      }
      return $('body').find($container).html(_out);
    },
    courseListFilter: function(list, __filter) {
      var new_list;
      new_list = [];
      $.each(list, function(i, o) {
        if (o.name.toLowerCase().indexOf(__filter.toLowerCase()) >= 0) {
          return new_list.push(o);
        }
      });
      return new_list;
    },
    submitFormConfiguration: function() {
      return $('.save').on('click', function(e) {
        var __email, __erede_key, __erede_pv, __token;
        __email = $('#organization_pagseguro_email').val();
        __token = $('#organization_pagseguro_token').val();
        __erede_pv = $('#erede_config_erede_pv').val();
        __erede_key = $('#erede_config_erede_key').val();
        TwygoPayments.saveConfiguration(__email, __token, __erede_pv, __erede_key);
        e.stopPropagation();
        return e.preventDefault();
      });
    },
    saveConfiguration: function(_email, _token, _erede_pv, _erede_key) {
      var __url;
      __url = this.path + '/save_payment_configurations';
      return $.ajax({
        url: __url,
        type: 'POST',
        dataType: 'json',
        data: {
          email: _email,
          token: _token,
          erede_pv: _erede_pv,
          erede_key: _erede_key
        },
        beforeSend: function() {
          return $('#details').addClass('ajax-loading');
        },
        success: function(response, textStatus, jqXHR) {
          if (response.type === 'success') {
            TwygoFlashMessage.setMessage(response.type, response.msg);
            if (response.is_erede) {
              TwygoPayments.response_success_erede();
            } else {
              TwygoPayments.response_success_pagseguro();
            }
          }
          if (response.type === 'error') {
            if (response.is_erede) {
              return TwygoPayments.response_error_erede(response);
            } else {
              return TwygoPayments.response_error_pagseguro(response);
            }
          }
        },
        complete: function(response) {
          return $('#details').removeClass('ajax-loading');
        }
      });
    },
    response_success_erede: function() {
      return TwygoApplication.clearErrors('#edit_erede_config_1');
    },
    response_success_pagseguro: function() {
      return TwygoApplication.clearErrors('#edit_organization_1');
    },
    response_error_erede: function(response) {
      return TwygoApplication.showErrors(response.fields, response.fields_msg, 'erede_config', '#edit_erede_config_1');
    },
    response_error_pagseguro: function(response) {
      return TwygoApplication.showErrors(response.fields, response.fields_msg, 'organization', '#edit_organization_1');
    },
    getCoursesList: function(_filter) {
      var __url;
      __url = this.path + "/events/courses_list/";
      return $.ajax({
        url: __url,
        type: 'GET',
        dataType: 'json',
        beforeSend: function() {
          return $('.courses-list').addClass('ajax-loading');
        },
        success: function(response, textStatus, jqXHR) {
          return TwygoPayments.coursesList = response.courses;
        },
        complete: function(response) {
          $('.courses-list').removeClass('ajax-loading');
          return TwygoPayments.courseListExecute(_filter);
        }
      });
    },
    loadPlanPagseguro: function() {
      var __url;
      __url = this.path + '/payments/plans/sync_pagseguro';
      return $('#sync-plan').on('click', function(e) {
        return $.ajax({
          url: __url,
          type: 'GET',
          dataType: 'json',
          beforeSend: function() {
            return $('#details').addClass('ajax-loading');
          },
          success: function(response, textStatus, jqXHR) {
            TwygoFlashMessage.setMessage(response.type, response.msg);
            if (response.type === 'success') {
              return setTimeout(function() {
                return location.reload();
              }, 1500);
            } else {
              return $('#details').removeClass('ajax-loading');
            }
          },
          error: function(jqXHR, textStatus, errorThrown) {
            var response;
            response = jqXHR.responseJSON;
            TwygoFlashMessage.setMessage(response.type, response.msg);
            return $('#details').removeClass('ajax-loading');
          }
        });
      });
    },
    getPlanCourses: function(plan_id) {
      var __url;
      if (TwygoPayments.is_load_plans) {
        __url = this.path + "/payments/plan/" + plan_id + "/courses";
        return $.ajax({
          url: __url,
          type: 'GET',
          dataType: 'json',
          beforeSend: function() {
            return $('.plans__courses-content').addClass('ajax-loading');
          },
          success: function(response, textStatus, jqXHR) {
            TwygoPayments.courseListLoop(response.events, 'remove', '.plans__courses-content');
            return TwygoPayments.is_load_plans = false;
          },
          complete: function(response) {
            return $('.plans__courses-content').removeClass('ajax-loading');
          }
        });
      }
    },
    deleteCourse: function(course_id) {
      var __url;
      if (confirm(I18n.t('confirm_remove_course_from_plan'))) {
        __url = this.path + "/payments/plan/" + this.plan_id + "/delete_course";
        return $.ajax({
          url: __url,
          type: 'DELETE',
          data: {
            event_id: course_id
          },
          dataType: 'json',
          success: function(response, textStatus, jqXHR) {
            TwygoFlashMessage.setMessage(response.type, response.msg);
            if (response.type === 'success') {
              return $('.plans__courses-content').find("[data-id='" + course_id + "']").remove();
            }
          },
          error: function(jqXHR, textStatus, errorThrown) {
            var response;
            response = jqXHR.responseJSON;
            return TwygoFlashMessage.setMessage(response.type, response.msg);
          }
        });
      }
    },
    addCourse: function(course_id) {
      var $this, __course, __url;
      if ($('.plans__courses-content').find("[data-id=" + course_id + "]").length > 0) {
        alert(I18n.t('course_already_associated'));
        return true;
      } else {
        $this = $('.courses-list').find("[data-id=" + course_id + "]");
        __course = {
          "class": 'new',
          id: course_id,
          name: $this.find('.name').text(),
          remove: true
        };
        __url = this.path + "/payments/plan/" + this.plan_id + "/add_course.json";
        return $.ajax({
          url: __url,
          data: {
            event_id: course_id
          },
          type: 'POST',
          dataType: 'json',
          beforeSend: function() {
            return $('.plans__courses-content').addClass('ajax-loading');
          },
          success: function(response, textStatus, jqXHR) {
            var _out;
            if (response.type === 'success') {
              _out = Mustache.render(TwygoPayments.course_html, __course);
              TwygoPayments.courseListHidden.push(__course.id);
              if ($('.plans__courses-content').find('.courses-item').length === 0) {
                $('.plans__courses-content').html('');
              }
              $('.plans__courses-content').append(_out);
              $('.courses-list').find(".courses-item[data-id='" + __course.id + "']").fadeOut();
            }
            return TwygoFlashMessage.setMessage(response.type, response.msg);
          },
          complete: function(response) {
            return $('.plans__courses-content').removeClass('ajax-loading');
          }
        });
      }
    },
    "delete": function(plan_id) {
      var __url;
      if ($('.plans__users-content > li').not('.not-found').length === 0) {
        if (confirm(I18n.t('confirm_delete_plan'))) {
          __url = this.path + "/payments/plan/" + plan_id + "/destroy.json";
          return $.ajax({
            url: __url,
            type: 'DELETE',
            dataType: 'json',
            beforeSend: function() {
              return $('#details').addClass('ajax-loading');
            },
            success: function(response, textStatus, jqXHR) {
              TwygoFlashMessage.setMessage(response.type, response.msg);
              if (response.type === 'success') {
                setTimeout(function() {
                  return TwygoPayments.backIndex();
                }, 1000);
                return alert(I18n.t('plan_deleted'));
              } else {
                return $('#details').removeClass('ajax-loading');
              }
            }
          });
        }
      } else {
        return alert(I18n.t('students_linked_plan'));
      }
    },
    getPlanUser: function(plan_id) {
      var __url;
      if (TwygoPayments.is_load_users) {
        __url = this.path + "/payments/plan/" + plan_id + "/users.json";
        return $.ajax({
          url: __url,
          type: 'GET',
          dataType: 'json',
          beforeSend: function() {
            return $('.plans__users-content').addClass('ajax-loading');
          },
          success: function(response, textStatus, jqXHR) {
            TwygoPayments.userListLoop(response.users, 'remove', '.plans__users-content');
            return TwygoPayments.is_load_users = false;
          },
          complete: function(response) {
            return $('.plans__users-content').removeClass('ajax-loading');
          }
        });
      }
    },
    changeStatus: function(plan_id, user_id) {
      var $this, __url, _status;
      $this = $("[name='user_status[" + user_id + "]']");
      _status = !$this.is(':checked');
      __url = this.path + "/payments/plan/" + plan_id + "/user/" + user_id + "/status.json";
      $.ajax({
        url: __url,
        type: 'put',
        dataType: 'json',
        data: {
          status: _status
        },
        beforeSend: function() {
          $this.attr('disabled', true);
          return $('.plans__users-content').addClass('ajax-loading');
        },
        success: function(response, textStatus, jqXHR) {
          TwygoFlashMessage.setMessage(response.type, response.msg);
          if (response.type === 'success') {
            if (_status) {
              $this.closest('.switch-holder').find('.switch-role-community').addClass('on').removeClass('off');
              return $this.prop('checked', true);
            } else {
              $this.prop('checked', false);
              return $this.closest('.switch-holder').find('.switch-role-community').addClass('off').removeClass('on');
            }
          }
        },
        error: function(jqXHR, textStatus, errorThrown) {
          var response;
          response = jqXHR.responseJSON;
          return TwygoFlashMessage.setMessage(response.type, response.msg);
        },
        complete: function(response) {
          $('.plans__users-content').removeClass('ajax-loading');
          return $this.removeAttr('disabled');
        }
      });
      return _status;
    },
    removeUser: function(plan_id, user_id) {
      var $this, __url;
      if (confirm(I18n.t('confirm_student_delete'))) {
        $this = $("[data-id='" + user_id + "']");
        __url = this.path + "/payments/plan/" + plan_id + "/user/" + user_id + "/delete.json";
        return $.ajax({
          url: __url,
          type: 'DELETE',
          dataType: 'json',
          beforeSend: function() {
            $this.addClass('disabled');
            return $('.plans__users-content').addClass('ajax-loading');
          },
          success: function(response, textStatus, jqXHR) {
            TwygoFlashMessage.setMessage(response.type, response.msg);
            if (response.type === 'success') {
              return $('.plans__users-content').find("[data-id='" + user_id + "']").remove();
            }
          },
          error: function(jqXHR, textStatus, errorThrown) {
            var response;
            response = jqXHR.responseJSON;
            return TwygoFlashMessage.setMessage(response.type, response.msg);
          },
          complete: function(response) {
            $('.plans__users-content').removeClass('ajax-loading');
            return $this.removeClass('disabled');
          }
        });
      }
    },
    addUser: function(user_id) {
      var $this, __url, __user;
      if ($('.plans__users-content').find("[data-id=" + user_id + "]").length > 0) {
        alert(I18n.t('student_already_linked'));
        return true;
      } else {
        $this = $('.users-list').find("[data-id=" + user_id + "]");
        __user = {
          "class": 'new',
          id: user_id,
          name: $this.find('.name').text(),
          status: true,
          remove: true
        };
        __url = this.path + "/payments/plan/" + this.plan_id + "/add_user.json";
        return $.ajax({
          url: __url,
          data: {
            user_id: user_id
          },
          type: 'POST',
          dataType: 'json',
          beforeSend: function() {
            return $('.plans__users-content').addClass('ajax-loading');
          },
          success: function(response, textStatus, jqXHR) {
            var _out;
            if (response.type === 'success') {
              _out = Mustache.render(TwygoPayments.user_html, __user);
              TwygoPayments.courseListHidden.push(__user.id);
              if ($('.plans__users-content').find('.user-item').length === 0) {
                $('.plans__users-content').html('');
              }
              $('.plans__users-content').append(_out);
              $('.users-list').find(".user-item[data-id='" + __user.id + "']").fadeOut();
            }
            return TwygoFlashMessage.setMessage(response.type, response.msg);
          },
          error: function(jqXHR, textStatus, errorThrown) {
            var response;
            response = jqXHR.responseJSON;
            return TwygoFlashMessage.setMessage(response.type, response.msg);
          },
          complete: function(response) {
            return $('.plans__users-content').removeClass('ajax-loading');
          }
        });
      }
    }
  };

}).call(this);
(function() {
  this.TwygoPortfolio = {
    initialize: function() {
      return TwygoPortfolio.appendEvents();
    },
    showDetailsLoadingIndicator: function() {
      return $(".portfolios .loading").fadeIn("fast");
    },
    hideDetailsLoadingIndicator: function() {
      return $(".portfolios .loading").fadeOut("fast");
    },
    appendEvents: function() {
      return $("#addPortfolio").on("click", function() {
        return TwygoPortfolio.loadModal();
      });
    },
    loadModal: function() {
      return $(".portfolios").modal({
        opacity: 50,
        overlayClose: true,
        onShow: TwygoPortfolio.loadPortfolios()
      });
    },
    loadPortfolios: function() {
      return TwygoPortfolio.requestPortfolios();
    },
    requestPortfolios: function() {
      return $.ajax({
        url: "/o/" + TwygoApplication.currentOrganizationId + "/adm_events.json",
        data: {
          kind: 1,
          situation: 1
        },
        success: function(response) {
          TwygoPortfolio.portfolios = $.parseJSON(JSON.stringify(response));
          return TwygoPortfolio.portfolioList();
        }
      });
    },
    portfolioList: function() {
      var i, len, portfolio, ref, results;
      $(".portfolios").append("<table class='portfolioList'>");
      ref = TwygoPortfolio.portfolios;
      results = [];
      for (i = 0, len = ref.length; i < len; i++) {
        portfolio = ref[i];
        results.push($(".portfolios table").append(TwygoPortfolio.portfolioRow(portfolio)));
      }
      return results;
    },
    portfolioRow: function(portfolio) {
      var class_zebra, create, del, edit, row, text;
      class_zebra = (window.zebra++ % 2 === 0 ? "even" : "");
      edit = I18n.t("common.edit");
      del = I18n.t("common.delete");
      create = I18n.t("common.create_event");
      text = portfolio.name.replace(/&(?!\w+([;\s]|$))/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;");
      row = $("<tr class='" + class_zebra + "' id='" + portfolio.id + "' onclick='TwygoPortfolio.populateForm(" + portfolio.id + ")'> <td align='left' class='event-name'><div class='table-fade'></div>" + text + "</td> <td align='center' class='list-link' style='z-index: 1'><a class='model-add' title='" + create + "' href='#'></a></td> </tr>");
      row.find(".event-name").attr("title", portfolio.name);
      return row;
    },
    populateForm: function(portfolioId) {
      TwygoPortfolio.showDetailsLoadingIndicator();
      if (TwygoEventManagement.currentEventData) {
        $("#model_id").attr("value", "" + portfolioId);
        TwygoPortfolio.hideDetailsLoadingIndicator();
        $(".portfolios").hide();
        return $.modal.close();
      } else {
        return $("#manage-events").load("/o/" + TwygoApplication.currentOrganizationId + "/events/new?model=" + portfolioId, function() {
          $("#manage-events").fadeIn("fast", function() {
            return TwygoEventManagement.bindEventForm();
          });
          TwygoPortfolio.hideDetailsLoadingIndicator();
          $(".portfolios").hide();
          return $.modal.close();
        });
      }
    }
  };

}).call(this);
(function() {
  this.TwygoPrivatePublish = {
    _$modal: null,
    initialize: function() {},
    exportFinished: function(data) {
      return window.open(data.path);
    },
    exportUserFinished: function(data) {
      return window.open(data.path);
    },
    showDownload: function(_link) {
      TwygoPrivatePublish._$modal.find('.modal--content-loading').fadeOut();
      TwygoPrivatePublish._$modal.find('.modal--content-download').fadeIn();
      TwygoPrivatePublish._$modal.find('.modal--content-download').find('#link_donwload').attr('href', _link);
      return TwygoPrivatePublish._$modal.find('#link_donwload').click(function() {
        return setTimeout(function() {
          return TwygoPrivatePublish.closeModal();
        }, 1000);
      });
    },
    closeModal: function() {
      TwygoPrivatePublish._$modal.find('.modal--content-download').fadeOut();
      TwygoPrivatePublish._$modal.find('.modal--content-loading').fadeIn();
      TwygoPrivatePublish._$modal.fadeOut().removeClass('open');
      return $('#export_all').removeAttr('disabled');
    },
    openModal: function($modal) {
      TwygoPrivatePublish._$modal = $modal;
      return $modal.fadeIn().addClass('open');
    }
  };

}).call(this);
(function() {
  var hasProp = {}.hasOwnProperty;

  this.TwygoProfessionalManagement = {
    controllerClassManager: {
      getStudents: function(professional_id) {
        return new Promise(function(resolve) {
          return $.ajax({
            url: "class_manager/" + professional_id + "/students",
            type: 'GET',
            beforeSend: function() {
              return TwygoApplication.loader('show');
            },
            success: function(result) {
              return resolve(result);
            },
            complete: function() {
              return TwygoApplication.loader('hide');
            }
          });
        });
      }
    },
    initialize: function() {
      this.columns = ["full_name", "progress", "email", "enterprise", "role", "edit", "delete"];
      this.table_div = "#professionals-page";
      this.bindProfessionals();
      return this.myTeam = false;
    },
    initializeMyTeam: function(professionals, overview) {
      var hash, j, len, professional, professional_id, ref;
      this.columns = ["full_name", "progress", "email", "enterprise", "role"];
      this.table_div = "#my-team";
      this.professionals = professionals;
      this.bindProfessionals();
      this.myTeam = true;
      this.organization_overview(overview);
      hash = void 0;
      if (location.hash !== "") {
        hash = location.hash.split("#")[1];
        location.hash = "";
      }
      professional_id = parseInt(hash);
      if (!isNaN(professional_id)) {
        ref = this.professionals;
        for (j = 0, len = ref.length; j < len; j++) {
          professional = ref[j];
          if (professional.id === professional_id) {
            this.loadProfessionalProfile(professional.organization_id, professional.id);
            break;
          }
        }
      }
      return setTimeout(function() {
        TwygoProfessionalManagement.initialOrder();
        TwygoProfessionalManagement.buildTable();
        return TwygoProfessionalManagement.table().fadeIn();
      }, 100);
    },
    animation_bar: function($selector) {
      return $selector.find('[data-progress]').each(function(el, i) {
        var $this, progress;
        $this = $(this);
        progress = $(this).attr('data-progress');
        return $this.animate({
          width: progress + "%"
        }, 1000);
      });
    },
    initializeMyTeamAjax: function() {
      return $.ajax({
        url: '/team.json',
        type: "get",
        dataType: "json",
        beforeSend: function() {
          return $('#team_page-inner').addClass('ajax-loading');
        },
        success: function(data) {
          var _html;
          _html = TwygoProfessionalManagement.buildItemTable(data);
          return $('#team_page-inner').find('tbody').html(_html);
        },
        complete: function(response) {
          $('#team_page-inner').removeClass('ajax-loading');
          return TwygoProfessionalManagement.animation_bar($('#team_page-inner'));
        }
      });
    },
    changeConnect: function() {
      $('#professional_connect').on('change', function() {
        var _text, connect;
        _text = $(this).find('option:selected').text();
        connect = $('#professional_connect').val();
        $('[for="professional_email"]').text(_text);
        $('#professional_email').attr("placeholder", I18n.t("forms." + connect + "_placeholder"));
        $('#professional_email').val('');
        if (connect === 'email') {
          return $('.cpf-content').fadeIn();
        } else {
          return $('.cpf-content').fadeOut();
        }
      });
      return $('#professional_email').on('focusout', function() {
        if ($('#professional_connect').val() === 'cpf') {
          return $('#professional_cpf').val($('#professional_email').val());
        }
      });
    },
    buildItemTable: function(list) {
      var html_out;
      html_out = '';
      if (list.length === 0) {
        html_out = "<tr class=>\n  <td colspan=\"6\" class=\"not-found\">" + (I18n.t('not_found')) + "</td>\n</tr>";
      } else {
        $.each(list, function(i, item) {
          item['last_sign_in'] = item['last_sign_in'] === null ? "---" : item['last_sign_in'];
          return html_out += Mustache.render($('#team-item').html(), item);
        });
      }
      return html_out;
    },
    loadProfessionals: function() {
      return this.requestProfessionals(function(response) {
        return $("#details").html(response);
      });
    },
    bindProfessionals: function() {
      $("#add-professional").off().on("click", this.newProfessional);
      this.table().find("th.sortable").on("click", this.doSort);
      $(".submit-filter-users").click(function() {
        TwygoProfessionalManagement.loadProfessionals();
      });
      $('#professionals-form_filter').on('submit', function(e) {
        TwygoProfessionalManagement.loadProfessionals();
        e.preventDefault();
      });
      $('.filter-company-users').on('keyup', function(e) {
        if (e.keyCode === 13) {
          return TwygoProfessionalManagement.loadProfessionals();
        }
      });
      $('.filter-name-users').on('keyup', function(e) {
        if (e.keyCode === 13) {
          return TwygoProfessionalManagement.loadProfessionals();
        }
      });
      $('#professional_connect').on('change', function() {
        var _text;
        _text = $(this).find('option:selected').text();
        return $('[for="professional_connect"]').text(_text);
      });
      return $("#import_users").off().on("click", this.handleImportUsersModal);
    },
    requestProfessionals: function(success) {
      var enterprise_department, enterprise_filter, filter, full_name, url, url_search;
      if (window.$loadingProfessionals) {
        return;
      }
      window.$loadingProfessionals = true;
      enterprise_filter = $('.filter-company-users').val();
      full_name = $('.filter-name-users').val();
      enterprise_department = $('.filter-company-department').val();
      url = "/o/" + TwygoApplication.currentOrganizationId + "/users";
      url_search = "" + window.location.pathname;
      filter = [];
      if (enterprise_filter !== '' && enterprise_filter !== 'undefined') {
        filter.push("enterprise=" + enterprise_filter);
      }
      if (full_name !== '' && full_name !== 'undefined') {
        filter.push("name=" + full_name);
      }
      if (enterprise_department !== '' && enterprise_department !== 'undefined') {
        filter.push("department=" + enterprise_department);
      }
      if (filter.length > 0) {
        url += '?' + filter.join('&');
        url_search += '?' + filter.join('&');
      }
      history.pushState({}, "search", url_search);
      return $.ajax({
        url: url,
        data: {
          layout: "blank"
        },
        success: success,
        beforeSend: function() {
          return $('#organization-area').addClass('ajax-loading');
        },
        complete: function(response) {
          $('#organization-area').removeClass('ajax-loading');
          return window.$loadingProfessionals = false;
        }
      });
    },
    buildTable: function() {
      var j, len, professional, ref, results;
      ref = this.professionals;
      results = [];
      for (j = 0, len = ref.length; j < len; j++) {
        professional = ref[j];
        results.push(this.table().append(this.professionalRow(professional)));
      }
      return results;
    },
    initialOrder: function() {
      var column, field, order;
      column = $(this.table().find("th.sortable.sorted, th.sortable.sorted_up, th.sortable.sorted_down")[0]);
      field = column.attr("sort-field");
      order = column.hasClass("sorted_up") ? 0 : 1;
      switch (field) {
        case "name":
          return TwygoProfessionalManagement.doSortByFullName(order);
        case "full_name":
          return TwygoProfessionalManagement.doSortByFullName(order);
        case "progress":
          return TwygoProfessionalManagement.doSortByProgress(order);
        case "email":
          return TwygoProfessionalManagement.reloadWindowWithParams(order, "email");
        case "total_score_points":
          return TwygoProfessionalManagement.reloadWindowWithParams(order, "total_score_points");
      }
    },
    doSort: function() {
      var klass, order;
      if ($(this).attr("sort-field") === void 0) {
        return;
      }
      order = $(this).hasClass("sorted_up") ? 1 : 0;
      klass = order === 0 ? "sorted_up" : "sorted_down";
      switch ($(this).attr("sort-field")) {
        case "name":
          TwygoProfessionalManagement.doSortByFullName(order);
          break;
        case "full_name":
          TwygoProfessionalManagement.doSortByFullName(order);
          break;
        case "progress":
          TwygoProfessionalManagement.doSortByProgress(order);
          break;
        case "email":
          TwygoProfessionalManagement.reloadWindowWithParams(order, "email");
          break;
        case "total_score_points":
          TwygoProfessionalManagement.reloadWindowWithParams(order, "total_score_points");
          break;
        default:
          return;
      }
      TwygoProfessionalManagement.clearTable();
      TwygoProfessionalManagement.buildTable();
      $(this).siblings().removeClass("sorted_up").removeClass("sorted_down");
      return $(this).removeClass("sorted_up").removeClass("sorted_down").addClass(klass);
    },
    doSortByFullName: function(order) {
      if (typeof order === "undefined") {
        order = 0;
      }
      if (this.myTeam) {
        if (this.professionals.length > 0 && (order === 0 || order === 1)) {
          return this.professionals.sort(function(a, b) {
            return TwygoProfessionalManagement.orderFullName(a, b, order);
          });
        }
      } else {
        return TwygoProfessionalManagement.reloadWindowWithParams(order, "name");
      }
    },
    orderFullName: function(a, b, order) {
      var a_fullname, b_fullname;
      a_fullname = (a.first_name + " " + a.last_name).toLowerCase().trim();
      b_fullname = (b.first_name + " " + b.last_name).toLowerCase().trim();
      if (a_fullname === b_fullname) {
        if (a.id < b.id) {
          return -1;
        } else {
          return 1;
        }
      } else {
        return [1, -1][order] * (a_fullname < b_fullname ? -1 : 1);
      }
    },
    doSortByProgress: function(order) {
      if (typeof order === "undefined") {
        order = 0;
      }
      if (this.myTeam) {
        if (this.professionals.length > 0 && (order === 0 || order === 1)) {
          return this.professionals.sort(function(a, b) {
            return TwygoProfessionalManagement.orderProgress(a, b, order);
          });
        }
      } else {
        return TwygoProfessionalManagement.reloadWindowWithParams(order, "progress_score");
      }
    },
    reloadWindowWithParams: function(order, sort) {
      var j, key, len, pair, pairs, queryString, ref, result, value;
      pairs = window.location.search.slice(1).split('&');
      result = {};
      pairs = pairs.filter(function(pair) {
        var key;
        key = pair.split('=')[0];
        return key !== 'sort' && key !== 'direction';
      });
      for (j = 0, len = pairs.length; j < len; j++) {
        pair = pairs[j];
        ref = pair.split('=').map(decodeURIComponent), key = ref[0], value = ref[1];
        if (result[key] == null) {
          result[key] = [];
        }
        result[key].push(value);
      }
      queryString = $.param({
        page: this.page,
        direction: order,
        sort: sort
      });
      for (key in result) {
        if (!hasProp.call(result, key)) continue;
        if (key !== 'page') {
          queryString += queryString === '' ? key : '&' + key + '=' + result[key].join('&' + key + '=');
        }
      }
      return window.location = this.path + '?' + queryString;
    },
    valueCheckbox: function(check_box_jquery) {
      var jquery, value;
      jquery = check_box_jquery + ".checkboxProfile";
      value = $(jquery)[0].checked;
      return $(jquery).val(value);
    },
    requestClassManagerHasStudent: function(check_box_jquery, professional_id, class_manager) {
      var _elemt, is_checked, jquery;
      if (!professional_id || !class_manager) {
        return false;
      }
      jquery = check_box_jquery + ".checkboxProfile";
      _elemt = $(jquery)[0];
      is_checked = _elemt.checked;
      return TwygoProfessionalManagement.controllerClassManager.getStudents(professional_id).then(function(response) {
        var ModalAlertConfirmed, has_student, is_manager_class, message;
        is_manager_class = response.is_manager_class, has_student = response.has_student;
        if (is_manager_class && has_student && !is_checked) {
          _elemt.checked = true;
          _elemt.value = true;
          message = (I18n.t('views.professional.alert_class_manager')) + "\n\n" + (I18n.t('views.professional.can_transfer_student'));
          ModalAlertConfirmed = TwygoModalConfirmItem.initialize({
            id: 'modal-alert',
            message: message,
            configuration: {
              type_ok: true
            },
            callbacks: {
              defaultConfirmed: function() {
                return TwygoModalConfirmItem.callbacks.close();
              }
            }
          });
          return ModalAlertConfirmed.open();
        }
      });
    },
    orderProgress: function(a, b, order) {
      var a_progress, b_progress;
      a_progress = a.professional ? a.progress : -1;
      b_progress = b.professional ? b.progress : -1;
      if (a_progress === b_progress) {
        return this.orderFullName(a, b, 0);
      } else {
        return [1, -1][order] * (a_progress < b_progress ? -1 : 1);
      }
    },
    loadManagers: function() {
      return this.requestManagers();
    },
    requestManagers: function(success) {
      if (window.$loadingManagers) {
        return;
      }
      window.$loadingManagers = true;
      return $.get("/o/" + TwygoApplication.currentOrganizationId + "/users/managers", function(response) {
        window.$loadingManagers = false;
        return TwygoProfessionalManagement.managers = response.users;
      });
    },
    defaultHeader: function() {
      return $(".page-header").text("Profissionais");
    },
    organization_overview: function(progress) {
      progress = I18n.toPercentage(Math.round(progress), {
        precision: 0
      });
      $("#organization_overview .progress_box .progress_bar .progress").css("width", progress);
      return $("#organization_overview .progress_box .progress_percent").text(progress);
    },
    clearTable: function() {
      return $("#professionals-list").find("tr:not(:has(th))").remove();
    },
    table: function() {
      return $("#professionals-list");
    },
    professionalRow: function(professional) {
      var column, create, del, edit, email, enterprise, full_name, j, len, progress, ref, role, td, text, tr;
      full_name = professional.first_name + " " + professional.last_name;
      text = full_name.replace(/&(?!\w+([;\s]|$))/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;");
      email = ("" + (professional.email || "")).replace(/&(?!\w+([;\s]|$))/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;");
      enterprise = ("" + (professional.enterprise || "")).replace(/&(?!\w+([;\s]|$))/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;");
      role = ("" + (professional.role || "")).replace(/&(?!\w+([;\s]|$))/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;");
      progress = I18n.toPercentage(Math.round(professional.progress), {
        precision: 0
      });
      edit = I18n.t("common.edit");
      del = I18n.t("common.delete");
      create = I18n.t("common.create_event");
      tr = $("<tr class='professional-row' name='" + full_name + "' id='" + professional.id + "'>");
      ref = this.columns;
      for (j = 0, len = ref.length; j < len; j++) {
        column = ref[j];
        switch (column) {
          case "full_name":
            tr.append($("<td class='ellipsis' title='" + text + "'>").text(text));
            break;
          case "email":
            tr.append($("<td class='ellipsis' title='" + email + "'>").text(email));
            break;
          case "enterprise":
            tr.append($("<td class='ellipsis' title='" + enterprise + "'>").text(enterprise));
            break;
          case "role":
            tr.append($("<td class='ellipsis' title='" + role + "'>").text(role));
            break;
          case "progress":
            if (professional.professional) {
              tr.append($("<td class='ellipsis professional-progress' title='" + progress + "' align='right'>").append($("<a href='#'>").click(function() {
                return TwygoProfessionalManagement.loadProfessionalProfile(professional.organization_id, professional.id);
              }).text(progress)));
            } else {
              tr.append($("<td>"));
            }
            break;
          case "edit":
            td = $("<td class='ellipsis' title='" + edit + "' align='right'>");
            td.append($("<a>").addClass("professional-edit").attr("href", "#").click(function() {
              return TwygoProfessionalManagement.loadProfessionalForm(professional.id);
            }));
            tr.append(td);
            break;
          case "delete":
            td = $("<td class='ellipsis' title='" + del + "' align='right'>");
            td.append($("<a>").addClass("professional-delete").attr("href", "#").click(function() {
              return TwygoProfessionalManagement.deleteProfessional(professional.id);
            }));
            tr.append(td);
        }
      }
      return tr;
    },
    newProfessional: function() {
      return $.ajax({
        url: "/o/" + TwygoApplication.currentOrganizationId + "/users/check_create_user_limit",
        dataType: 'json',
        type: "get",
        success: function(response) {
          var btnLabel, contactFunction, message, url;
          if (response.status === 'unauthorized') {
            message = response.message;
            url = response.url_support;
            btnLabel = response.button_label;
            contactFunction = response.contact_function;
            return TwygoNotificationPopUp.showNotification('plan_sub_notification_modal', 'opennotificationmodal', "" + message, "" + url, "" + contactFunction, "" + btnLabel);
          } else {
            return $("#manage-professionals").load("/o/" + TwygoApplication.currentOrganizationId + "/users/new", function() {
              return $("#table-professionals-info").fadeOut("fast", function() {
                return $("#manage-professionals").fadeIn("fast", function() {
                  return TwygoProfessionalManagement.initializeForm();
                });
              });
            });
          }
        }
      });
    },
    loadProfessionalProfile: function(organization_id, professional_id) {
      var page_div, profile_path;
      profile_path = "/o/" + organization_id + "/users/" + professional_id + "/professional_profile";
      page_div = this.table_div;
      $(".professional_loader").show();
      return $("#professionals-profile-page").load(profile_path, function() {
        $("#professionals-profile-page").siblings().hide();
        TwygoMyProfessionalProfile.addHeaderLink(I18n.t('_back'), function() {
          if (TwygoProfessionalManagement.myTeam && $("#professionals-list").data("needs-reload")) {
            return location.reload();
          } else {
            if ($("#professionals-list").data("needs-reload")) {
              TwygoProfessionalManagement.loadProfessionals();
            }
            $("#professionals-profile-page").hide();
            return $(page_div).fadeIn();
          }
        }, true);
        $("#professionals-profile-page .header li:first").addClass("return");
        $(".professional_loader").hide();
        return $("#professionals-profile-page").fadeIn();
      });
    },
    loadProfessionalForm: function(professionalId) {
      return $("#manage-professionals").load("/o/" + TwygoApplication.currentOrganizationId + "/users/" + professionalId + "/edit", function() {
        var name;
        name = $("#professionals-list").children("tbody:first").children("#" + professionalId).attr("name");
        return $("#table-professionals-info").fadeOut("fast", function() {
          return $("#manage-professionals").fadeIn("fast", function() {
            return TwygoProfessionalManagement.initializeForm(professionalId);
          });
        });
      });
    },
    initializeForm: function(professionalId) {
      var formClass;
      TwygoProfessionalManagement.saveNotRepeat();
      if ($("#professional_manager_id").val() !== "") {
        $("#manager_label").show();
      } else {
        $("#manager_search").show();
      }
      if ($("#new_professional").find(".field_with_errors:eq(1)").length > 0) {
        setTimeout((function() {
          return $("#new_professional").find(".field_with_errors:eq(1)").children().focus();
        }), 400);
      } else if ($("#new_professional").find(".field_error:first").length > 0) {
        setTimeout((function() {
          return $("#new_professional").find(".field_error:first").focus();
        }), 400);
      } else {
        setTimeout((function() {
          return $("#professional_email").focus();
        }), 400);
      }
      if (professionalId) {
        $(".edit_professional").find(".save_and_new").hide();
        formClass = "edit_professional";
      } else {
        professionalId = null;
        $(".new_professional").find(".save").click(function() {
          return $(".new_professional").submit();
        });
        formClass = "new_professional";
      }
      TwygoProfessionalManagement.setProfessionalData({
        professionalId: professionalId
      });
      $("#professional-cancel").on("click", function() {
        TwygoProfessionalManagement.defaultHeader();
        return $("#manage-professionals").fadeOut("fast", function() {
          return $("#table-professionals-info").fadeIn("fast", function() {});
        });
      });
      TwygoProfessionalManagement.loadManagers();
      TwygoProfessionalManagement.bindManagerSearch();
      return $("." + formClass).on("ajax:complete", function(e, response) {
        if (response.status === 401) {
          return;
        }
        if (response.responseJSON && response.responseJSON.status === "ok") {
          return TwygoProfessionalManagement.professionalSaveSuccess(response);
        } else if (response.responseJSON && (response.responseJSON.status === "error_profile" || response.responseJSON.status === "not_ok")) {
          return TwygoProfessionalManagement.professionalSaveError(response);
        } else if (response.responseText && response.responseText.indexOf("error_explanation") === -1) {
          return TwygoProfessionalManagement.professionalSaveSuccess(response);
        } else {
          return TwygoProfessionalManagement.professionalSaveError(response);
        }
      });
    },
    bindManagerSearch: function() {
      $(document).on("mouseenter", ".managerList li", function() {
        $(".managerList li").removeClass("focused");
        return $(this).addClass("focused");
      });
      return $("#manager_name").attr("autocomplete", "off").on("keyup", function() {
        return TwygoProfessionalManagement.triggerManagerSearch();
      }).on("keydown", function(e) {
        var keyCode;
        keyCode = (e.keyCode ? e.keyCode : (e.which ? e.which : e.charCode));
        switch (keyCode) {
          case 13:
            $(".managerList li.focused").click();
            return false;
          case 27:
            return TwygoProfessionalManagement.clearManager();
          case 38:
            TwygoProfessionalManagement.focusPreviousManager();
            return false;
          case 40:
            TwygoProfessionalManagement.focusNextManager();
            return false;
        }
      });
    },
    focusNextManager: function() {
      var container, manager, row;
      manager = $(".managerList li.focused");
      if (manager.is(":last-child") || manager.next().length === 0) {
        return;
      }
      manager.removeClass("focused").next().addClass("focused");
      container = $(".managerList");
      row = $(".managerList li.focused");
      if ((row.offset().top + row.innerHeight()) > (container.height() + container.offset().top)) {
        return container.scrollTop(container.scrollTop() + (row.offset().top + row.innerHeight()) - (container.height() + container.offset().top));
      }
    },
    focusPreviousManager: function() {
      var container, manager, row;
      manager = $(".managerList li.focused");
      if (manager.is(":first-child") || manager.prev().length === 0) {
        return;
      }
      manager.removeClass("focused").prev().addClass("focused");
      container = $(".managerList");
      row = $(".managerList li.focused");
      if (row.offset().top - 5 < container.offset().top) {
        return container.scrollTop(container.scrollTop() + row.offset().top - container.offset().top - 5);
      }
    },
    triggerManagerSearch: function() {
      clearInterval(TwygoProfessionalManagement.searchTrigger);
      return TwygoProfessionalManagement.searchTrigger = setTimeout(TwygoProfessionalManagement.managerSearch, 350);
    },
    managerSearch: function() {
      var filteredManagers, full_name, j, len, manager, managerName, ref;
      managerName = $.trim($("#manager_name").val()).toLowerCase();
      if (managerName === $("#manager_name").data("lastValue")) {
        return;
      }
      $("#manager_name").data("lastValue", managerName);
      filteredManagers = [];
      if (managerName.length >= 3) {
        ref = TwygoProfessionalManagement.managers;
        for (j = 0, len = ref.length; j < len; j++) {
          manager = ref[j];
          full_name = manager.first_name + " " + manager.last_name;
          if (full_name.toLowerCase().indexOf(managerName) > -1 && TwygoProfessionalManagement.currentProfessionalData.professionalId !== manager.id) {
            filteredManagers.push(manager);
          }
        }
        return TwygoProfessionalManagement.managerList(filteredManagers);
      } else {
        return $(".managerList").hide();
      }
    },
    managerList: function(managers) {
      var j, len, manager;
      $(".managerList").html("<ul>");
      if (managers.length === 0) {
        $(".managerList ul").append("<li class='clear_manager item-clear' onClick='TwygoProfessionalManagement.clearManager()'>" + (I18n.t('no_manager_found')) + "</li>");
        $(".managerList ul li:first-child").addClass("focused");
        return $(".managerList").scrollTop(0).show();
      }
      for (j = 0, len = managers.length; j < len; j++) {
        manager = managers[j];
        $(".managerList ul").append("<li class='item' id='" + manager.id + "' onclick='TwygoCommon.focusNext(\"#manager_name\"); TwygoProfessionalManagement.setManager(" + manager.id + ")'> <div class='manager-grid'> <img src='" + (manager.avatar_url || TwygoApplication.assets.noPic) + "' height='30' class='avatar'></img> <div class='managerName ellipsis'>" + manager.first_name + " " + manager.last_name + "</div> <a class='btn btn-add ghost inline' href='javascript:void(0)' onclick='TwygoCommon.focusNext(\"#manager_name\"); TwygoProfessionalManagement.setManager(" + manager.id + ")'>" + (I18n.t('views.associate')) + "</a> </div> </li>");
        $(".managerList ul li[id=" + manager.id + "]").data("manager", manager);
      }
      $(".managerList ul").append("<li class='clear_manager item-clear' onClick='TwygoProfessionalManagement.clearManager()'>" + (I18n.t('views.cancel')) + "</li>");
      $(".managerList ul li:first-child").addClass("focused");
      return $(".managerList").scrollTop(0).show();
    },
    setManager: function(managerId) {
      var manager;
      manager = $(".managerList ul li[id=" + managerId + "]").data("manager");
      $("#manager_label .manager_name").text(manager.first_name + " " + manager.last_name);
      $("#manager_label .manager_avatar img").attr("src", manager.avatar_url || TwygoApplication.assets.noPic);
      $("#manager_label .manager_avatar span.avatar").css('background-image', 'url(' + manager.avatar_url || TwygoApplication.assets.noPic + ')');
      $("#professional_manager_id").val(manager.id);
      return $("#manager_search").fadeOut("fast", function() {
        $(".managerList").hide();
        return $("#manager_label").fadeIn("fast");
      });
    },
    clearManager: function() {
      $(".managerList").fadeOut("fast");
      return $("#manager_label").fadeOut("fast", function() {
        $("#manager_label .manager_name").text("");
        $("#manager_label .manager_avatar img").attr("src", "");
        $("#manager_label .manager_avatar span.avatar").css('background-image', '');
        $("#professional_manager_id").val("");
        $("#manager_name").val("");
        $("#manager_name").keyup();
        return $("#manager_search").fadeIn("fast", function() {
          return $("#manager_name").focus();
        });
      });
    },
    setProfessionalData: function(currentProfessionalData) {
      this.currentProfessionalData = currentProfessionalData;
      return true;
    },
    professionalSaveSuccess: function(response) {
      if (response.responseJSON && response.responseJSON.status === "ok") {
        $("#professional-cancel").click();
        TwygoProfessionalManagement.loadProfessionals();
      } else {
        TwygoProfessionalManagement.magickInputs(response);
        TwygoProfessionalManagement.initializeForm();
        $("body").animate({
          scrollTop: 165
        }, "fast");
      }
      return TwygoProfessionalManagement.setMessageSuccess();
    },
    setMessageSuccess: function() {
      return TwygoFlashMessage.setMessage('success', I18n.t('professional_save_success'));
    },
    setMessageError: function(message) {
      return TwygoFlashMessage.setMessage('error', message);
    },
    professionalSaveError: function(response) {
      var professionalId;
      professionalId = TwygoProfessionalManagement.currentProfessionalData.professionalId;
      if (response.responseJSON && (response.responseJSON.status === "error_profile" || response.responseJSON.status === "not_ok")) {
        TwygoProfessionalManagement.setMessageError(response.responseJSON.error_message);
      } else {
        TwygoProfessionalManagement.magickInputs(response);
      }
      return TwygoProfessionalManagement.initializeForm(professionalId);
    },
    magickInputs: function(response) {
      var form, j, len, magicwords, param, params, results;
      magicwords = ["utf8", "_method", "authenticity_token", "organization_id"];
      form = $("#manage-professionals form");
      if (response.responseText.indexOf("form") === -1) {
        params = form.serializeArray();
        form.html(response.responseText);
        results = [];
        for (j = 0, len = params.length; j < len; j++) {
          param = params[j];
          if (jQuery.inArray(param.name, magicwords) !== -1) {
            results.push(form.append("<input type='hidden' name='" + param.name + "' value='" + param.value + "'>"));
          } else {
            results.push(void 0);
          }
        }
        return results;
      } else {
        return $("#manage-professionals").html(response.responseText);
      }
    },
    saveNotRepeat: function() {
      return $(".save, .save_and_new").click(function() {
        return $(this).off().on("click", function(e) {
          return safePreventEvent(e);
        });
      });
    },
    deleteProfessional: function(id, act_or_inact, inactiv_or_active) {
      return $.ajax({
        url: "/o/" + TwygoApplication.currentOrganizationId + "/users/" + id,
        dataType: "json",
        type: "delete",
        beforeSend: function() {
          return $('#professional-exclusion').find('.panel-content').addClass('ajax-loading');
        },
        success: function(response) {
          TwygoLearningPath.remove_user_from_learning_path(id, "users");
          TwygoProfessionalManagement.loadProfessionals();
          return TwygoFlashMessage.setMessage("success", response["messages"][0]["message"]);
        },
        error: function(response) {
          var $deletionMessages, $exclusionModal, $messagePluralOrSingular, $modalBody, $modalFooter, j, key, len;
          $exclusionModal = $('#professional-exclusion');
          $exclusionModal.find('.panel-content').removeClass('ajax-loading');
          $modalBody = $exclusionModal.find('.modal-body');
          $deletionMessages = response.responseJSON.messages;
          if ($deletionMessages.length > 1) {
            $messagePluralOrSingular = "<p>" + I18n.t('views.professional.unable_to_destroy_plural') + "</p>";
          } else {
            $messagePluralOrSingular = "<p>" + I18n.t('views.professional.unable_to_destroy_singular') + "</p>";
          }
          $modalBody.html($messagePluralOrSingular);
          for (j = 0, len = $deletionMessages.length; j < len; j++) {
            key = $deletionMessages[j];
            if (key["event_name"]) {
              $modalBody.append('<li class="deletion-message">' + key["message"] + " " + key["event_name"] + '</li>');
            } else {
              $modalBody.append('<li class="deletion-message">' + key["message"] + '</li>');
            }
          }
          $modalBody.append('</ul>');
          $('.inactivate-option').removeClass('hidden');
          $modalFooter = $exclusionModal.find('.modal-footer');
          $modalFooter.html("<button class='btn btn-default btn-modal col-4' type='button'>" + I18n.t('_cancel') + "</button><button class='btn btn-danger btn-modal-action remove-professional'>" + I18n.t('views.professional.inactivate_user') + "</button>");
          $modalFooter.find('.btn-default').attr('onClick', 'TwygoProfessionalManagement.dismissModal("#professional-exclusion")');
          return $modalFooter.find('.btn-modal-action').attr('onClick', "TwygoProfessionalManagement.switchExclusionToInactivate(" + id + ",'" + act_or_inact + "','" + inactiv_or_active + "')");
        }
      });
    },
    deleteProfessionalModal: function(id, act_or_inact, inactiv_or_active) {
      return TwygoProfessionalManagement.controllerClassManager.getStudents(id).then(function(response) {
        var has_student, is_manager_class;
        is_manager_class = response.is_manager_class, has_student = response.has_student;
        if (is_manager_class && has_student) {
          return TwygoProfessionalManagement.openModalInactivation(id);
        } else {
          return TwygoProfessionalManagement.openModalRemove(id, act_or_inact, inactiv_or_active);
        }
      });
    },
    openModalInactivation: function(id) {
      var ModalAlertConfirmed, message;
      message = (I18n.t('views.professional.alert_remove_then_access_profile')) + "\n\n" + (I18n.t('views.professional.restrict_access'));
      ModalAlertConfirmed = TwygoModalConfirmItem.initialize({
        id: 'modal-alert',
        message: message,
        configuration: {
          url: "/o/" + TwygoApplication.currentOrganizationId + "/users/" + id + "/inactivate",
          type: "get",
          reload: false
        },
        callbacks: {
          success: function(result) {
            TwygoProfessionalManagement.loadProfessionals();
            return TwygoFlashMessage.setMessage("notice", result.message);
          }
        }
      });
      return ModalAlertConfirmed.open();
    },
    openModalRemove: function(id, act_or_inact, inactiv_or_active) {
      var $exclusionModal, professional_name;
      professional_name = $("#" + id).attr("name");
      $exclusionModal = $('#professional-exclusion');
      TwygoUtility.toggleModal($exclusionModal);
      $exclusionModal.find('.name').text(professional_name);
      $exclusionModal.find('.modal-body').html("<p class='are_you_sure_destroy'>" + I18n.t('views.professional.are_you_sure_destroy') + "</p>");
      $exclusionModal.find('.modal-footer').html("<button class='btn btn-default btn-modal' type='button'>" + I18n.t('_cancel') + "</button><button class='btn btn-danger btn-modal-action remove-professional'>" + I18n.t('views.professional.yes_delete_anyways') + "</button>");
      $exclusionModal.find('.btn-danger.remove-professional').attr('onClick', "TwygoProfessionalManagement.deleteProfessional(" + id + ",'" + act_or_inact + "','" + inactiv_or_active + "')");
      return $exclusionModal.find('.btn-default').attr('onClick', 'TwygoProfessionalManagement.dismissModal("#professional-exclusion")');
    },
    switchExclusionToInactivate: function(id, act_or_inact, inactiv_or_active) {
      TwygoProfessionalManagement.dismissModal('#professional-exclusion');
      return TwygoProfessionalManagement.inactivateProfessionalModal(id, act_or_inact, inactiv_or_active);
    },
    dismissModal: function(modalId) {
      var $inactivate;
      $inactivate = $('.inactivate-option');
      if (!$inactivate.hasClass('hidden')) {
        $inactivate.addClass('hidden');
      }
      modalId = $(modalId);
      return modalId.fadeOut();
    },
    inactivateProfessional: function(id, act_or_inact) {
      return $.ajax({
        url: "/o/" + TwygoApplication.currentOrganizationId + "/users/" + id + "/inactivate",
        dataType: "json",
        type: "get",
        beforeSend: function() {
          return $('#user-inactive-modal').find('.panel-content').addClass('ajax-loading');
        },
        success: function(response) {
          TwygoProfessionalManagement.loadProfessionals();
          return TwygoFlashMessage.setMessage("notice", I18n.t('views.professional.was_carried') + ' ' + act_or_inact + ' ' + I18n.t('views.professional.of_user_message'));
        },
        error: function(response) {
          TwygoProfessionalManagement.loadProfessionals();
          return TwygoFlashMessage.setMessage("error", response.responseJSON.message);
        }
      });
    },
    inactivateProfessionalModal: function(id, act_or_inact, inactiv_or_active) {
      if (inactiv_or_active === I18n.t('views.professionals.activate')) {
        return $.ajax({
          url: "/o/" + TwygoApplication.currentOrganizationId + "/users/check_create_user_limit",
          dataType: "json",
          type: "get",
          success: function(response) {
            var btnLabel, message, url;
            if (response.status === "unauthorized") {
              message = response.message;
              url = response.url_support;
              btnLabel = response.button_label;
              TwygoNotificationPopUp.showNotification('plan_sub_notification_modal', 'opennotificationmodal', "" + message, "" + url, "" + btnLabel);
            } else {
              return TwygoProfessionalManagement.showInactivateProfessionalModal(id, act_or_inact, inactiv_or_active);
            }
          }
        });
      } else {
        return TwygoProfessionalManagement.showInactivateProfessionalModal(id, act_or_inact, inactiv_or_active);
      }
    },
    showInactivateProfessionalModal: function(id, act_or_inact, inactiv_or_active) {
      var $inactivateModal;
      $inactivateModal = $('#user-inactive-modal');
      TwygoUtility.toggleModal($inactivateModal);
      $inactivateModal.find('.inactiv_or_active').html(inactiv_or_active + ' ' + I18n.t('views.professional.the_user'));
      $inactivateModal.find('.modal-body').html("<p class='are_you_sure_destroy'>" + I18n.t('views.professional.are_you_sure') + ' ' + act_or_inact + ' ' + I18n.t('views.professional.of_user') + "</p>");
      $inactivateModal.find('.modal-footer').html("<button class='btn btn-default btn-modal' type='button'>" + I18n.t('_cancel') + "</button><button class='btn btn-danger inactive-professional btn-modal-action' type='button'>" + inactiv_or_active + "</button>");
      $inactivateModal.find('.btn-danger.inactive-professional').attr('onClick', 'TwygoProfessionalManagement.inactivateProfessional(' + id + ',"' + act_or_inact + '")');
      return $inactivateModal.find('.btn-default').attr('onClick', 'TwygoProfessionalManagement.dismissModal("#user-inactive-modal")');
    },
    fillAddressByCEP: function() {
      var cep, country, validacep;
      cep = $("#professional_zip_code").val().replace(/\D/g, '');
      country = $("#professional_country").val();
      if (cep !== '' && country === "BR") {
        validacep = /^[0-9]{8}$/;
        if (validacep.test(cep)) {
          $(".cep-loader").fadeIn("fast");
          return $.getJSON('//viacep.com.br/ws/' + cep + '/json/?callback=?', function(dados) {
            if (!('erro' in dados)) {
              $('#professional_address').val(dados.logradouro);
              $('#professional_city').val(dados.localidade);
              $('#professional_state').val(dados.uf);
              $('#professional_district').val(dados.bairro);
              $(".cep-loader").fadeOut("fast");
              return $(".zip-code-error").fadeOut("fast");
            } else {
              $(".zip-code-error").text(I18n.t('zip_code_not_found'));
              $(".zip-code-error").fadeIn("fast");
              $(".cep-loader").fadeOut("fast");
              $('#professional_address').val("");
              $('#professional_city').val("");
              $('#professional_state').val("");
              $('#professional_district').val("");
              return setTimeout(function() {
                return $(".zip-code-error").fadeOut("fast");
              }, 5000);
            }
          });
        } else {
          $(".zip-code-error").text(I18n.t('invalid_zip_code'));
          $(".zip-code-error").fadeIn("fast");
          $('#professional_address').val("");
          $('#professional_city').val("");
          $('#professional_state').val("");
          $('#professional_district').val("");
          return setTimeout(function() {
            return $(".zip-code-error").fadeOut("fast");
          }, 5000);
        }
      } else {
        return $(".zip-code-error").fadeOut("fast");
      }
    },
    validatePassword: function() {
      var $confirmPassword, $container, $matchingPasswords, $newPassword, $submitButton;
      $container = $('#user-password-change-modal');
      $newPassword = $('#new-password').val();
      $confirmPassword = $('#confirm-password').val();
      $submitButton = $container.find('.green_btn');
      $matchingPasswords = $container.find('#matching-passwords');
      if ($newPassword.length < 6) {
        $submitButton.prop("disabled", true);
        return $matchingPasswords.html("<i class='fas fa-times' style='color: red;'></i> " + I18n.t('registrations.messages.password_is_too_short'));
      } else if ($newPassword === $confirmPassword && $newPassword.length >= 6) {
        $submitButton.prop("disabled", false);
        return $matchingPasswords.html("<i class='fas fa-check' style='color: lime;'></i> " + I18n.t('registrations.messages.passwords_are_the_same'));
      } else {
        $submitButton.prop("disabled", true);
        return $matchingPasswords.html("<i class='fas fa-times' style='color: red;'></i> " + I18n.t('registrations.messages.passwords_are_not_the_same'));
      }
    },
    changeUserPassword: function(user_id, full_name, token) {
      var $container;
      if (token == null) {
        token = '';
      }
      $container = $('#user-password-change-modal');
      $container.find('#organization_id').val(TwygoApplication.currentOrganizationId);
      $container.find('#user_id').val(user_id);
      $container.find('.title').text("" + full_name);
      if (token.length > 0) {
        $container.find('#professional_token').text(token);
      }
      return TwygoUtility.toggleModal($container);
    },
    changePasswordBind: function() {
      $('#user_password_change_form').on('ajax:success', function(a, data) {
        var $container, $matchingPasswords;
        TwygoFlashMessage.setMessage("notice", data.messages);
        $container = $('#user-password-change-modal');
        $matchingPasswords = $container.find('#matching-passwords');
        $matchingPasswords.html("<i class='fas fa-clock'></i> " + I18n.t('registrations.messages.waiting_password_entry'));
        $('#new-password').val("");
        $('#confirm-password').val("");
        $('#user_password_change_form .errorExplanation').addClass('hidden');
        $('#user-password-change-modal .errorExplanation ul').empty();
        return $('#user-password-change-modal').fadeOut();
      });
      return $('#user_password_change_form').on('ajax:error', function(a, data) {
        var return_data;
        $('.user-password-change-modal .errorExplanation ul').empty();
        return_data = JSON.parse(data.responseText);
        if (data.status === 400) {
          return_data.messages.forEach(function(message) {
            $('#user_password_change_form .errorExplanation').removeClass('hidden');
            return $('#user_password_change_form .errorExplanation ul').append('<li>' + message + '</li>');
          });
          return return_data.error_fields.forEach(function(error_field) {
            return $('#user_password_change_form .form_' + error_field).closest('.form-group').addClass('field_with_errors');
          });
        } else {
          return_data = JSON.parse(data.responseText);
          return TwygoFlashMessage.setMessage('error', return_data.messages);
        }
      });
    },
    userPasswordChangeEmail: function(email) {
      if (confirm(I18n.t('resend_reset_password_mail'))) {
        return $.ajax({
          url: "/users/password",
          data: {
            user: {
              email: email
            }
          },
          dataType: "json",
          type: "post",
          success: function(response) {
            return TwygoFlashMessage.setMessage("notice", I18n.t("password.email_sent_success"));
          },
          error: function(response) {
            return TwygoFlashMessage.setMessage("error", I18n.t("password.email_sent_error"));
          }
        });
      }
    },
    showModalAlertDeactivatingCommunity: function(enabled) {
      var $inactivatingAlertModal, input;
      input = document.getElementById('professional_enable_communities');
      if (enabled && !input.checked) {
        $inactivatingAlertModal = $('#user-inactive-modal');
        TwygoUtility.toggleModal($inactivatingAlertModal);
        $inactivatingAlertModal.find('.inactiv_or_active').html(I18n.t('views.professional.disable_community'));
        $inactivatingAlertModal.find('.modal-body').html("<p class='are_you_sure_destroy'>" + I18n.t('views.professional.alert_disable_community') + "</p>");
        $inactivatingAlertModal.find('.modal-footer').html("<button class='btn btn-default btn-modal' type='button'>" + I18n.t('_sign_out'));
        return $inactivatingAlertModal.find('.btn-default').attr('onClick', 'TwygoProfessionalManagement.dismissModal("#user-inactive-modal")');
      }
    },
    handleImportUsersModal: function() {
      return $("#import-upload").load("/o/" + TwygoApplication.currentOrganizationId + "/users/csv_imports?layout=false", function() {
        return $(this).twygomodal();
      });
    },
    bindFieldValidationInput: function() {
      $('input[id$="_district"].form-control').on('input', function() {
        return TwygoProfessionalManagement.checkValidationFieldError($(this), 50);
      });
      return $('input[id$="_address_number"].form-control').on('input', function() {
        return TwygoProfessionalManagement.checkValidationFieldError($(this), 10);
      });
    },
    checkValidationFieldError: function($element, max_length) {
      $element.val($element.val().substr(0, max_length));
      if ($element.val().length >= max_length && $element.parent().find('.validate-field-error').length === 0) {
        $element.parent().append("<span class='validate-field-error'>" + (I18n.t("max_characteres")) + "</span>");
        return setTimeout(function() {
          return $element.parent().children().remove('.validate-field-error');
        }, 5000);
      }
    }
  };

}).call(this);
(function() {
  this.TwygoProfessionalMassAction = {
    current_organization: null,
    total: null,
    timeout: null,
    $template: '',
    professionals: [],
    users: [],
    init: function(count) {
      TwygoProfessionalMassAction.total = count;
      TwygoProfessionalMassAction.mark_all_student();
    },
    mark_all_student: function() {
      $('#student-all').on('change', function() {
        var _value;
        _value = $(this).is(":checked");
        return $('.student-checkbox').each(function(i, e) {
          return setTimeout(function() {
            return $(e).prop("checked", _value);
          }, 10 * i);
        });
      });
    },
    mark_all_subscription_items: function() {
      $('#subscription-item-all').on('change', function() {
        var _value;
        _value = $(this).is(":checked");
        return $('.subscription-item-checkbox').each(function(i, e) {
          return setTimeout(function() {
            return $(e).prop("checked", _value);
          }, 10 * i);
        });
      });
    },
    mark_register: function() {
      var _action, _subscription_ids;
      _action = $('#actions').val();
      _subscription_ids = TwygoProfessionalMassAction.get_subscription_ids();
      if (_action === '1') {
        return this.send_event_action_mass(_subscription_ids);
      } else if (_action === '2') {
        return this.send_learning_path_action_mass(_subscription_ids);
      }
    },
    send_event_action_mass: function(event_ids) {
      var professionals_ids;
      professionals_ids = $('#actions_to').val() === '2' ? TwygoProfessionalMassAction.professionals : TwygoProfessionalMassAction.get_professionals();
      if (event_ids.length === 0) {
        TwygoFlashMessage.setMessage('error', I18n.t('views.professional.not_courses'));
        return false;
      }
      return $.ajax({
        url: "/o/" + TwygoProfessionalMassAction.current_organization + "/users/action_mass.json",
        type: 'POST',
        dataType: 'json',
        data: {
          events: event_ids,
          professionals: professionals_ids
        },
        beforeSend: function() {
          return $('#user-subscription-form').find('.panel-content').addClass('ajax-loading');
        },
        complete: function(response) {
          var _msg, _type;
          $('#user-subscription-form').fadeOut();
          $('#user-subscription-form').addClass('hidden');
          $('#user-subscription-form').html('');
          $('body').removeClass('modal-open');
          _type = response.responseJSON.type;
          _msg = response.responseJSON.msg;
          return TwygoFlashMessage.setMessage(_type, _msg);
        }
      });
    },
    send_learning_path_action_mass: function(learning_path_ids) {
      var users_ids;
      users_ids = $('#actions_to').val() === '2' ? TwygoProfessionalMassAction.users : TwygoProfessionalMassAction.get_users();
      if (learning_path_ids.length === 0) {
        TwygoFlashMessage.setMessage('error', I18n.t('views.professional.not_learning_paths'));
        return false;
      }
      return $.ajax({
        type: 'POST',
        url: "/o/" + TwygoProfessionalMassAction.current_organization + "/learning_paths/mass_associate_user.json",
        dataType: 'json',
        async: true,
        data: {
          learning_path_ids: learning_path_ids,
          associate_ids: users_ids
        },
        beforeSend: function() {
          return $('#user-subscription-form').find('.panel-content').addClass('ajax-loading');
        },
        complete: function(response) {
          var _msg, _type;
          $('#user-subscription-form').fadeOut();
          $('#user-subscription-form').addClass('hidden');
          $('#user-subscription-form').html('');
          $('body').removeClass('modal-open');
          _type = response.responseJSON.type;
          _msg = response.responseJSON.msg;
          return TwygoFlashMessage.setMessage(_type, _msg);
        }
      });
    },
    get_professionals: function() {
      var _ids;
      _ids = [];
      $('#professionals-list').find('.student-checkbox').each(function(e, i) {
        if ($(this).is(':checked')) {
          return _ids.push($(this).val());
        }
      });
      return _ids;
    },
    get_users: function() {
      var _ids;
      _ids = [];
      $('#professionals-list').find('.student-checkbox').each(function(e, i) {
        if ($(this).is(':checked')) {
          return _ids.push($(this).data("user_id"));
        }
      });
      return _ids;
    },
    get_subscription_ids: function() {
      var _ids;
      _ids = [];
      $('#subscription-item-list').find('.subscription-item-checkbox').each(function(e, i) {
        if ($(this).is(':checked')) {
          return _ids.push($(this).val());
        }
      });
      return _ids;
    },
    execute: function() {
      var _action, _professionals, _target;
      _action = $('#actions').val();
      _target = $('#actions_to').val();
      _professionals = TwygoProfessionalMassAction.get_professionals();
      if (_target === '1' && _professionals.length < 1) {
        TwygoFlashMessage.setMessage('error', I18n.t('views.professionals.no_professionals_selected'));
        return;
      }
      if (_target === '2' && TwygoProfessionalMassAction.professionals.length < 1) {
        TwygoFlashMessage.setMessage('error', I18n.t('views.professionals.no_professionals_filter'));
        return;
      }
      if (_action === '1') {
        this.build_events_table_html();
      } else if (_action === '2') {
        this.build_learning_path_table_html();
      }
      this.modal_toggle($('#user-subscription-form'), 'open', _action);
    },
    build_events_table_html: function() {
      var _html_filter, _html_table;
      _html_table = Mustache.render($('#mass_subscription_table').html(), {
        title: I18n.t('user_subscription_mass'),
        header_title: I18n.t('course_name')
      });
      $('#user-subscription-form').html(_html_table);
      _html_filter = Mustache.render($('#admin_events_filter').html(), {
        btn_export: false,
        date: false
      });
      return $('#mass-filter-container').html(_html_filter);
    },
    build_learning_path_table_html: function() {
      var _html_filter, _html_table;
      _html_table = Mustache.render($('#mass_subscription_table').html(), {
        title: I18n.t('views.professionals.mass_learning_path_subscription'),
        header_title: I18n.t('learning-path.path_name')
      });
      $('#user-subscription-form').html(_html_table);
      _html_filter = Mustache.render($('#learning_path_filter').html(), {});
      return $('#mass-filter-container').html(_html_filter);
    },
    render_mustache: function(element) {
      var template;
      template = TwygoMyCourseList.$template.html();
      return Mustache.render(template, element);
    },
    biuld_html: function(subscriptions) {
      var _html;
      _html = '';
      if (subscriptions.length > 0) {
        $.each(subscriptions, function(i, item) {
          return _html += Mustache.render(TwygoProfessionalMassAction.$template, item);
        });
      } else {
        _html = "<tr> <td colspan='2'> <div id= 'table_filter_not_found'> <i class='fas fa-search'></i> <h5> " + (I18n.t("restriction_bi_view.not_found")) + " </h3> </div </td> </tr>";
      }
      return _html;
    },
    modal_toggle: function($modal, action, subscription_action) {
      var _timeout;
      if (action == null) {
        action = 'open';
      }
      if (subscription_action == null) {
        subscription_action = null;
      }
      _timeout = null;
      if (_timeout) {
        clearTimeout(_timeout);
      }
      if (action === 'open') {
        $modal.fadeIn();
        $modal.removeClass('hidden');
        if (subscription_action === '1') {
          TwygoProfessionalMassAction.load_events_ajax();
        } else if (subscription_action === '2') {
          TwygoProfessionalMassAction.load_learning_path_ajax();
        }
        $modal.find('.close').on('click', function() {
          return TwygoProfessionalMassAction.modal_toggle($('#user-subscription-form'), 'close', subscription_action);
        });
        return _timeout = setTimeout(function() {
          $modal.find('.effect').addClass('in');
          return $('body').addClass('modal-open');
        }, 500);
      } else {
        $modal.find('.effect').removeClass('in');
        return _timeout = setTimeout(function() {
          $modal.fadeOut();
          $modal.addClass('hidden');
          $('#user-subscription-form').html('');
          return $('body').removeClass('modal-open');
        }, 500);
      }
    },
    load_events_ajax: function() {
      var filters, organization_id;
      organization_id = TwygoProfessionalMassAction.current_organization;
      filters = TwygoProfessionalMassAction.get_filter();
      return $.ajax({
        url: "/o/" + organization_id + "/events/courses_list_by_filter.json",
        type: 'GET',
        dataType: 'json',
        data: filters,
        beforeSend: function() {
          return $('#user-subscription-form').find('.panel-content').addClass('ajax-loading');
        },
        success: function(json) {
          var html;
          html = TwygoProfessionalMassAction.biuld_html(json.courses);
          return $('#subscription-item-list').find('tbody').html(html);
        },
        complete: function(response) {
          $('#user-subscription-form').find('.panel-content').removeClass('ajax-loading');
          TwygoProfessionalMassAction.mark_all_subscription_items();
          return TwygoProfessionalMassAction.filter_submit();
        }
      });
    },
    load_learning_path_ajax: function() {
      var filters, organization_id;
      organization_id = TwygoProfessionalMassAction.current_organization;
      filters = TwygoProfessionalMassAction.get_filter();
      return $.ajax({
        url: "/o/" + organization_id + "/learning_paths/learning_paths_by_organization.json",
        type: 'GET',
        dataType: 'json',
        data: {
          filters: filters
        },
        beforeSend: function() {
          return $('#user-subscription-form').find('.panel-content').addClass('ajax-loading');
        },
        success: function(json) {
          var html;
          html = TwygoProfessionalMassAction.biuld_html(json.learning_paths);
          return $('#subscription-item-list').find('tbody').html(html);
        },
        complete: function(response) {
          $('#user-subscription-form').find('.panel-content').removeClass('ajax-loading');
          TwygoProfessionalMassAction.mark_all_subscription_items();
          return TwygoProfessionalMassAction.learning_path_filter_submit();
        }
      });
    },
    export_request: function(filters) {
      var organization_id;
      organization_id = TwygoProfessionalMassAction.current_organization;
      return $.ajax({
        type: 'GET',
        dataType: 'json',
        url: "/o/" + organization_id + "/users/export.json",
        data: filters,
        beforeSend: function() {
          TwygoFlashMessage.setMessage('notice', I18n.t('wait_report_generate'));
          return $('#export_all').addClass('disabled').attr("disabled", "disabled");
        },
        success: function(success) {
          TwygoFlashMessage.setMessage('notice', I18n.t('report_generate'));
          return $('#export_all').removeClass('disabled').removeAttr("disabled", "disabled");
        },
        error: function() {
          return TwygoFlashMessage.setMessage('error', I18n.t('error_export_file'));
        },
        complete: function(data) {}
      });
    },
    filter_submit: function() {
      return $('#event-manager-filter').off('submit').on('submit.filter', function(e) {
        e.preventDefault();
        TwygoProfessionalMassAction.load_events_ajax();
        return false;
      });
    },
    learning_path_filter_submit: function() {
      return $('#learning-path-manager-filter').off('submit').on('submit.filter', function(e) {
        e.preventDefault();
        TwygoProfessionalMassAction.load_learning_path_ajax();
        return false;
      });
    },
    get_filter: function() {
      var resp, situation_val, title_val;
      resp = {};
      title_val = $('#mass-filter-container').find('.filter-column.title input').val();
      situation_val = $('#mass-filter-container').find('.filter-column.situation select').val();
      resp['name'] = title_val;
      if (situation_val !== '') {
        resp['situation'] = situation_val;
      }
      return resp;
    }
  };

}).call(this);
(function() {
  this.TwygoProfessionals = {
    professional_id: null,
    organization_id: null,
    showScoreHistory: function(professional_id, organization_id) {
      TwygoApplication.loader();
      TwygoProfessionals.professional_id = professional_id;
      TwygoProfessionals.organization_id = organization_id;
      return $("#professionals-score-list").load("/o/" + organization_id + "/users/" + professional_id + "/scores", function() {
        return $("#professionals-profile-page").fadeOut("fast", function() {
          return $("#professionals-score-list").fadeIn("fast", function() {
            return TwygoApplication.loader();
          });
        });
      });
    },
    cancelButton: function() {
      TwygoApplication.loader();
      $("#professionals-score-list").fadeOut("fast", function() {
        return $("#professionals-profile-page").fadeIn("fast", function() {});
      });
      $("#professionals-score-list > .inner-content:visible").fadeOut("fast", function() {
        return $("#professionals-profile-page").fadeIn("fast", function() {
          return TwygoApplication.loader();
        });
      });
      $("#manage-professionals").fadeOut("fast", function() {
        return $("#table-professionals-info").fadeIn("fast", function() {});
      });
      return $("#manage-professionals > .inner-content:visible").fadeOut("fast", function() {
        return $("#students-container").fadeIn("fast", function() {
          return TwygoApplication.loader();
        });
      });
    },
    showProfessionalHistoryUser: function(professional_id, organization_id, page) {
      if (page == null) {
        page = 1;
      }
      TwygoApplication.loader();
      TwygoProfessionals.professional_id = professional_id;
      TwygoProfessionals.organization_id = organization_id;
      return $("#manage-professionals").load("/o/" + organization_id + "/users/" + professional_id + "/scores?page=" + page, function() {
        return $("#table-professionals-info").fadeOut("fast", function() {
          return $("#manage-professionals").fadeIn("fast", function() {
            return TwygoApplication.loader();
          });
        });
      });
    },
    withoutPermission: function() {
      return TwygoFlashMessage.setMessage("error", I18n.t('manual_score.messages.fail.permission'));
    },
    openScoreFormModal: function(professional_id, organization_id) {
      TwygoStudents.professional_id = professional_id;
      TwygoStudents.organization_id = organization_id;
      return $("#score-form").fadeIn();
    },
    addManualScorePoints: function(professional_id, organization_id, points, cause) {
      var loadingBox, loadingClass;
      loadingClass = 'ajax-loading';
      loadingBox = '.inner-box';
      return $.ajax({
        url: "/o/" + organization_id + "/users/" + professional_id + "/scores",
        type: 'post',
        data: {
          score: {
            points: points,
            cause: cause
          }
        },
        beforeSend: function() {
          return $("#score-form").find(loadingBox).addClass(loadingClass);
        },
        success: function(response) {
          $('#score_points').val('');
          $('#score_cause').val('');
          $('#score-history').html(response);
          $("#score-form").fadeOut();
          return TwygoFlashMessage.setMessage("success", I18n.t('scores.messages.success.create'));
        },
        error: function(response) {
          var element, errors, i, item, len, message, ref, results;
          if (response.status === 422) {
            errors = response.responseJSON;
            ref = Object.keys(errors);
            results = [];
            for (i = 0, len = ref.length; i < len; i++) {
              item = ref[i];
              element = I18n.t("activerecord.attributes.score." + item);
              message = element + " " + errors[item];
              results.push(TwygoFlashMessage.setMessage("error", message));
            }
            return results;
          } else {
            return TwygoFlashMessage.setMessage("error", I18n.t('manual_score.messages.fail.create'));
          }
        },
        complete: function() {
          return $("#score-form").find(loadingBox).removeClass(loadingClass);
        }
      });
    },
    filterScore: function(page) {
      var date, order, order_field, organization_id, origin, professional_id, user_id;
      professional_id = TwygoProfessionals.professional_id, organization_id = TwygoProfessionals.organization_id, order = TwygoProfessionals.order, order_field = TwygoProfessionals.order_field;
      user_id = $("#made_by").val();
      origin = $("#origin").val();
      date = $("#created_at").val();
      return $.ajax({
        url: "/o/" + organization_id + "/users/" + professional_id + "/scores/search",
        type: "GET",
        data: {
          user_id: user_id,
          date: date,
          origin: origin,
          order_field: order_field,
          order: order,
          page: page
        },
        beforeSend: function() {
          return $('#score-history').addClass('ajax-loading');
        },
        success: function(response) {
          return $('#scores_table').html(response);
        },
        error: function(response) {
          return TwygoFlashMessage.setMessage("error", I18n.t('scores.messages.fail.fetch'));
        }
      });
    }
  };

}).call(this);
(function() {
  this.TwygoProfilesManagement = {
    initialize: function() {
      return this.organizationId = TwygoApplication.currentOrganizationId;
    },
    index: function() {
      $("#competencies_area").fadeOut("fast");
      return $("#competencies_area").load("/o/" + this.organizationId + "/profiles", function() {
        $(".add-profile").click(TwygoProfilesManagement.newProfile);
        $(".profile-edit").click(TwygoProfilesManagement.editProfile);
        $(".profile-delete").click(TwygoProfilesManagement.destroyProfile);
        return $("#competencies_area").fadeIn("fast");
      });
    },
    completeRequirements: function() {
      $("#competencies_area").fadeOut("fast");
      return $("#competencies_area").load("/o/" + this.organizationId + "/profiles/complete_requirement", function() {
        return $("#competencies_area").fadeIn("fast");
      });
    },
    bindEvents: function() {},
    newProfile: function() {
      $("#competencies_area").fadeOut("fast");
      return $("#competencies_area").load("/o/" + TwygoProfilesManagement.organizationId + "/profiles/new", function() {
        TwygoProfilesManagement.initForm();
        return $("#competencies_area").fadeIn("fast");
      });
    },
    editProfile: function() {
      $("#competencies_area").fadeOut("fast");
      TwygoProfilesManagement.profile_id = this.getAttribute("profile_id");
      return $("#competencies_area").load("/o/" + TwygoProfilesManagement.organizationId + "/profiles/" + TwygoProfilesManagement.profile_id + "/edit", function() {
        TwygoProfilesManagement.initForm();
        return $("#competencies_area").fadeIn("fast");
      });
    },
    destroyProfile: function() {
      var ModalRemoveCoupons, answer, event_json, name, profile_id;
      profile_id = this.getAttribute("profile_id");
      name = this.getAttribute("description");
      ModalRemoveCoupons = TwygoModalRemoveItem;
      ModalRemoveCoupons.initialize({
        id: 'modal-remove-profile-professionals',
        configuration: {
          url: "/o/" + TwygoProfilesManagement.organizationId + "/profiles/",
          reload: false
        },
        callbacks: {
          success: function() {
            TwygoProfilesManagement.index();
            return TwygoFlashMessage.setMessage("notice", I18n.t('profile_deleted'));
          }
        }
      });
      event_json = JSON.stringify({
        id: profile_id,
        name: name
      });
      return answer = ModalRemoveCoupons.open(event_json);
    },
    initForm: function() {
      $(".edit_profile, .new_profile").on("ajax:complete", function(e, response) {
        if (response.responseText.indexOf("error_explanation") === -1) {
          TwygoFlashMessage.setMessage("notice", I18n.t('profile_saved'));
          if (response.responseJSON && response.responseJSON.status === "ok") {
            TwygoProfilesManagement.index();
            return;
          }
        }
        $("#competencies_area").html(response.responseText);
        return TwygoProfilesManagement.initForm();
      });
      $("#profile-cancel").on("click", function() {
        return TwygoProfilesManagement.index();
      });
      if ($(".edit_profile, .new_profile").find(".field_with_errors:eq(1)").length > 0) {
        setTimeout((function() {
          return $(".edit_profile, .new_profile").find(".field_with_errors:eq(1)").children().focus();
        }), 400);
      } else {
        setTimeout((function() {
          return $("#profile_description").focus();
        }), 400);
      }
      return $(".new_profile").find(".save").click(function() {
        return $(".new_profile").submit();
      });
    },
    removeCompetency: function(e) {
      var id, row;
      row = $(e).parents(".competencyRow");
      id = row.attr("competencyId");
      return $.ajax({
        type: "delete",
        url: "/o/" + TwygoProfilesManagement.organizationId + "/profiles/" + TwygoProfilesManagement.profile_id + "/remove_competency",
        data: {
          "competency_id": id
        },
        success: function(response) {
          if (response && response.status === "ok") {
            $(row).fadeOut(function() {
              return $(row).remove();
            });
            $(".profile_requirements_" + TwygoProfilesManagement.profile_id).load("/o/" + TwygoProfilesManagement.organizationId + "/profiles/" + TwygoProfilesManagement.profile_id + "/competencies_for_filter");
            return TwygoFlashMessage.setMessage("notice", I18n.t('competence_removed'));
          }
        }
      });
    },
    floatEditCompetencies: function() {
      return $("#float_edit_competence").load("/o/" + TwygoProfilesManagement.organizationId + "/profiles/" + TwygoProfilesManagement.profile_id + "/edit_competencies", function() {
        $("#float_edit_competence .edit_profile").on("ajax:complete", function(e, response) {
          if (response.responseJSON && response.responseJSON.status === "ok") {
            TwygoFlashMessage.setMessage("notice", I18n.t('professional_profile_saved'));
            $.modal.close();
            $("#details_row_" + TwygoProfilesManagement.profile_id + " #profile_competencies").load("/o/" + TwygoProfilesManagement.organizationId + "/profiles/" + TwygoProfilesManagement.profile_id + "/competencies");
            $(".profile_requirements_" + TwygoProfilesManagement.profile_id).load("/o/" + TwygoProfilesManagement.organizationId + "/profiles/" + TwygoProfilesManagement.profile_id + "/competencies_for_filter");
          } else {
            TwygoFlashMessage.setMessage("error", response.responseText);
            return $.modal.close();
          }
        });
        return $("#float_edit_competence").modal({
          minHeight: 520,
          minWidth: 520,
          opacity: 50
        });
      });
    },
    removeProfessional: function(e) {
      var id, row;
      row = $(e).parents(".professionalItem");
      id = row.attr("professionalId");
      return $.ajax({
        type: "delete",
        url: "/o/" + TwygoProfilesManagement.organizationId + "/profiles/" + TwygoProfilesManagement.profile_id + "/remove_professional",
        data: {
          "professional_id": id
        },
        success: function(response) {
          if (response && response.status === "ok") {
            $(row).fadeOut(function() {
              return $(row).remove();
            });
            $.get("/o/" + TwygoProfilesManagement.organizationId + "/profiles/" + TwygoProfilesManagement.profile_id + "/load_professionals_for_filter", function(response) {
              return $(".profile_requirements_" + TwygoProfilesManagement.profile_id + " #professional_filter").filterList(true).setItems(response.objects);
            }, "json");
            return TwygoFlashMessage.setMessage("notice", I18n.t('professional_removed'));
          }
        }
      });
    },
    floatEditProfessionals: function() {
      return $("#float_edit_professional").load("/o/" + TwygoProfilesManagement.organizationId + "/profiles/" + TwygoProfilesManagement.profile_id + "/edit_professionals", function() {
        $("#float_edit_professional .edit_profile").on("ajax:complete", function(e, response) {
          if (response.responseJSON && response.responseJSON.status === "ok") {
            TwygoFlashMessage.setMessage("notice", I18n.t('professional_profile_saved'));
            $.modal.close();
            $("#details_row_" + TwygoProfilesManagement.profile_id + " #profile_professionals").load("/o/" + TwygoProfilesManagement.organizationId + "/profiles/" + TwygoProfilesManagement.profile_id + "/professionals");
            $.get("/o/" + TwygoProfilesManagement.organizationId + "/profiles/" + TwygoProfilesManagement.profile_id + "/load_professionals_for_filter", function(response) {
              return $(".profile_requirements_" + TwygoProfilesManagement.profile_id + " #professional_filter").filterList(true).setItems(response.responseJSON.objects);
            }, "json");
          } else {
            TwygoFlashMessage.setMessage("error", response.responseText);
            return $.modal.close();
          }
        });
        return $("#float_edit_professional").modal({
          minHeight: 520,
          minWidth: 740,
          opacity: 50
        });
      });
    },
    bindRequirementFilter: function(profile_id) {
      return $("#complete_requirements .filter_profile").click(TwygoProfilesManagement.filterRequirements);
    },
    reloadTeamRequirements: function(object) {
      var competency, level, profile;
      TwygoMyProfessionalProfile.requirements_completed.push(object);
      profile = $(".profile_overview > .profile").data("profile");
      competency = $(".competency_overview > .competency").data("competency");
      level = $(".level_row .div-table-arrow-up").parent().parent().attr("level_id");
      TwygoMyProfessionalProfile.setupData();
      TwygoMyProfessionalProfile.buildProfileList();
      TwygoMyProfessionalProfile.buildProfileOverview(profile);
      TwygoMyProfessionalProfile.buildCompetencyOverview(competency);
      $("#professionals-list").data("needs-reload", true);
      $(".level_row[level_id=" + level + "] .open-details").click();
      TwygoMyProfessionalProfile.showCompetencyOverview();
      TwygoMyProfessionalProfile.updateRequirementPercentage();
      return $.modal.close();
    },
    filterRequirements: function(element, competence, level, requirement) {
      var professional, profile;
      profile = $("#complete_requirements").find("#profile_filter").filterList(true).active_id;
      competence = $("#complete_requirements").find("#competence_filter").filterList(true).active_id;
      level = $("#complete_requirements").find("#level_filter").filterList(true).active_id;
      requirement = $("#complete_requirements").find("#requirement_filter").filterList(true).active_id;
      professional = $("#complete_requirements").find("#professional_filter").filterList(true).active_id;
      if (profile === null || profile === void 0) {
        profile = "";
      }
      if (competence === null || competence === void 0) {
        competence = "";
      }
      if (level === null || level === void 0) {
        level = "";
      }
      if (requirement === null || requirement === void 0) {
        requirement = "";
      }
      if (professional === null || professional === void 0) {
        professional = "";
      }
      return $("#competencies_area").find("#requirements_list").load("/o/" + TwygoProfilesManagement.organizationId + "/profiles/professionals_requirements?competence=" + competence + "&level=" + level + "&requirement=" + requirement + "&professional=" + professional + "&profile=" + profile, function() {
        return $.modal.close();
      });
    },
    floatRegisterRequirement: function(professional_id, requirement_id, action, organizationId) {
      if (organizationId == null) {
        organizationId = TwygoProfilesManagement.organizationId;
      }
      return $("#float_register_requirement").load("/o/" + organizationId + "/profiles/" + action + "_requirement?professional_id=" + professional_id + "&requirement_id=" + requirement_id, function() {
        var height;
        if ($("#float_register_requirement .acceptance_criteria").length > 0) {
          height = 390;
        } else {
          height = 260;
        }
        return $("#float_register_requirement").modal({
          minHeight: height,
          minWidth: 440,
          opacity: 50
        });
      });
    },
    floatSignUpRequirement: function(model_id) {
      return $("#float_register_requirement").load("/e/" + model_id + "?show_less=1", function() {
        return $("#float_register_requirement").modal({
          minHeight: 400,
          minWidth: 800,
          opacity: 50
        });
      });
    },
    removeProfessionalRequirement: function(professional_id, requirement_id) {
      var answer;
      answer = confirm(I18n.t('confirm_undo_registration'));
      if (answer) {
        return $.ajax({
          url: "/o/" + TwygoProfilesManagement.organizationId + "/profiles/destroy_professional_requirement",
          dataType: 'json',
          data: {
            professional_id: professional_id,
            requirement_id: requirement_id
          },
          type: 'delete',
          success: function(response) {
            $(".professional_actions[professional_id=" + professional_id + "][requirement_id=" + requirement_id + "]").html('<input class="register-requirement gray_btn" href="#" onclick="TwygoProfilesManagement.floatRegisterRequirement(' + professional_id + ',' + requirement_id + ', ' + "'register'" + '  )" type="button" value=' + I18n.t('javascripts.register') + '>');
            return TwygoFlashMessage.setMessage("notice", I18n.t('register_cracked'));
          }
        });
      }
    },
    attRequirementsFilter: function(object_id, object) {
      var userlevel, userrequirement;
      userlevel = $(".profile_requirements_" + TwygoProfilesManagement.profile_id).find("#userlevel");
      userrequirement = $(".profile_requirements_" + TwygoProfilesManagement.profile_id).find("#userrequirement");
      if (object === "levels") {
        userlevel.html("<option value=''>" + (I18n.t('select_level')) + "</option>");
        userrequirement.html("<option value=''>" + (I18n.t('select_requirement')) + "</option>");
      } else if (object === "requirements") {
        userrequirement.html("<option value=''>" + (I18n.t('select_requirement')) + "</option>");
      }
      if (object_id !== "" && object_id !== void 0 || object === "levels") {
        $(".profile_requirements_" + TwygoProfilesManagement.profile_id).find("#userlevel").prop('disabled', true);
        $(".profile_requirements_" + TwygoProfilesManagement.profile_id).find("#userrequirement").prop('disabled', true);
      } else if (object === "requirements") {
        $(".profile_requirements_" + TwygoProfilesManagement.profile_id).find("#userrequirement").prop('disabled', true);
      }
      return $.ajax({
        url: "/o/" + TwygoProfilesManagement.organizationId + "/profiles/" + TwygoProfilesManagement.profile_id + "/load_" + object + "_for_filter?object_id=" + object_id,
        dataType: 'json',
        type: 'get',
        success: function(response) {
          var filter, i, objects, results;
          if (object === "levels") {
            filter = userlevel;
            $(".profile_requirements_" + TwygoProfilesManagement.profile_id).find("#userlevel").prop('disabled', false);
          } else if (object === "requirements") {
            filter = userrequirement;
            $(".profile_requirements_" + TwygoProfilesManagement.profile_id).find("#userlevel").prop('disabled', false);
            $(".profile_requirements_" + TwygoProfilesManagement.profile_id).find("#userrequirement").prop('disabled', false);
          }
          i = 0;
          objects = response.objects;
          filter.html(filter.children("option:first"));
          results = [];
          while (i < objects.length) {
            filter.append("<option value='" + objects[i][0] + "'>" + objects[i][1] + "</option>");
            results.push(i++);
          }
          return results;
        }
      });
    },
    bindProfessionalRequirementForm: function() {
      return $("#float_register_requirement form").on("ajax:complete", function(e, response) {
        var status;
        status = response.responseJSON.status;
        if (status === "save" || status === "update" || status === "already_completed") {
          if ($("#complete_requirements").find("#profile_filter").filterList(true) === null || $("#complete_requirements").find("#profile_filter").filterList(true) === void 0) {
            TwygoProfilesManagement.reloadTeamRequirements(response.object);
          } else {
            TwygoProfilesManagement.filterRequirements();
          }
          if (status === "save") {
            return TwygoFlashMessage.setMessage("notice", I18n.t('requirement_saved'));
          } else if (status === "update") {
            return TwygoFlashMessage.setMessage("notice", I18n.t('requirement_updated'));
          } else if (status === "already_completed") {
            return TwygoFlashMessage.setMessage("alert", I18n.t('requirement_saved_by_other_user'));
          }
        }
      });
    },
    bindDateInputs: function(options) {
      var date;
      $(":input.date").setMask({
        mask: '99/99/9999',
        autoTab: false
      });
      $(":input.date").datepicker({
        changeMonth: true,
        changeYear: true
      });
      if (options === "" || options === void 0) {
        date = new Date();
      } else {
        date = new Date(options);
      }
      $(":input.date").datepicker("option", {
        dateFormat: I18n.t("date.formats.date_on_js"),
        dayNames: I18n.t("date.day_names"),
        dayNamesMin: I18n.t("date.abbr_day_names"),
        monthNames: I18n.t("date.monthNames"),
        monthNamesShort: I18n.t("date.monthNames"),
        nextText: I18n.t("common.next"),
        prevText: I18n.t("common.prev"),
        yearRange: (date.getFullYear() - 5) + ":" + (date.getFullYear() + 5),
        showOtherMonths: true,
        selectOtherMonths: true
      });
      return $("#completion_date").datepicker("setDate", date);
    }
  };

}).call(this);
(function() {
  this.TwygoQuestionListManagement = {
    initialize: function(params) {
      this.params = (typeof params === "object") && params || {};
      this.columns = this.params.columns || ["name", "kind", "count", "questions", "edit", "delete"];
      this.table_div = this.params.table_div || "#question_lists-page";
      this.load();
      return this.bind();
    },
    bind: function() {
      return $("#add-question-list").off().on("click", this["new"]);
    },
    load: function() {
      var t;
      (t = TwygoQuestionListManagement).clearTable();
      return this.requestList(function(list) {
        t.list = list;
        return t.buildTable();
      });
    },
    requestList: function(success) {
      if (window.$loadingQuestionList) {
        return;
      }
      window.$loadingQuestionList = true;
      return $.ajax({
        url: "/o/" + TwygoApplication.currentOrganizationId + "/question_lists",
        success: success,
        dataType: 'json',
        complete: function(response) {
          return window.$loadingQuestionList = false;
        }
      });
    },
    table: function() {
      return $("table#question_lists");
    },
    clearTable: function() {
      return this.table().find("tr:not(:has(th))").remove();
    },
    buildTable: function() {
      var i, item, len, ref, results;
      ref = this.list;
      results = [];
      for (i = 0, len = ref.length; i < len; i++) {
        item = ref[i];
        results.push(this.table().append(this.row(item)));
      }
      return results;
    },
    defaultHeader: function() {
      return $(".page-header").text(I18n.t('views.organization.question_lists'));
    },
    sanitizeText: function(text) {
      return (text || "").replace(/&(?!\w+([;\s]|$))/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;");
    },
    row: function(item) {
      var _del, _edit, a, column, count, del, edit, i, item_json, kind, len, name, ref, td, tr;
      name = this.sanitizeText(item.name);
      kind = I18n.t("views.question_lists." + item.kind);
      count = item.question_count || 0;
      edit = I18n.t("common.edit");
      del = I18n.t("common.delete");
      item_json = {
        id: item.id,
        name: item.name
      };
      tr = $("<tr class='question-list-row' name='" + name + "' id='question-list-" + item.id + "'>");
      ref = this.columns;
      for (i = 0, len = ref.length; i < len; i++) {
        column = ref[i];
        switch (column) {
          case "name":
            tr.append($("<td class='ellipsis' title='" + name + "'>").text(name));
            break;
          case "kind":
            tr.append($("<td class='ellipsis center' title='" + kind + "'>").text(kind));
            break;
          case "count":
            tr.append($("<td class='ellipsis center question_count' title='" + count + "'>").text(count));
            break;
          case "questions":
            td = $("<td class='question-cell'>");
            td.append($("<button class='btn-primary btn ghost inline'>").text(I18n.t('views.learn.questions')).click(function() {
              return TwygoQuestionListManagement.loadQuestions(item.id);
            }));
            tr.append(td);
            break;
          case "edit":
            td = $("<td class='ellipsis actions-btn' title='" + edit + "' align='right'>");
            _edit = $("<a href=\"#" + item.id + "\" class=\"question-list-edit\" title=\"" + edit + "\">\n  <i class=\"icon-pencil\"></i>\n  <small>" + edit + "</small>\n</a>");
            a = _edit.click(function() {
              return TwygoQuestionListManagement.edit(item.id);
            });
            tr.append(td.append(a));
            break;
          case "delete":
            td = $("<td class='ellipsis actions-btn' title='" + del + "' align='right'>");
            _del = $("<a href=\"#" + item.id + "\" class=\"question-list-delete\" title=\"" + del + "\">\n  <i class=\"icon-times\"></i>\n    <small>" + del + "</small>\n</a>");
            a = _del.click(function() {
              return TwygoQuestionListManagement.destroy(item_json);
            });
            tr.append(td.append(a));
        }
      }
      return tr;
    },
    "new": function() {
      return $("#manage-question_lists").load("/o/" + TwygoApplication.currentOrganizationId + "/question_lists/new", function() {
        return $("#table-question_lists-info").fadeOut("fast", function() {
          return $("#manage-question_lists").fadeIn("fast", function() {
            return TwygoQuestionListManagement.initializeForm();
          });
        });
      });
    },
    edit: function(id) {
      return $("#manage-question_lists").load("/o/" + TwygoApplication.currentOrganizationId + "/question_lists/" + id + "/edit", function() {
        return $("#table-question_lists-info").fadeOut("fast", function() {
          return $("#manage-question_lists").fadeIn("fast", function() {
            return TwygoQuestionListManagement.initializeForm();
          });
        });
      });
    },
    destroy: function(item) {
      var ModalRemoveCoupons;
      ModalRemoveCoupons = TwygoModalRemoveItem;
      ModalRemoveCoupons.initialize({
        id: 'modal-remove-question-list',
        configuration: {
          url: "/o/" + TwygoApplication.currentOrganizationId + "/question_lists/",
          reload: false
        },
        callbacks: {
          success: function(response) {
            TwygoQuestionListManagement.load();
            return TwygoFlashMessage.setMessage("notice", I18n.t("question_list_destroy_success"));
          },
          error: function(response) {
            return TwygoCommon.setMessage("error", response.responseJSON.msg);
          }
        }
      });
      return ModalRemoveCoupons.open(item);
    },
    loadQuestions: function(id, show) {
      if (show == null) {
        show = true;
      }
      return $("#manage-question_lists").load("/o/" + TwygoApplication.currentOrganizationId + "/question_lists/" + id + "/get_questions", function() {
        if (show) {
          return $("#table-question_lists-info").fadeOut("fast", function() {
            return $("#manage-question_lists").fadeIn("fast");
          });
        }
      });
    },
    initializeForm: function(isNew) {
      var formClass, prefix;
      if (isNew == null) {
        isNew = $("#new_question_list").length > 0;
      }
      TwygoQuestionListManagement.saveNotRepeat();
      prefix = isNew ? "new" : "edit";
      if ($("#" + prefix + "_question_list").find(".field_with_errors:eq(1)").length > 0) {
        setTimeout((function() {
          return $("#" + prefix + "_question_list").find(".field_with_errors:eq(1)").children().focus();
        }), 400);
      } else if ($("#" + prefix + "_question_list").find(".field_error:first").length > 0) {
        setTimeout((function() {
          return $("#" + prefix + "_question_list").find(".field_error:first").focus();
        }), 400);
      } else {
        setTimeout((function() {
          return $("#question_list_name").focus();
        }), 400);
      }
      if (!isNew) {
        $(".edit_question_list").find(".save_and_new").hide();
        formClass = "edit_question_list";
      } else {
        $(".new_question_list").find(".save").click(function() {
          return $(".new_question_list").submit();
        });
        formClass = "new_question_list";
      }
      $("#question-list-cancel").on("click", function() {
        TwygoQuestionListManagement.defaultHeader();
        return $("#manage-question_lists").fadeOut("fast", function() {
          return $("#table-question_lists-info").fadeIn("fast", function() {});
        });
      });
      this.bindForm();
      this.fixCategoryStripes("categories1");
      this.fixCategoryStripes("categories2");
      return $("." + formClass).on("ajax:complete", function(e, response) {
        var ref, ref1;
        if ((response != null ? (ref = response.responseText) != null ? ref.indexOf("error_explanation") : void 0 : void 0) === -1) {
          return TwygoQuestionListManagement.saveSuccess(response);
        } else if ((response != null ? (ref1 = response.responseJSON) != null ? ref1.status : void 0 : void 0) === "ok") {
          return TwygoQuestionListManagement.saveSuccess(response);
        } else {
          return TwygoQuestionListManagement.saveError(response);
        }
      });
    },
    bindForm: function() {
      $(".new_category input[type=text]").on("keydown", function(e) {
        if ((e.keyCode || e.which) === 13) {
          $(this).closest('.new_category').find(".add_category").click();
          return false;
        }
      });
      return $(".categories").on("change", ".category_item", function() {
        return $(this).parent().find("input[type=hidden]").val($(this).val());
      });
    },
    saveSuccess: function(response) {
      var responseJSON;
      TwygoQuestionListManagement.load();
      try {
        responseJSON = JSON.parse(response.responseText);
      } catch (error) {}
      if ((responseJSON != null ? responseJSON.status : void 0) === "ok") {
        $("#question-list-cancel").click();
      } else {
        TwygoQuestionListManagement.magickInputs(response);
        TwygoQuestionListManagement.initializeForm();
        $("body").animate({
          scrollTop: 165
        }, "fast");
      }
      return TwygoFlashMessage.setMessage("notice", I18n.t("question_list_save_success"));
    },
    saveError: function(response) {
      TwygoQuestionListManagement.magickInputs(response);
      return TwygoQuestionListManagement.initializeForm();
    },
    magickInputs: function(response) {
      var form, i, len, magicwords, param, params, results;
      magicwords = ["utf8", "_method", "authenticity_token", "organization_id"];
      form = $("#manage-question_lists form");
      if (response.responseText.indexOf("form") === -1) {
        params = form.serializeArray();
        form.html(response.responseText);
        results = [];
        for (i = 0, len = params.length; i < len; i++) {
          param = params[i];
          if (jQuery.inArray(param.name, magicwords) !== -1) {
            results.push(form.append("<input type='hidden' name='" + param.name + "' value='" + param.value + "'>"));
          } else {
            results.push(void 0);
          }
        }
        return results;
      } else {
        return $("#manage-question_lists").html(response.responseText);
      }
    },
    saveNotRepeat: function() {
      return $(".save, .save_and_new").off("click").click(function() {
        return $(this).off().on("click", function(e) {
          return safePreventEvent(e);
        });
      });
    },
    fixCategoryStripes: function(categories) {
      var group;
      group = $("#" + categories);
      group.find(".category:odd").removeClass("even").addClass("odd");
      return group.find(".category:even").addClass("even").removeClass("odd");
    },
    addCategory: function(categories) {
      var field, group, list, value;
      group = $("#" + categories);
      field = group.find(".new_category input[type=text]");
      value = $.trim(field.val().toString());
      field.focus();
      if (value === "") {
        return;
      }
      list = $.map(group.find(".categories input[type=hidden]"), function(el) {
        return $(el).val().toString().toLowerCase();
      });
      if (list.indexOf(value.toLowerCase()) >= 0) {
        return TwygoFlashMessage.setMessage("alert", I18n.t("views.question_lists.category_already_added"));
      }
      field.val("");
      group.find(".categories").append($("<div class='category item new'>").attr("title", value).append($("<input class='ellipsis form-control' name='" + categories + "[]' value='" + value + "' type='text' >")).append($("<div class='item-action'> <a class='remove_category' onclick='TwygoQuestionListManagement.editCategory(this)' href='javascript:void(0)'><i class='icon-pencil'></i></a> <a class='edit_category' onclick='TwygoQuestionListManagement.removeCategory(this)' href='javascript:void(0)'><i class='icon-times'></i></a> </div>")));
      return this.fixCategoryStripes(categories);
    },
    editCategory: function(category) {
      $(category).closest('.category').find("input[type=text]").removeProp('readonly').select();
      return $(category).closest('.category').find("input[type=text]").removeAttr('readonly').select();
    },
    removeCategory: function(category) {
      var categories;
      categories = $(category).parents(".new-field").attr("id");
      $(category).closest('.category').remove();
      return this.fixCategoryStripes(categories);
    }
  };

}).call(this);
(function() {
  this.TwygoQuestionManagement = {
    send_reminders: function(event_id) {
      $(".bt-reminder").hide();
      $(".send_remind_loader").show();
      return $.ajax({
        url: "/e/" + event_id + "/send_reminders",
        dataType: 'json',
        type: 'post',
        success: function(response) {
          $(".bt-reminder").show();
          $(".send_remind_loader").hide();
          return TwygoFlashMessage.setMessage("notice", I18n.t('email_sent'));
        }
      });
    },
    accept_question: function(id) {
      var element;
      element = this;
      return $.ajax({
        url: "/q/" + id + "/accept",
        dataType: 'json',
        type: 'put',
        success: function(response) {
          TwygoFlashMessage.setMessage("notice", I18n.t("question_accept_success"));
          $('.question_content[question_id=' + id + ']').children('div.question_options').children('div.accept_question').remove();
          return $('.question_content[question_id=' + id + ']').find('.edit_answer_' + id).fadeIn(500);
        }
      });
    },
    answer_question: function(id, live_flag) {
      var answer;
      if (live_flag) {
        answer = I18n.t('answer_live');
      } else {
        answer = $('.answer_' + id).val();
      }
      if (answer === "") {
        TwygoFlashMessage.setMessage("alert", I18n.t('enter_response'));
        $("#answer_" + id).focus();
        return false;
      }
      return $.ajax({
        url: "/q/" + id + "/answer",
        data: {
          answer: answer
        },
        dataType: 'json',
        type: 'put',
        success: function(response) {
          TwygoFlashMessage.setMessage("notice", I18n.t('question_answered'));
          return $('.edit_answer_' + id).fadeOut(500, function() {
            $('.answer_' + id).attr("value", answer);
            $('.text_answer_' + id).html(response.answer);
            $('.question_edit_' + id).fadeIn(500);
            return $('.text_answer_' + id).fadeIn(500);
          });
        }
      });
    },
    update_question: function(id, question) {
      $(".question_answer_" + id).html(question);
      return $(".question_answer_" + id).fadeIn(500);
    },
    edit_question: function(id) {
      return $(".text_answer_" + id).fadeOut(500, function() {
        $("#label_" + id).hide();
        $('.answer_' + id).attr("rows", 5);
        return $(".edit_answer_" + id).fadeIn(500, function() {
          return $('.answer_' + id).focus();
        });
      });
    },
    refuse_question: function(id) {
      var answer;
      answer = confirm(I18n.t('confirm_decline_question'));
      if (answer) {
        return $.ajax({
          url: "/q/" + id + "/refuse",
          dataType: 'json',
          type: 'post',
          success: function(response) {
            $('.question_content[question_id=' + id + ']').remove();
            return TwygoFlashMessage.setMessage("notice", I18n.t('question_rejected'));
          }
        });
      }
    },
    remove_question: function(id) {
      return $('.question_content[question_id=' + id + ']').fadeOut(500, function() {
        return $('.question_content[question_id=' + id + ']').remove();
      });
    },
    set_question: function(id, question, answer, time, user_id, user_name, photo_url) {
      time = TwygoTimeAgo.timeToString(time);
      $(".questions").prepend(("<div class='question_content' question_id='" + id + "' style='display:none'> <div class='radio-label'> <img height='35px' src='" + photo_url + "' width='35px'> </div> <div class='question_desc'> <p> <a class='question_link' href='#' onclick=\"window.location.href='/p/" + user_id + "'\" style='text-decoration: none !important'> " + user_name + " </a> " + (' - ' + question) + " </p> <div class='last_time'> <abbr class='relatize'> " + time + " </abbr> </div> <p class='question_answer_" + id + "' style='margin-left:8px; color:#6e9733; display:none'> </p> </div> <div class='separator' style='float:none'> <img alt='Separator' src='") + $('.hidden_separator:first').children('img').attr('src') + "' style='width: 93%;height: 1px;'/> </div> </div>");
      return $('.question_content[question_id=' + id + ']').fadeIn(500);
    },
    add_question: function(id, question, time, user_id, user_name, photo_url) {
      time = TwygoTimeAgo.timeToString(time);
      $(".questions").prepend(("<div class='question_content' question_id='" + id + "' style='display:none'> <div class='radio-label'> <img height='35px' src='" + photo_url + "' width='35px'> </div> <div class='question_desc' style='width:420px'> <p> <a class='question_link' href='#' onclick=\"window.location.href='/p/" + user_id + "'\" style='text-decoration: none !important'> " + user_name + " </a> " + (' - ' + question) + " </p> <div class='last_time'> <abbr class='relatize'> " + time + " </abbr> </div> <p class='text_answer_" + id + "' style='margin-left: 8px;color:#6e9733; display:none'> </p> <div class='edit_answer edit_answer_" + id + "' style='display:none'> <br> <label class='question_label' for='answer_" + id + "' id='label_" + id + "'> " + (I18n.t('insert_answer')) + " </label> <textarea class='answer_" + id + " question_text_area' cols='50' id='answer_" + id + "' onblur='try{if($(\"*:focus\").attr(\"class\").indexOf(\"green_btn\") == -1){if($(\"#answer_" + id + "\").attr(\"value\") == \"\"){$(\"#label_" + id + "\").show()};this.rows = \"1\"}}catch(err){if($(\"#answer_" + id + "\").attr(\"value\") == \"\"){$(\"#label_" + id + "\").show()};this.rows = \"1\"};' onfocus='$(\"#label_" + id + "\").hide();this.rows = \"5\";' rows='1'></textarea> <br> <br> <a class='answer_question green_link green_btn' href='#' onclick='TwygoQuestionManagement.answer_question(" + id + ",false);return false;' onmousedown='return false;'> " + (I18n.t('reply')) + " </a> <a class='answered_live green_link green_btn' href='#' onclick='TwygoQuestionManagement.answer_question(" + id + ",true);return false;' onmousedown='return false;'> " + (I18n.t('live')) + " </a> <br> <br> </div> </div> <div class='question_options'> <div class='accept_question' onclick='TwygoQuestionManagement.accept_question(" + id + ");return false;'></div> <div class='edit_question question_edit_" + id + "' onclick='TwygoQuestionManagement.edit_question(" + id + ");return false;' style='display:none'></div> <div class='reject_question' onclick='TwygoQuestionManagement.refuse_question(" + id + ");return false;'></div> </div> <div class='separator' style='float:none'> <img alt='Separator' src='") + $('.hidden_separator:first').children('img').attr('src') + "' /> </div> </div>");
      return $('.question_content[question_id=' + id + ']').fadeIn(500);
    }
  };

}).call(this);
(function() {
  this.TwygoQuestionsManagement = {
    initialize: function(question_list_id) {
      this._count_answer;
      this.question_list_id = question_list_id;
      this.table_div = "#questions-page";
      this.question_number = 1;
      this.answer_number = 1;
      this.question_list = {};
      this.answer_list = {};
      this.requestCategoryLabels();
      this.requestQuestionList();
      return $("#questions-container").on("click", ".remove-answer", function() {
        return $(this).parents(".answers_options").remove();
      });
    },
    requestCategoryLabels: function() {
      return $.ajax({
        url: "/o/" + TwygoApplication.currentOrganizationId + "/question_lists/" + this.question_list_id + "/get_category_labels",
        dataType: 'json',
        type: 'get',
        complete: function(response) {
          return TwygoQuestionsManagement.category_labels = JSON.parse(response.responseText);
        }
      });
    },
    requestQuestionList: function() {
      return $.ajax({
        url: "/o/" + TwygoApplication.currentOrganizationId + "/question_lists/" + this.question_list_id,
        dataType: 'json',
        type: 'get',
        complete: function(response) {
          var t;
          (t = TwygoQuestionsManagement).question_list = JSON.parse(response.responseText);
          return t.loadQuestions();
        }
      });
    },
    loadQuestions: function() {
      var t;
      (t = TwygoQuestionsManagement).clearTable();
      return this.requestQuestions(function(list) {
        var item, j, len, ref;
        ref = list.questions;
        for (j = 0, len = ref.length; j < len; j++) {
          item = ref[j];
          t.table().append(t.row(item), t.under_row(item));
        }
        return t.questions = list.questions;
      });
    },
    requestQuestions: function(success) {
      if (window.$loadingQuestionList) {
        return;
      }
      window.$loadingQuestionList = true;
      return $.ajax({
        url: "/o/" + TwygoApplication.currentOrganizationId + "/question_lists/" + this.question_list_id + "/get_questions",
        success: success,
        dataType: 'json',
        type: 'get',
        complete: function(response) {
          TwygoApplication.changeBreadcrumOnEvents(JSON.parse(response.responseText).question_list);
          return window.$loadingQuestionList = false;
        }
      });
    },
    table: function() {
      return $("table#questions");
    },
    clearTable: function() {
      return this.table().find("tr:not(:has(th))").remove();
    },
    defaultHeader: function() {
      return $(".page-header").text("Perguntas");
    },
    sanitizeText: function(text) {
      return (text || "").replace(/&(?!\w+([;\s]|$))/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;");
    },
    row: function(item) {
      var id, td, title, tr;
      id = item !== void 0 ? item.id : 'new-' + this.question_number++;
      title = item !== void 0 ? this.sanitizeText(item.title) : '';
      if (item === void 0) {
        item = {};
      }
      tr = $("<tr id='question-" + id + "'>").attr("title", this.cleanupText(item.description));
      td = $("<td class='ellipsis' style='display: flex;'>");
      td.append($("<span class='status'>").addClass(item.is_disable ? "status-disabled" : "status-enabled").text(""));
      td.append($("<span class='category2 category'>").text(item.category2));
      td.append($("<span class='category1 category'>").text(item.category1));
      td.append("<input id='title' style='height: 37px;' value='" + title + "' placeholder='" + (title === '' ? '' + I18n.t('whats_your_question') + "" : "") + "'>");
      tr.append(td);
      return tr.append($("<td class='linkv open-details table-marker' width='64px'>").append($("<button class='div-question div-table-arrow-down btn btn-default'> <i class='icon-chevron-down-1'></i>")).click(function() {
        return TwygoQuestionsManagement.openDetails(id);
      }));
    },
    under_row: function(item) {
      var id, tr;
      id = item !== void 0 ? item.id : 'new-' + this.question_number++;
      tr = $("<tr class='question-hidden-row' style='height: auto; padding:0px; width: 100%; display: none' id='question-hidden-row-" + id + "'>");
      return tr.append($("<td colspan='2'>"));
    },
    openDetails: function(id) {
      if ($("table#questions #question-" + id + " .open-details .div-question").hasClass("div-table-arrow-down")) {
        $("table#questions #question-" + id + " .open-details .div-question").removeClass("div-table-arrow-down").addClass("div-table-arrow-up");
        if ($("tr[id='question-hidden-row-" + id + "'] td").html() === "") {
          this.hiddenRow(id);
        }
        this.showAnswers(id);
        $("#question-hidden-row-" + id).slideDown(200, function() {
          return setTimeout(function() {
            return $("#question-" + id).slideDown(200);
          }, 100);
        });
        return $('html,body').stop().animate({
          scrollTop: $('tr#question-' + id).offset().top
        }, 800);
      } else {
        $("table#questions #question-" + id + " .open-details .div-question").removeClass("div-table-arrow-up").addClass("div-table-arrow-down");
        return $("#question-hidden-row-" + id).slideUp(200);
      }
    },
    hiddenRow: function(id) {
      var answers_field, answers_scale, answers_scale_1, answers_scale_2, answers_table, box_1, box_2, buttons, category1, category1_field, category1_select, category2, category2_field, category2_select, col_1, col_2, data_mustache, description, description_field, div, element, end_scale, explanation, explanation_field, i, index, is_disable, is_disable_field, item, j, k, kind, kind_field, kind_select, len, len1, order, order_field, question_item, ref, ref1, require_answer, start_scale;
      if (id == null) {
        id = 0;
      }
      data_mustache = {};
      question_item = ((function() {
        var j, len, ref, results1;
        ref = TwygoQuestionsManagement.questions;
        results1 = [];
        for (index = j = 0, len = ref.length; j < len; index = ++j) {
          i = ref[index];
          if (i.id === id) {
            results1.push([index + 1, i]);
          }
        }
        return results1;
      })())[0];
      item = question_item !== void 0 ? question_item[1] : void 0;
      id = item !== void 0 ? item.id : 'new-' + (this.question_number - 1);
      description = item !== void 0 ? item.description : '';
      order = item !== void 0 ? item.question_order : $("table#questions tr[class='question-hidden-row']").length + 1;
      if (order === null) {
        order = question_item[0];
      }
      kind = item !== void 0 ? item.kind : '';
      explanation = item !== void 0 ? item.explanation : '';
      category1 = item !== void 0 ? item.category1 : '';
      category2 = item !== void 0 ? item.category2 : '';
      is_disable = item !== void 0 ? item.is_disable : false;
      require_answer = item !== void 0 ? item.require_answer : false;
      start_scale = item !== void 0 ? item.start_scale : 1;
      end_scale = item !== void 0 ? item.end_scale : 5;
      div = $("<div class='row'>");
      box_1 = $("<div class='box form-wrap'>");
      box_2 = $("<div class='box form-wrap'>");
      col_1 = $("<div class='col-md-6'>");
      col_2 = $("<div class='col-md-6'>");
      description_field = $("<div class='form-row ck-text'>");
      description_field.append(("<label for='description_" + id + "'>") + I18n.t('activerecord.attributes.event_content.description') + "</label>");
      description_field.append("<textarea id='description_" + id + "' rows='10' class='form-control'>" + description + "</textarea>");
      description_field.append("<script>TwygoRichText.initialize(['description_" + id + "'], {filebrowserImageBrowseUrl: TwygoOrganization.manageImages, resize_enabled: false,  toolbars: [{ name: 'insert', items : ['Table'] },{ name: 'links', items: [ 'Link', 'Unlink' ] } ]} )</script>");
      order_field = $("<div class='form-row order'>");
      order_field.append("<label for='order'>" + I18n.t('ordering_of_question') + "</label>");
      order_field.append("<input class='form-control' type='text' id='order' value='" + order + "'}>");
      kind_field = $("<div class='form-row type_question'>");
      kind_field.append($("<label for='kind'>").html(I18n.t('question_type')));
      kind_select = $("<select class='form-control select' id='kind' onChange='TwygoQuestionsManagement.showAnswers(\"" + id + "\")'>");
      kind_select.append($("<option " + (kind === 'single' ? 'selected' : '') + "></option>").attr("value", "single").text(I18n.t('single_choice')));
      kind_select.append($("<option " + (kind === 'multiple' ? 'selected' : '') + "></option>").attr("value", "multiple").text(I18n.t('multiple_choice')));
      kind_select.append($("<option " + (kind === 'scale' ? 'selected' : '') + "></option>").attr("value", "scale").text(I18n.t('activerecord.attributes.event_participant.range_of_values')));
      kind_select.append($("<option " + (kind === 'text' ? 'selected' : '') + "></option>").attr("value", "text").text(I18n.t('activerecord.attributes.event_participant.text')));
      kind_select.append($("<option " + (kind === 'file' ? 'selected' : '') + "></option>").attr("value", "file").text(I18n.t('activerecord.attributes.csv_import.file')));
      kind_field.append(kind_select);
      is_disable_field = $("<div class='form-row checks-content'>");
      is_disable_field.append("<span class='checkbox-content left'> <span class='input'> <input type='checkbox' style='margin-left: 2px' id='is_disable' " + (is_disable === true ? 'checked' : '') + "> <span class='checkmark'></span> </span> <label for='is_disable' style='vertical-align: bottom'> " + (I18n.t('activerecord.attributes.event_content.question_disabled')) + " </label> </span>");
      is_disable_field.append("<span class='checkbox-content left'> <span class='input'> <input type='checkbox' style='margin-left: 2px' id='require_answer' " + (require_answer === true ? 'checked' : '') + "> <span class='checkmark'></span> </span> <label for='require_answer' style='vertical-align: bottom'> " + (I18n.t('activerecord.attributes.event_content.is_required')) + "   </label> </span>");
      answers_field = $("<div class='form-row field full' id='answers_" + id + "'>");
      answers_scale = $("<div id='answers_scale_" + id + "'>");
      answers_scale_1 = $("<div class='field'>");
      answers_scale_1.append("<label for='start_scale'>" + I18n.t('initial_value') + " ");
      answers_scale_1.append("<input type='text' id='start_scale' value='" + start_scale + "'>");
      answers_scale_2 = $("<div class='field'>");
      answers_scale_2.append("<label for='end_scale'> " + I18n.t('final_value') + " ");
      answers_scale_2.append("<input type='text' id='end_scale' value='" + end_scale + "'>");
      answers_scale.append(answers_scale_1);
      answers_scale.append(answers_scale_2);
      answers_table = $("<div id='answers_table_" + id + "'>").append($("<table id='answers_" + id + "' width='100%' style='border:0px'>"));
      answers_field.append(answers_scale);
      answers_field.append(answers_table);
      answers_field.append(("<div id='add_answer_" + id + "' class='add_answer__content'><button type='button' class='green_btn inline' id='add_answer' onClick='TwygoQuestionsManagement.addAnswer(\"" + id + "\", undefined, true)'>") + I18n.t('plus_answer') + "</button>");
      explanation_field = $("<div class='form-row  field full'>");
      explanation_field.append("<label for='explanation'>" + I18n.t('explanation') + "</label>");
      explanation_field.append("<textarea id='explanation' rows='6' class='form-control'>" + explanation + "</textarea>");
      category1_field = $("<div class='form-row  field-cat field-cat-1'>");
      category1_select = $("<select id='category1' class='form-control select'>");
      category1_select.append($("<option value=''></option>").text(I18n.t('without_category')));
      ref = this.question_list.categories1 || [];
      for (j = 0, len = ref.length; j < len; j++) {
        element = ref[j];
        category1_select.append($("<option " + (element === category1 ? 'selected' : '') + "></option>").attr("value", element).text(element));
      }
      category1_field.append("<label for='category1'> " + TwygoQuestionsManagement.category_labels.categories1_label + "</label>");
      category1_field.append(category1_select);
      category2_field = $("<div class='form-row  field-cat  field-cat-2'>");
      category2_select = $("<select id='category2' class='form-control select'>");
      category2_select.append($("<option value=''></option>").text(I18n.t('without_category')));
      ref1 = this.question_list.categories2;
      for (k = 0, len1 = ref1.length; k < len1; k++) {
        element = ref1[k];
        category2_select.append($("<option " + (element === category2 ? 'selected' : '') + "></option>").attr("value", element).text(element));
      }
      category2_field.append("<label for='category2'>" + TwygoQuestionsManagement.category_labels.categories2_label + "</label>");
      category2_field.append(category2_select);
      buttons = $("<div class='form-row actions'>");
      buttons.append(("<button type='button' class='btn btn-primary' id='save_question' onClick='TwygoQuestionsManagement.saveButton(\"" + id + "\")'>") + I18n.t("views.events.save") + "</button>");
      buttons.append(("<button type='button' class='btn btn-primary' id='save_and_new_question' onClick='TwygoQuestionsManagement.saveButton(\"" + id + "\", true)'>") + I18n.t("views.events.save_and_new") + "</button>");
      buttons.append(("<button type='button' class='btn btn-danger ghost' id='remove_question' onclick='TwygoQuestionsManagement.removeButton(\"" + id + "\")'>") + I18n.t('_remove') + "</button>");
      this.requestAnswers(id);
      box_1.append(description_field);
      box_1.append(order_field);
      box_1.append(kind_field);
      box_1.append(is_disable_field);
      box_1.append(explanation_field);
      box_1.append(category1_field);
      box_1.append(category2_field);
      box_2.append(answers_field);
      col_1.append(box_1);
      col_2.append(box_2);
      div.append(col_1);
      div.append(col_2);
      div.append(buttons);
      if (item !== void 0) {
        return $("tr[id='question-hidden-row-" + id + "'] td").html(div);
      } else {
        return $("<tr class='question-hidden-row' style='height: auto; width: 680px; display: none' id='question-hidden-row-" + id + "'>").append($("<td colspan='2' style='width: 680px'>").append(div));
      }
    },
    getTypSelect: function(selected, _type) {
      var _op_file, _op_multiple, _op_scale, _op_single, _op_text, _select, ref, ref1, ref2, ref3, ref4;
      if (_type == null) {
        _type = 'json';
      }
      _select = [];
      _op_single = {
        label: I18n.t('single_choice'),
        value: 'single',
        sel: (ref = selected === 'single') != null ? ref : {
          "true": false
        }
      };
      _op_multiple = {
        label: I18n.t('multiple_choice'),
        value: 'multiple',
        sel: (ref1 = selected === 'multiple') != null ? ref1 : {
          "true": false
        }
      };
      _op_scale = {
        label: I18n.t('activerecord.attributes.event_participant.range_of_values'),
        value: 'scale',
        sel: (ref2 = selected === 'scale') != null ? ref2 : {
          "true": false
        }
      };
      _op_text = {
        label: I18n.t('activerecord.attributes.event_participant.text'),
        value: 'text',
        sel: (ref3 = selected === 'text') != null ? ref3 : {
          "true": false
        }
      };
      _op_file = {
        label: I18n.t('activerecord.attributes.csv_import.file'),
        value: 'file',
        sel: (ref4 = selected === 'file') != null ? ref4 : {
          "true": false
        }
      };
      _select.push(_op_single);
      _select.push(_op_multiple);
      _select.push(_op_scale);
      _select.push(_op_text);
      _select.push(_op_file);
      return _select;
    },
    getAnswerMustache: function(data_answer) {
      return Mustache.render($('#form_edit_question__answers').html(), data_answer);
    },
    getAnswerMustacheInput: function(kind, element) {
      var _kind, checked;
      _kind = {};
      _kind.name = "answers_" + element.id + "__question_" + element.question_id;
      if (kind === 'single') {
        _kind.label = 'radiobox';
      }
      if (kind === 'multiple') {
        _kind.label = 'checkbox';
      }
      checked = '';
      if (element.is_correct) {
        checked = 'checked="true"';
      }
      if (typeof _kind.label !== void 0) {
        _kind.input = '<input id="' + _kind.name + '" name="' + _kind.name + '" ' + checked + ' type="' + _kind.label + '">';
      }
      return _kind;
    },
    mountMustacheTemplate: function(data_mustache) {
      var _render;
      _render = Mustache.render($('#form_edit_question').html(), data_mustache);
      $("tr[id='question-hidden-row-" + data_mustache.id + "'] td").html(_render);
      return $.ajax({
        url: "/o/" + TwygoApplication.currentOrganizationId + "/question_lists/" + data_mustache.id + "/get_answers/",
        dataType: 'json',
        type: 'get',
        beforeSend: function() {
          return $('#question_answers_' + data_mustache.id).addClass('loading');
        },
        complete: function(response) {
          return response.responseJSON.forEach(function(element, index) {
            var _element, _render_answer;
            _element = jQuery.extend(element, TwygoQuestionsManagement.getAnswerMustacheInput(data_mustache.kind, element));
            _render_answer = TwygoQuestionsManagement.getAnswerMustache(_element);
            $('#question_answers_' + data_mustache.id).removeClass('loading');
            return $('#question_answers_' + data_mustache.id).append(_render_answer);
          });
        }
      });
    },
    requestAnswers: function(id) {
      return $.ajax({
        url: "/o/" + TwygoApplication.currentOrganizationId + "/question_lists/" + id + "/get_answers/",
        dataType: 'json',
        type: 'get',
        complete: function(response) {
          return TwygoQuestionsManagement.loadAnswers(id, JSON.parse(response.responseText));
        }
      });
    },
    loadAnswers: function(id, answers) {
      var element, j, len;
      this._count_answer = 1;
      for (j = 0, len = answers.length; j < len; j++) {
        element = answers[j];
        this.addAnswer(id, element, false);
      }
      if (answers.length === 0) {
        this.addAnswer(id);
        return this.addAnswer(id);
      }
    },
    showAnswers: function(id) {
      var kind;
      kind = $("#question-hidden-row-" + id + " #kind option:selected").val();
      $("#answers_" + id).show();
      $("#answers_table_" + id).hide();
      $("#answers_" + id + " td#1").hide();
      $("#answers_" + id + " td#2").hide();
      $("#add_answer_" + id).hide();
      $("#answers_scale_" + id).hide();
      if (kind === "single") {
        $("#answers_table_" + id).attr("style", "display:block");
        $("#add_answer_" + id).attr("style", "display:block");
        return $("#answers_" + id + " td#1").show();
      } else if (kind === "multiple") {
        $("#answers_table_" + id).attr("style", "display:block");
        $("#add_answer_" + id).attr("style", "display:block");
        return $("#answers_" + id + " td#2").show();
      } else if (kind === "scale") {
        return $("#answers_scale_" + id).attr("style", "display:block");
      } else {
        return $("#answers_" + id).hide();
      }
    },
    addQuestion: function() {
      $(".no_questions").hide();
      this.table().append(this.row(), this.hiddenRow());
      $('tr#question-new-' + (this.question_number - 1) + ' input#title').focus();
      this.openDetails('new-' + (this.question_number - 1));
      return $('html,body').stop().animate({
        scrollTop: $('tr#question-new-' + (this.question_number - 1)).offset().top - $("#top").height()
      }, 800);
    },
    addAnswer: function(question_id, element, focus) {
      var _i, description, id, is_correct, kind, tr;
      if (focus == null) {
        focus = false;
      }
      _i = this._count_answer;
      id = element !== void 0 ? element.id : 'new-' + (this.answer_number++);
      description = element !== void 0 ? element.description : '';
      is_correct = element !== void 0 ? element.is_correct : false;
      kind = $("#question-hidden-row-" + question_id + " #kind").val();
      tr = $("<tr class='answers_options' style='background: none;border:0px'>");
      if (this.question_list.kind === 'exam') {
        tr.append($("<td width='3%' class='column-mediun' id='1' style='display: none; vertical-align: top'>").append($(("<label class='radiobox-content left'> <span class='input'> <input type='radio' name='answers_" + question_id + "' id='answers_" + question_id + "' " + (is_correct ? 'checked' : '') + " value='") + id + "'> <span class='radiomark'></span> </span> <b>#" + I18n.t('answer', {
          count: _i
        }) + "</b> </label>")));
        tr.append($("<td width='3%' class='column-mediun' id='2' style='display: none; vertical-align: top'>").append($(("<label class='checkbox-content left'> <span class='input'> <input type='checkbox' name='answers_" + question_id + "' id='answers_" + question_id + "' " + (is_correct ? 'checked' : '') + " value='") + id + "'> <span class='checkmark'></span> </span> <b>#" + I18n.t('answer', {
          count: _i
        }) + "</b> </label>")));
      }
      tr.append($("<td width='97%' class='column-full' id='3' style='padding-top:10px;padding-bottom:10px;position:relative'>").append($("<div>").attr("title", I18n.t('delete_answer')).addClass("remove-answer")).append("<textarea class='form-control' id='answer_" + id + "' style='height: 40px; width: 100%;'>" + description + "</textarea>").append("<script> TwygoRichText.initialize(['answer_" + id + "'], {filebrowserImageBrowseUrl: TwygoOrganization.manageImages, height: 82, resize_enabled: true, toolbars: [{ name: 'insert', items : ['Table'] },{ name: 'links', items: [ 'Link', 'Unlink' ] } ]} )</script>"));
      if (focus) {
        setTimeout(function() {
          return CKEDITOR.instances["answer_" + id].focus();
        }, 100);
      }
      $("table#answers_" + question_id).addClass('answers-table').append(tr);
      this.showAnswers(question_id);
      return ++this._count_answer;
    },
    cancelButton: function() {
      TwygoQuestionsManagement.defaultHeader();
      $('#breadcrumb').text("");
      return $("#manage-question_lists").fadeOut("fast", function() {
        return $("#table-question_lists-info").fadeIn("fast");
      });
    },
    cancelCopyButton: function() {
      TwygoQuestionsManagement.defaultHeader();
      return $("#manage-copy_question_lists").fadeOut("fast", function() {
        return $("#manage-question_lists").fadeIn("fast");
      });
    },
    removeButton: function(id) {
      var remove;
      remove = confirm(I18n.t('confirm_delete_question'));
      if (remove) {
        if (!isNaN(id)) {
          return $.ajax("/o/" + TwygoApplication.currentOrganizationId + "/question_lists/" + this.question_list_id + "/remove_question/" + id, {
            complete: function(response) {
              var questions, result;
              result = JSON.parse(response.responseText);
              if (!result.is_removed) {
                TwygoFlashMessage.setMessage("error", I18n.t('question_cant_be_deleted'));
                return remove = false;
              } else {
                $("#question-" + id).remove();
                $("#question-hidden-row-" + id).remove();
                questions = parseInt($("#question-list-" + TwygoQuestionsManagement.question_list_id + " .question_count").text()) - 1;
                return $("#question-list-" + TwygoQuestionsManagement.question_list_id + " .question_count").attr('title', questions).text(questions);
              }
            }
          });
        } else {
          $("#question-" + id).remove();
          return $("#question-hidden-row-" + id).remove();
        }
      }
    },
    cleanupText: function(text) {
      text = text || "";
      return $("<div>").html(text.replace(/(<([^>]+)>)/ig, "")).text();
    },
    disableQuestionSaveButton: function() {
      return $("#save_question").attr("disabled", true);
    },
    enableQuestionSaveButton: function() {
      return $("#save_question").attr("disabled", false);
    },
    saveButton: function(id, save_and_new) {
      var answer_description, answer_id, answersParams, category1, category2, check_index, ckeditor, description, element, end_scale, explanation, is_correct, is_disable, j, kind, len, order, params, ref, require_answer, start_scale, title;
      if (save_and_new == null) {
        save_and_new = false;
      }
      title = $("#question-" + id + " #title")[0].value;
      description = CKEDITOR.instances["description_" + id].getData();
      order = $("#question-hidden-row-" + id + " #order")[0].value;
      kind = $("#question-hidden-row-" + id + " #kind")[0].value;
      explanation = $("#question-hidden-row-" + id + " #explanation")[0].value;
      category1 = $("#question-hidden-row-" + id + " #category1")[0].value;
      category2 = $("#question-hidden-row-" + id + " #category2")[0].value;
      is_disable = $("#question-hidden-row-" + id + " #is_disable").prop("checked");
      require_answer = $("#question-hidden-row-" + id + " #require_answer").prop("checked");
      start_scale = $("#question-hidden-row-" + id + " #start_scale")[0].value;
      end_scale = $("#question-hidden-row-" + id + " #end_scale")[0].value;
      answersParams = [];
      if (kind === 'single' || kind === 'multiple') {
        check_index = 0;
        ref = $("table#answers_" + id + " .answers_options td#3 textarea");
        for (j = 0, len = ref.length; j < len; j++) {
          element = ref[j];
          answer_id = element.id.split("_").pop();
          answer_description = CKEDITOR.instances[element.id].getData();
          ckeditor = CKEDITOR.instances[element.id];
          is_correct = $("input#answers_" + id).length;
          if (is_correct) {
            is_correct = kind === 'single' ? $("input#answers_" + id)[check_index].checked : $("input#answers_" + id)[check_index + 1].checked;
          }
          check_index += 2;
          if (!!answer_description) {
            answersParams.push({
              answer_id: answer_id,
              description: answer_description,
              is_correct: is_correct
            });
          }
        }
      }
      params = {
        question_id: id,
        title: title,
        description: description,
        kind: kind,
        order: order,
        explanation: explanation,
        category1: category1,
        category2: category2,
        is_disable: is_disable,
        require_answer: require_answer,
        start_scale: start_scale,
        end_scale: end_scale,
        answers: answersParams
      };
      return $.ajax("/o/" + TwygoApplication.currentOrganizationId + "/question_lists/" + this.question_list_id + "/save_questions", {
        data: params,
        beforeSend: function() {
          return TwygoQuestionsManagement.disableQuestionSaveButton();
        },
        complete: function(response) {
          var q, qr, question_count, question_id;
          TwygoQuestionsManagement.enableQuestionSaveButton();
          if (isNaN(response.responseText)) {
            return TwygoFlashMessage.setMessage('error', response.responseText);
          }
          question_id = response.responseText;
          q = $("#question-" + id);
          qr = $("#question-hidden-row-" + id);
          q.attr("title", TwygoQuestionsManagement.cleanupText(description));
          if (is_disable) {
            q.find(".status").removeClass("status-enabled").addClass("status-disabled");
          } else {
            q.find(".status").removeClass("status-disabled").addClass("status-enabled");
          }
          q.find(".category1").text(category1);
          q.find(".category2").text(category2);
          if (isNaN(id)) {
            $("#question-" + id).attr("id", "question-" + question_id);
            $("#question-hidden-row-" + id).attr("id", "question-hidden-row-" + question_id);
            CKEDITOR.instances["description_" + question_id] = CKEDITOR.instances["description_" + id];
            $("#question-hidden-row-" + question_id + " #save_question").attr("onClick", "TwygoQuestionsManagement.saveButton('" + question_id + "')");
            $("#question-hidden-row-" + question_id + " #save_and_new_question").attr("onClick", "TwygoQuestionsManagement.saveButton('" + question_id + "',true)");
            $("#question-hidden-row-" + question_id + " #remove_question").attr("onClick", "TwygoQuestionsManagement.removeButton('" + question_id + "')");
            $("tr#question-" + id).attr("id", "question-" + question_id);
            $("tr#question-" + question_id + " td.open-details").attr("onClick", "TwygoQuestionsManagement.openDetails('" + question_id + "')");
            $("tr#question-hidden-row-" + id + " select#kind").attr("onChange", "TwygoQuestionsManagement.showAnswers('" + question_id + "')");
            $("tr#question-hidden-row-" + id).attr("id", "question-hidden-row-" + question_id);
            TwygoQuestionsManagement.questions.push(params);
          }
          if (kind === 'single' || kind === 'multiple') {
            $("#answers_scale_" + id).attr("id", "answers_scale_" + question_id);
            $("#answers_table_" + id).attr("id", "answers_table_" + question_id);
            $("table#answers_" + id).attr("id", "answers_" + question_id);
            $("#add_answer_" + id).attr("id", "add_answer_" + question_id);
            $("input#answers_" + id).attr("name", "answers_" + question_id);
            $("input#answers_" + id).attr("id", "answers_" + question_id);
            $("#add_answer_" + question_id + " #add_answer").attr("onClick", "TwygoQuestionsManagement.addAnswer('" + question_id + "')");
          }
          question_count = $("#questions > tbody > tr:not(.question-hidden-row):not([id*='new'])").length;
          $("#question-list-" + TwygoQuestionsManagement.question_list_id + " .question_count").attr("title", question_count).text(question_count);
          TwygoQuestionsManagement.openDetails(question_id);
          if (save_and_new) {
            setTimeout(function() {
              return TwygoQuestionsManagement.addQuestion();
            }, 200);
          }
          return TwygoFlashMessage.setMessage('notice', I18n.t('question_updated'));
        }
      });
    },
    questionsFilter: function() {
      var filter_text, hidden_question_row, i, is_open, question, question_row, results1, size;
      filter_text = $("#question-filter").val().toLowerCase().latinize();
      size = TwygoQuestionsManagement.questions.length;
      i = 0;
      results1 = [];
      while (i < size) {
        question_row = $("#questions tr[id^='question-']:eq(" + (i * 2) + ")");
        is_open = $("#questions tr[id^='question-']:eq(" + (i * 2) + ") .open-details .div-question").hasClass("div-table-arrow-up");
        hidden_question_row = $("#questions tr[id^='question-']:eq(" + ((i * 2) + 1) + ")");
        question = TwygoQuestionsManagement.questions[i];
        if (question.title.replace(/(<([^>]+)>)/ig, "").toLowerCase().latinize().indexOf(filter_text) > -1 || question.description.replace(/(<([^>]+)>)/ig, "").toLowerCase().latinize().indexOf(filter_text) > -1 || question.category1.replace(/(<([^>]+)>)/ig, "").toLowerCase().latinize().indexOf(filter_text) > -1 || question.category2.replace(/(<([^>]+)>)/ig, "").toLowerCase().latinize().indexOf(filter_text) > -1) {
          question_row.show();
          if (is_open) {
            hidden_question_row.show();
          }
        } else {
          question_row.hide();
          if (is_open) {
            hidden_question_row.hide();
          }
        }
        results1.push(i++);
      }
      return results1;
    },
    copyQuestions: function() {
      return $("#manage-copy_question_lists").load("/o/" + TwygoApplication.currentOrganizationId + "/question_lists/" + this.question_list_id + "/copy_questions", function() {
        return $("#manage-question_lists").fadeOut("fast", function() {
          return $("#manage-copy_question_lists").fadeIn("fast");
        });
      });
    },
    bindSearchQuestionList: function(id) {
      TwygoOrganization.removeEnterKey("question_list_name");
      return $("#question_list_name").on("keyup", function() {
        if (!($.trim($(this).val()).length < 2)) {
          return TwygoQuestionsManagement.triggerSearchQuestionList(id);
        }
      });
    },
    triggerSearchQuestionList: function(id) {
      clearInterval(TwygoMyNetwork.searchTrigger);
      return TwygoMyNetwork.searchTrigger = setTimeout(TwygoQuestionsManagement.search_question_list(id), 350);
    },
    search_question_list: function(id) {
      var questionListName;
      questionListName = $.trim($("#question_list_name").val());
      TwygoOrganization.showDetailsLoadingIndicator();
      return $.ajax({
        url: "/o/" + TwygoApplication.currentOrganizationId + "/question_lists/search",
        data: {
          question_list_name: questionListName,
          question_list_id: id
        },
        dataType: 'json',
        type: 'post',
        success: function(response) {
          TwygoOrganization.hideDetailsLoadingIndicator();
          return TwygoQuestionsManagement.questionsList(response);
        }
      });
    },
    questionsList: function(response) {
      var j, len, ref, result;
      if (response.results.length === 0) {
        $("#question_lists-page #question-copy #add_question_list .questionsList").hide();
      } else {
        $("#question_lists-page #question-copy #add_question_list .questionsList").show();
      }
      $("#question_lists-page #question-copy #add_question_list .questionsList").html("<ul>");
      ref = response.results;
      for (j = 0, len = ref.length; j < len; j++) {
        result = ref[j];
        $("#question_lists-page #question-copy #add_question_list .questionsList ul").append("<li onClick='TwygoQuestionsManagement.createQuestionList(this, " + (JSON.stringify(result)) + ");$(this).removeAttr(\"onclick\");' onmouseover='$(this).addClass(\"focused\")' onmouseout='$(this).removeClass(\"focused\")'> <div class='managerName ellipsis' style='max-width: 560px'>" + (result.name.truncate(110)) + "</div> </li>");
        $("#" + result.id).data("result", result);
        $("#question_lists-page #question-copy #add_question_list .questionsList").show();
      }
      return $("#question_lists-page #question-copy #add_question_list .questionsList ul").append("<li class='clear_manager' onClick='TwygoQuestionsManagement.closeList()' onmouseover='$(this).addClass(\"focused\")' onmouseout='$(this).removeClass(\"focused\")'>" + (I18n.t('views.cancel')) + "</li>");
    },
    closeList: function() {
      return $("#question_lists-page #question-copy #add_question_list .questionsList").hide();
    },
    createQuestionList: function(element, results) {
      var j, k, len, len1, ref, ref1;
      safePreventEvent(element);
      TwygoOrganization.showDetailsLoadingIndicator();
      TwygoQuestionsManagement.closeList();
      $("#question_list_name").val(results.name);
      $("#question_list_id").val(results.id);
      $(".label_1").text(results.categories1_label);
      $(".label_2").text(results.categories2_label);
      $('#question_params_questions_category1').html('');
      $('#question_params_questions_category1').append($('<option>', {
        value: '',
        text: I18n.t('all')
      }));
      $('#question_params_questions_category2').html('');
      $('#question_params_questions_category2').append($('<option>', {
        value: '',
        text: I18n.t('all')
      }));
      ref = results.categories1;
      for (j = 0, len = ref.length; j < len; j++) {
        element = ref[j];
        $('#question_params_questions_category1').append($('<option>', {
          value: element,
          text: element
        }));
      }
      ref1 = results.categories2;
      for (k = 0, len1 = ref1.length; k < len1; k++) {
        element = ref1[k];
        $('#question_params_questions_category2').append($('<option>', {
          value: element,
          text: element
        }));
      }
      return TwygoOrganization.hideDetailsLoadingIndicator();
    },
    copyQuestionList: function() {
      var category1, category2, question_list_id;
      question_list_id = $("#question_list_id").val();
      category1 = $("#question_params_questions_category1").find(":selected").val();
      category2 = $("#question_params_questions_category2").find(":selected").val();
      return $.ajax({
        url: "/o/" + TwygoApplication.currentOrganizationId + "/question_lists/" + this.question_list_id + "/copy",
        data: {
          question_list_id: question_list_id,
          category1: category1,
          category2: category2
        },
        dataType: 'json',
        type: 'post',
        success: function(response) {
          if (response === 0) {
            TwygoFlashMessage.setMessage("error", I18n.t('no_question_to_copy'));
          } else {
            TwygoFlashMessage.setMessage("success", I18n.t('questions_copied', {
              response: response
            }));
          }
          return TwygoQuestionsManagement.cancelCopyButton();
        }
      });
    }
  };

}).call(this);
(function() {
  var page;

  page = 0;

  this.TwygoRecommend = {
    initialize: function() {
      $(document).on("click", ".recommend_user_list.enabled", function() {
        var checkbox;
        checkbox = $(this).siblings("input:checkbox");
        return $(checkbox).click();
      });
      $(document).on("click", "#send_recommend", function(event) {
        return TwygoRecommend.selected_users();
      });
      $(document).on("click", ".mark-unmark-all", function() {
        return TwygoRecommend.mark_all(this);
      });
      $(document).on("click", "#who_more", function(event) {
        return TwygoRecommend.who_more();
      });
      return $(document).on("click", ".recommend_event", function() {
        return TwygoRecommend.loadRecommendModal(this);
      });
    },
    loadRecommendModal: function(element) {
      page = 0;
      return $(".twygo-recommend-event").modal({
        minWidth: 745,
        minHeight: 410,
        opacity: 50,
        position: [50],
        overlayClose: true,
        onShow: function() {
          return TwygoRecommend.net_list(element);
        }
      });
    },
    net_list: function(element) {
      element = $(element);
      return $.ajax({
        url: "/friends_accepted/?page=" + page + "&event_id=" + (element.attr('event_id')),
        type: "post",
        dataType: "json",
        success: function(response) {
          return $(".users_area").not(".administrators").userList(element, response);
        },
        error: function(response) {
          var message;
          message = jQuery.parseJSON(response.responseText);
          return $(".users_area").append("<p class='alert' style='padding: 10px; border: none; margin-top: 10px; color: #514721;border-radius: 5px;border: 1px solid #FFF6BF;'>" + message.error + "</p>");
        }
      });
    },
    load_list: function(element, response) {
      var avatar, disabled, full_name, i, len, ref, results, user;
      if (response.can_show_more_results) {
        $("#who_more").show();
      }
      if (!response.can_show_more_results) {
        $("#who_more").hide();
      }
      ref = response.users;
      results = [];
      for (i = 0, len = ref.length; i < len; i++) {
        user = ref[i];
        full_name = [user.first_name, user.last_name].join(" ");
        disabled = "enabled";
        if (jQuery.inArray(user.id, response.disabled_users) !== -1) {
          disabled = "disabled";
        }
        avatar = user.avatar_url || TwygoUser.avatar_src(user);
        results.push($(".users_area ul").append("<li class='recommend_friend_list'> <input class='checkbox select_friend " + disabled + "' type='checkbox' user='" + user.id + "' event_id='" + (element ? element.attr('event_id') : 0) + "' " + disabled + "> <div class='one-people gray_btn golist recommend_user_list " + disabled + "'> <div class='user-img " + disabled + "'> <a href='/p/" + user.id + "' target='_blank'><img alt='" + user.first_name + "' class='recommend_user_image_list' height='30' src='" + avatar + "'></a> </div> <div id='text-people' class='recommend_user_name " + disabled + "'> <div class='name'> <a href='/p/" + user.id + "' target='_blank' class='" + disabled + "'>" + full_name + "</a> </div> </div> </div> </li>"));
      }
      return results;
    },
    selected_users: function() {
      var checkbox, event_id, users;
      event_id = $(":checkbox.checkbox.select_friend.enabled").first().attr("event_id");
      users = (function() {
        var i, len, ref, results;
        ref = $("input:checked.checkbox.select_friend ");
        results = [];
        for (i = 0, len = ref.length; i < len; i++) {
          checkbox = ref[i];
          results.push($(checkbox).attr("user"));
        }
        return results;
      })();
      if (users.length > 0) {
        $.ajax({
          url: "/recommendations/network_recommend/" + users + "/" + event_id,
          type: "post",
          dataType: "json",
          success: function(response) {
            return TwygoFlashMessage.setMessage('notice', response.message);
          }
        });
      }
      return $.modal.close();
    },
    mark_all: function(element) {
      var mark_link;
      mark_link = $(element);
      if (mark_link.attr("all") === "false") {
        mark_link.text("Desmarcar todos").attr("all", "true");
        return $(":checkbox.enabled").attr("checked", true);
      } else {
        mark_link.text("Marcar todos").attr("all", "false");
        return $(":checkbox.enabled").attr("checked", false);
      }
    },
    who_more: function() {
      page += 1;
      return TwygoRecommend.net_list($(":checkbox.checkbox.select_friend").first());
    }
  };

}).call(this);
(function() {
  this.TwygoRichText = {
    initialize: function(elements, opts) {
      var editor_options;
      if (typeof CKEDITOR === "undefined") {
        return;
      }
      if (opts === void 0) {
        opts = {};
      }
      TwygoRichText.removerInstances(elements);
      TwygoRichText.initializePlugins();
      TwygoRichText.initializeConfiguration(opts);
      editor_options = opts.editor_options || {};
      if (opts.onReady) {
        editor_options.on = {
          instanceReady: opts.onReady
        };
      }
      TwygoRichText.removerInstances(elements);
      TwygoRichText.replacesInstances(elements, editor_options);
      return TwygoRichText.addDinamicStyle(elements);
    },
    initializeConfiguration: function(opts) {
      var bar, defaultConfiguration, i, len, ref;
      defaultConfiguration = TwygoRichText.getOptionsDefault();
      CKEDITOR.config.toolbar = defaultConfiguration.toolbar;
      if (opts.toolbars) {
        ref = opts.toolbars;
        for (i = 0, len = ref.length; i < len; i++) {
          bar = ref[i];
          CKEDITOR.config.toolbar.push(bar);
        }
      }
      CKEDITOR.config.font_names = "Arial;Helvetica;Verdana;Times New Roman";
      CKEDITOR.config.fontSize_sizes = "12/12px;14/14px;16/16px;18/18px;22/22px";
      CKEDITOR.config.fontSize_defaultLabel = "16px";
      CKEDITOR.config.removePlugins = "elementspath,resizer";
      CKEDITOR.config.filebrowserImageBrowseUrl = TwygoRichText.readParamFilebrowserImageBrowseUrl(opts.filebrowserImageBrowseUrl);
      CKEDITOR.config.toolbarCanCollapse = false;
      CKEDITOR.config.uiColor = "#ECECEC";
      CKEDITOR.config.resize_enabled = opts.resize_enabled || false;
      return CKEDITOR.config.height = opts.height || 200;
    },
    removerInstances: function(elements) {
      var element, i, instances, len, results;
      results = [];
      for (i = 0, len = elements.length; i < len; i++) {
        element = elements[i];
        instances = CKEDITOR.instances[elements];
        if (instances) {
          results.push(CKEDITOR.remove(instances));
        } else {
          results.push(void 0);
        }
      }
      return results;
    },
    replacesInstances: function(elements, editor_options) {
      var element, i, len, results;
      results = [];
      for (i = 0, len = elements.length; i < len; i++) {
        element = elements[i];
        if ($("#" + element).length > 0) {
          results.push(CKEDITOR.replace(element, editor_options));
        } else {
          results.push(void 0);
        }
      }
      return results;
    },
    addDinamicStyle: function(elements) {
      var prefixOfCkEditor;
      prefixOfCkEditor = "#cke_";
      return setTimeout(function() {
        var ckElementHTML, element, i, len, results;
        results = [];
        for (i = 0, len = elements.length; i < len; i++) {
          element = elements[i];
          ckElementHTML = $("" + prefixOfCkEditor + element);
          results.push(TwygoRichText.fixLinkButton(ckElementHTML));
        }
        return results;
      }, 500);
    },
    fixLinkButton: function(ckElementHTML) {
      var buttonsWithDifferentHeight;
      buttonsWithDifferentHeight = "a.cke_button";
      return ckElementHTML.find(buttonsWithDifferentHeight).each(function(index, button) {
        return button.style.height = "100%";
      });
    },
    setImagePath: function(path, parent) {
      var editor;
      editor = parent && parent.CKEDITOR || CKEDITOR;
      if (editor.dialog.getCurrent().getValueOf("info", "txtUrl") === path) {
        return;
      }
      return editor.dialog.getCurrent().setValueOf('info', 'txtUrl', path);
    },
    setVideoPath: function(path, parent) {
      var editor;
      editor = parent && parent.CKEDITOR || CKEDITOR;
      if (editor.dialog.getCurrent().getValueOf("info", "src") === path) {
        return;
      }
      return editor.dialog.getCurrent().setValueOf('info', 'src', path);
    },
    readParamFilebrowserImageBrowseUrl: function(filebrowserImageBrowseUrl) {
      if (typeof filebrowserImageBrowseUrl === 'function') {
        return filebrowserImageBrowseUrl();
      }
      return filebrowserImageBrowseUrl || null;
    },
    getOptionsDefault: function() {
      var DIVISION, TOOLBAR;
      DIVISION = "-";
      TOOLBAR = [["Bold", "Italic", "Underline", DIVISION, "NumberedList", "BulletedList", DIVISION, "FontSize", "Font", DIVISION, "JustifyLeft", "JustifyCenter", "JustifyRight", "JustifyBlock", "TextColor", DIVISION, "Table", "Source", DIVISION, "Image"]];
      return {
        toolbar: TOOLBAR
      };
    },
    initializePlugins: function() {
      CKEDITOR.plugins.addExternal('maxlength', '/assets/javascripts/ckeditor/plugins/maxlength/plugin.js');
      CKEDITOR.plugins.addExternal('filebrowser', '/assets/javascripts/ckeditor/plugins/filebrowser/plugin.js');
      return CKEDITOR.config.extraPlugins = 'sourcearea,maxlength,filebrowser';
    }
  };

}).call(this);
(function() {
  this.TwygoSearchFacets = {
    initialize: function() {
      return $("#filters .facet_filters input[type=checkbox]").click(function() {
        var ref;
        clearInterval((ref = typeof TwygoSearchFacets.filterInterval === 'undefined') != null ? ref : {
          0: TwygoSearchFacets.filterInterval
        });
        return TwygoSearchFacets.filterInterval = setTimeout(function() {
          var container, filters, loadMore, only_profile_events;
          filters = {};
          $('.facet_filters input[type=checkbox]').each(function(i, item) {
            var facet, val;
            facet = $(this).attr('facet');
            if (facet === void 0) {
              return;
            }
            if (filters[facet] === void 0) {
              filters[facet] = ['0'];
            }
            if (this.checked) {
              val = $(this).attr('value');
              filters[facet].push(val);
            }
            return true;
          });
          only_profile_events = $("#only_profile_events").is(":checked");
          window.$currentOnlyProfileEvents = only_profile_events;
          window.$currentFacetFilters = filters;
          container = $('#search-results');
          if (container.length === 0) {
            container = $('.events-timeline');
          }
          loadMore = $('.more-results', container);
          $(document).append(loadMore);
          container.empty();
          container.append(loadMore);
          TwygoPaginator.hideMoreResultsLoadingIndicator(loadMore);
          TwygoPaginator.showMoreResultsLoadingIndicator(loadMore);
          loadMore.show();
          if (TwygoSearchFacets.request && TwygoSearchFacets.request.state() !== 'resolved') {
            TwygoSearchFacets.request.abort();
          }
          if (loadMore.attr('data-url') === '/') {
            return TwygoSearchFacets.request = $.ajax(loadMore.attr('data-url'), {
              data: {
                facet_filters: $currentFacetFilters,
                only_profile_events: $currentOnlyProfileEvents
              },
              method: 'get',
              success: function(results) {
                if (results !== '0') {
                  container.append(results);
                } else {
                  container.append($('<div>', {
                    'class': 'no-results'
                  }).append(I18n.t('views.no_results_filters')));
                }
                container.append(loadMore);
                loadMore.data("currentResultsPage", 1);
                if ($("#cannot-show-more-results", container).size() > 0 || results === '0') {
                  loadMore.hide();
                } else {
                  loadMore.show();
                }
                return TwygoPaginator.hideMoreResultsLoadingIndicator(loadMore);
              }
            });
          } else {
            return TwygoSearchFacets.request = $.ajax(loadMore.attr('data-url'), {
              data: {
                q: $currentQueryString,
                page: 1,
                facet_filters: $currentFacetFilters,
                only_profile_events: $currentOnlyProfileEvents
              },
              method: 'get',
              success: function(results) {
                if (results !== '0') {
                  container.append(results);
                } else {
                  container.append($('<div>', {
                    'class': 'no-results'
                  }).append(I18n.t('views.no_results_filters')));
                }
                container.append(loadMore);
                loadMore.data("currentResultsPage", 1);
                if ($("#cannot-show-more-results", container).size() > 0 || results === '0') {
                  loadMore.hide();
                } else {
                  loadMore.show();
                }
                return TwygoPaginator.hideMoreResultsLoadingIndicator(loadMore);
              }
            });
          }
        }, 325);
      });
    }
  };

}).call(this);
(function() {
  this.TwygoSeos = {
    formCancel: function() {
      return $('#seo-quick-form').find("#seo-form").fadeOut("fast", function() {
        return $(this).empty();
      });
    },
    short_resume_limit: function() {
      $("#seo_meta_page_description").on("keyup", function() {
        var limit, text_length;
        limit = $(this).attr('data-limit');
        text_length = $(this).val().length;
        if (text_length > limit) {
          $("#" + ($(this).attr('data-limit-input'))).addClass('overLimit');
        } else {
          $("#" + ($(this).attr('data-limit-input'))).removeClass('overLimit');
        }
        return $("#" + ($(this).attr('data-limit-input'))).html(limit - text_length);
      });
      return $("#seo_meta_page_description").keyup();
    }
  };

}).call(this);
(function() {
  this.TwygoShortListEvents = {
    initialize: function(id) {
      var s;
      TwygoShortListEvents.loadMaker(id);
      this.url = "//" + $(location).attr('host');
      s = document.createElement("SCRIPT");
      s.src = this.url + "/javascripts/short_list_events_populate.js";
      s.type = "text/javascript";
      return document.getElementsByTagName("HEAD")[0].appendChild(s);
    },
    loadMaker: function(id) {
      this.orgId = id;
      return $(".plugins").children("div:first").load("/o/" + this.orgId + "/short_list_events_maker", function() {
        return TwygoShortListEvents.loadEvents(this);
      });
    },
    loadEvents: function() {
      TwygoShortListEvents.createComponent();
      setTimeout(function() {
        TwygoShortListEventsPopulate.initialize();
        return TwygoShortListEventsPopulate.setupFilters = function() {
          return false;
        };
      }, 200);
      return TwygoShortListEvents.bindInputs();
    },
    createComponent: function() {
      var component;
      component = "<div> <div id='cShortList' style='font-family: Arial;' data-orgId='" + this.orgId + "'> <div id='cHeader'><h1></h1></div> <div id='cBody'><ul id='cUl'></ul></div> <div id='cFooter'> <p> <a href='" + this.url + "/events' id='more-events' target='_blank'>" + (I18n.t("views.plugin.moreEventsUrl")) + "</a> | <a href='https://www.twygoead.com/site/' target='_blank'>By Twygo.com</a></p> </div> </div> </div> <div class='field'> <label id='labelCode' for='copyCode'>" + (I18n.t('javascripts.plugins.paste_your_code_below')) + "</label> <textarea id='copyCode' name='copyCode'> </div>";
      $(".orgEvents .body .rightSide").append(component);
      return TwygoShortListEvents.updateComponent();
    },
    getOptions: function(options) {
      var eValues, element, i, len, option, value;
      eValues = {};
      for (i = 0, len = options.length; i < len; i++) {
        option = options[i];
        element = $("#" + option[0]);
        value = $.trim($(element).val()).length === 0 ? option[1]["default"] : $.trim(element.val());
        if (element.attr('type') === 'checkbox') {
          value = element.is(':checked');
        }
        eValues[option[0]] = value;
      }
      return eValues;
    },
    updateComponent: function() {
      var bodyHeigh, borders, categories, fontColorEvent, headerFooterFontColor, limit, list, options, pluginBorderColor, pluginColor, pluginHeight, pluginWidth, portfolioIds, strippedCode, title;
      options = this.getOptions([
        [
          "title", {
            "default": "" + (I18n.t('views.schedule_events'))
          }
        ], [
          "headerFooterFontColor", {
            "default": "#7A3"
          }
        ], [
          "pluginBorderColor", {
            "default": "#CCC"
          }
        ], [
          "pluginColor", {
            "default": "#FDFDFD"
          }
        ], [
          "fontColorEvent", {
            "default": "#666"
          }
        ], [
          "pluginWidth", {
            "default": "100%"
          }
        ], [
          "pluginHeight", {
            "default": "100%"
          }
        ], [
          "eventsLimit", {
            "default": "10"
          }
        ], [
          "moreEventsUrl", {
            "default": this.url + "/events"
          }
        ], [
          "portfolioIds", {
            "default": ""
          }
        ], [
          "categories", {
            "default": ""
          }
        ]
      ]);
      title = options.title;
      headerFooterFontColor = options.headerFooterFontColor;
      pluginBorderColor = options.pluginBorderColor;
      pluginColor = options.pluginColor;
      fontColorEvent = options.fontColorEvent;
      pluginWidth = options.pluginWidth;
      pluginHeight = options.pluginHeight;
      limit = options.eventsLimit;
      portfolioIds = options.portfolioIds;
      categories = options.categories;
      $("#more-events").attr("href", options.moreEventsUrl);
      $("#cShortList").attr("data-url", this.url);
      $("#cShortList").attr("data-filters-text", $('#textFilter').is(':checked'));
      $("#cShortList").attr("data-filters-city", $('#cityFilter').is(':checked'));
      $("#cShortList").css({
        "border": "1px solid " + pluginBorderColor,
        "background-color": "" + pluginColor,
        "border-radius": "4px",
        "width": "" + pluginWidth,
        "min-height": "125px"
      });
      $('#cHeader h1').text(title);
      $('#cHeader h1').css({
        "padding": "10px",
        "font-weight": "bold",
        "font-size": "13px",
        "border-bottom": "1px solid " + pluginBorderColor
      });
      $('#cFooter p').css({
        "padding": "10px",
        "font-weight": "none",
        "font-size": "11px",
        "text-align": "right",
        "border-top": "1px solid " + pluginBorderColor
      });
      $("#cHeader").css({
        "border-top-left-radius": "4px",
        "border-top-right-radius": "4px"
      });
      borders = 2;
      bodyHeigh = (pluginHeight - borders) - ($('#cHeader').height() + $('#cFooter').height());
      $("#cBody").css({
        "max-height": "300px",
        "min-height": "130px",
        "height": bodyHeigh + "px",
        "overflow": "auto",
        "margin-bottom": "10px"
      });
      $("#cFooter").css({
        "border-bottom-left-radius": "4px",
        "border-bottom-right-radius": "4px",
        "color": "#999"
      });
      $("#cHeader, #cFooter a").css({
        "color": "" + headerFooterFontColor
      });
      $("#cUl").css({
        "padding-top": "5px",
        "font-family": "Arial",
        "list-style-type": "none",
        "font-size": "11px",
        "-webkit-margin-after": "0em",
        "-webkit-margin-before": "0em",
        "-webkit-margin-start": "0em",
        "-webkit-margin-end": "0em",
        "-webkit-padding-start": "0em",
        "padding-left": "0px",
        "margin": "0px"
      });
      $("#cUl").attr("data-eventsLimit", limit);
      $("#cUl").attr("data-portfolioIds", portfolioIds);
      $("#cUl").attr("data-categories", categories);
      $("#cShortList style").remove();
      $("#cShortList").append("<style type='text/css'> .cLi{ padding: 5px 5px; clear: both; } .eventName{ font-size: 12px; font-weight: bold; } .eventDetails{ font-size: 10px; } .eventDetails, .eventName{ color: " + fontColorEvent + " !important; margin: 0px; } .cSchedule{ background-color: #E1E1E1; width: 35px; height: 35px; text-align: center; border-radius: 5px; color: #666; padding-top: 5px; float: left; margin-right: 5px; line-height: normal; } .cSchedule span{ font-weight: bold !important; font-size: 16px; margin-left: 4px; } .eventName:hover{ text-decoration: underline !important; } h1, p{ -webkit-margin-before: 0em; -webkit-margin-after: 0em; -webkit-margin-start: 0px; -webkit-margin-end: 0px; margin: 0px } </style>");
      list = $(".cLi");
      list.remove();
      strippedCode = $.trim($("#cShortList").parent().html().replace(/\s{2,}/g, ' '));
      strippedCode = ("<script src='" + this.url + "/javascripts/short_list_events_populate.js' type='text/javascript'></script>") + strippedCode;
      $("#copyCode").text(strippedCode);
      return $("#cUl").append(list);
    },
    bindInputs: function() {
      $(".colorField").miniColors({
        change: function(hex, rgb) {
          return TwygoShortListEvents.updateComponent();
        }
      });
      $(".orgEvents .body .leftSide input").on("keyup change", function() {
        return TwygoShortListEvents.updateComponent();
      });
      $(".checkField").on("keyup change", function() {
        return TwygoShortListEvents.updateComponent();
      });
      $("#portfolioIds").on("keyup change", function() {
        return TwygoShortListEvents.updateComponent();
      });
      $("#categories").on("keyup change", function() {
        return TwygoShortListEvents.updateComponent();
      });
      return $("#eventsLimit").on("keyup change", function() {
        $(".cLi").remove();
        return TwygoShortListEventsPopulate.initialize();
      });
    }
  };

}).call(this);
(function() {
  this.TwygoSpeaker = {
    triggerLoad: true,
    listenerSearch: function() {
      $('#user_first_name').on('focusout', function(e) {
        var searchData;
        searchData = $(this).val();
        if (TwygoSpeaker.triggerLoad && searchData.length >= 3) {
          e.preventDefault();
          TwygoSpeaker.search(searchData, '#user_first_name', '#autocomplete-user_list_by_first_name');
          return false;
        }
      });
      $('#user_last_name').on('focusout', function(e) {
        var searchData;
        searchData = $(this).val();
        if (TwygoSpeaker.triggerLoad && searchData.length >= 3) {
          e.preventDefault();
          TwygoSpeaker.search(searchData, '#user_last_name', '#autocomplete-user_list_by_last_name');
          return false;
        }
      });
      return $('#user_email').on('focusout', function(e) {
        var searchData;
        searchData = $(this).val();
        if (TwygoSpeaker.triggerLoad && searchData.length >= 3) {
          e.preventDefault();
          TwygoSpeaker.search(searchData, '#user_email', '#autocomplete-user_list_by_email');
          return false;
        }
      });
    },
    associate: function(object) {
      var speaker;
      speaker = object;
      $('#user_first_name').val(speaker.first_name);
      $('#user_email').val(speaker.email);
      $('#user_last_name').val(speaker.last_name);
      $('#user_enterprise').val(speaker.enterprise);
      $('#user_id').val(speaker.id);
      $('#preview0').addClass('on-prev');
      $('#user_short_resume').val(speaker.short_resume);
      $("#preview_avatar_speaker").attr("src", speaker.avatar_url);
      return TwygoSpeaker.closeList();
    },
    handleResponse: function(response) {
      var message;
      $('#create_speaker_form').removeClass('ajax-loading');
      message = response.msg || response.message;
      if (response.type === 'success') {
        if (response.action === 'save') {
          TwygoEventManagement.loadSpeakerForm(TwygoEventManagement.currentEventData.eventId);
        }
        if (response.action === 'save_and_new') {
          TwygoSpeaker.clearForm();
        }
        return TwygoFlashMessage.setMessage('successs', message);
      } else {
        return TwygoFlashMessage.setMessage('error', message);
      }
    },
    bindSpeakerSearchInputs: function() {
      return $("#speaker_name input, input#speaker_name").on("focusout", function(e) {
        var keycode, searchData;
        keycode = e.keyCode ? e.keyCode : e.which;
        searchData = $.trim($(this).val());
        if (event.type === 'input' && keycode !== 13) {
          return true;
        }
        if (searchData.length > 3) {
          return TwygoEventManagement.triggerSpeakerSearch();
        }
      });
    },
    ajaxListener: function() {
      $("#create_speaker_form").on("ajax:complete", function(e, response) {
        if (response.responseJSON) {
          return TwygoSpeaker.handleResponse(response.responseJSON);
        }
      });
      $("#create_speaker_form").on("ajax:remotipartComplete", function(e, response) {
        var parsedResponse;
        parsedResponse = JSON.parse(response.responseText);
        return TwygoSpeaker.handleResponse(parsedResponse);
      });
      $('#create_speaker_form').on('ajax:beforeSend', function() {
        return $('#create_speaker_form').addClass('ajax-loading');
      });
      return $('#create_speaker_form').on('ajax:error', function(xhr, response) {
        return $('#create_speaker_form').removeClass('ajax-loading');
      });
    },
    cancelButton: function() {
      $("#new_speaker_container").fadeOut("fast");
      return setTimeout(function() {
        return $("#add_speaker_container").fadeIn("fast");
      }, 100);
    },
    clearForm: function() {
      $('#user_first_name').val('');
      $('#user_last_name').val('');
      $('#user_enterprise').val('');
      $('#user_id').val('');
      $('#user_email').val('');
      $('#user_short_resume').val('');
      $('#preview0').removeClass('on-prev');
      return $('#preview0').find('.img-preview').attr('src', '');
    },
    closeList: function() {
      var id, ids, j, len;
      ids = ['#autocomplete-user_list_by_first_name', '#autocomplete-user_list_by_last_name', '#autocomplete-user_list_by_email'];
      for (j = 0, len = ids.length; j < len; j++) {
        id = ids[j];
        $(id).fadeOut();
        $(id + " > ul").html('');
      }
      return setTimeout(function() {
        return TwygoSpeaker.triggerLoad = true;
      }, 500);
    },
    search: function(value, field, placeToAddResult) {
      return $.ajax({
        url: "/users/search/",
        data: {
          q: value,
          organization_id: TwygoApplication.currentOrganizationId,
          event_id: TwygoEventManagement.currentEventData.eventId || 0
        },
        dataType: 'json',
        type: 'get',
        beforeSend: function() {
          return $(field).closest('.autocomplet--content').addClass('searching');
        },
        success: function(response) {
          var out, template;
          out = '';
          $(placeToAddResult + " > ul").html('');
          if (response.users.length > 0) {
            template = $('#speaker-item').html();
            TwygoSpeaker.triggerLoad = false;
            $.each(response.users, function(i, item) {
              item['object'] = JSON.stringify(item);
              return out += Mustache.render(template, item);
            });
            $(placeToAddResult + " > ul").append(out);
            return $(placeToAddResult).fadeIn();
          } else {
            return $(placeToAddResult).fadeOut();
          }
        },
        complete: function() {
          TwygoSpeaker.triggerLoad = true;
          return $(field).closest('.autocomplet--content').removeClass('searching');
        }
      });
    }
  };

}).call(this);
(function() {
  this.TwygoStudents = {
    event_id: null,
    current_student_id: '',
    current_event_id: null,
    new_learning_path_enabled: null,
    progressColors: ["#ED5939", "#F3C400", "#13BB9B"],
    question_id: null,
    student_id: null,
    order_field: null,
    order: null,
    eventFn: {
      contactStudents: function(is_uniq) {
        var id;
        if (is_uniq == null) {
          is_uniq = true;
        }
        id = is_uniq ? $(this).parent().parent().attr('id') : $('input[id="student"]:checked').map(function() {
          return $(this).val();
        }).get().join(",");
        $("input#student_id").attr("value", id);
        return $(".twygo-mail-students-modal").modal({
          minWidth: 400,
          minHeight: 300,
          opacity: 50,
          position: [50],
          overlayClose: true
        });
      },
      showAttendance: function(loader) {
        var event_id;
        if (loader == null) {
          loader = true;
        }
        if (loader) {
          TwygoApplication.loader();
        }
        event_id = TwygoEventManagement.eventData().eventId;
        return $("#students-attendance").load("/e/" + event_id + "/attendances", function() {
          TwygoStudents.initializeAttendance();
          return $("#students-container").fadeOut("fast", function() {
            return $("#students-attendance").fadeIn("fast", function() {
              if (loader) {
                return TwygoApplication.loader();
              }
            });
          });
        });
      },
      showMonitor: function(student_id, event_id, tab) {
        if (tab == null) {
          tab = '';
        }
        TwygoApplication.loader();
        TwygoStudents.student_id = student_id;
        TwygoStudents.event_id = event_id;
        return $("#students-monitor-list").load("/e/" + event_id + "/students/" + student_id + "/monitor", function() {
          if (tab) {
            $.tabs.triggerTab(tab);
          }
          return $("#students-container").fadeOut("fast", function() {
            return $("#students-monitor-list").fadeIn("fast", function() {
              return TwygoApplication.loader();
            });
          });
        });
      },
      newAttendance: function() {
        var $attendance;
        if (($attendance = $(".attendance[attendance-id='new']")).length > 0) {
          $attendance.find(":input:first").focus();
          TwygoCommon.setMessage("alert", I18n.t('save_call_before_open_new'));
          return false;
        }
        $attendance = $("#attendance-model").clone();
        $attendance.removeAttr("id").addClass("attendance").removeClass("hidden").attr("attendance-id", "new");
        $(".attendance-list").prepend(" ");
        $(".attendance-list").prepend($attendance);
        TwygoCommon.bindDatePicker($attendance.find(":input.date"));
        $attendance.find(".attendance-stage-program select").off().change(TwygoStudents.eventFn.attendancePickActivity);
        $attendance.find(".save-attendance").click(TwygoStudents.eventFn.saveAttendance);
        $attendance.find(".delete-attendance").click(TwygoStudents.eventFn.deleteAttendance);
        $attendance.find(":input").change(TwygoStudents.eventFn.changedAttendance);
        return $attendance.find(":input:first").focus();
      },
      changedAttendance: function() {
        var attendance, el, id;
        el = $(this);
        id = el.closest(".attendance").attr("attendance-id");
        attendance = $(".attendance[attendance-id='" + id + "']");
        return attendance.addClass("changed");
      },
      saveAttendance: function() {
        var attendance, can_create_or_change_atendee, date, el, event_id, id, stage_program, students;
        el = $(this);
        id = el.closest(".attendance").attr("attendance-id");
        event_id = TwygoEventManagement.eventData().eventId;
        attendance = $(".attendance[attendance-id='" + id + "']");
        stage_program = attendance.find("#attendance_stage_program_id").val();
        date = attendance.find(".attendance_date").val();
        students = {};
        attendance.find(".attendance-date").map(function() {
          return students[$(this).attr("student-id")] = $(this).find("input").is(":checked") ? 1 : 0;
        });
        can_create_or_change_atendee = el.closest(".attendance").hasClass("changed") || el.closest(".attendance").attr("attendance-id") === "new";
        if (can_create_or_change_atendee) {
          if (!(el.hasClass("wait-attendance-save"))) {
            el.addClass("wait-attendance-save");
            if (id === "new") {
              return $.ajax({
                url: "/e/" + event_id + "/attendances",
                type: "post",
                data: {
                  attendance: {
                    stage_program_id: stage_program,
                    date: date
                  },
                  students: students
                },
                dataType: "json",
                success: function(response) {
                  el.removeClass("wait-attendance-save");
                  attendance.attr("attendance-id", response.id);
                  el.addClass("save-attendance");
                  attendance.removeClass("changed");
                  return TwygoCommon.setMessage("success", I18n.t('call_saved'));
                }
              });
            } else {
              return $.ajax({
                url: "/e/" + event_id + "/attendances/" + id,
                type: "put",
                data: {
                  attendance: {
                    stage_program: stage_program,
                    date: date
                  },
                  students: students
                },
                dataType: "json",
                success: function() {
                  el.removeClass("wait-attendance-save");
                  el.addClass("save-attendance");
                  attendance.removeClass("changed");
                  return TwygoCommon.setMessage("success", I18n.t('call_updated'));
                }
              });
            }
          }
        }
      },
      deleteAttendance: function() {
        var attendance, el, event_id, id;
        el = $(this);
        id = el.closest(".attendance").attr("attendance-id");
        event_id = TwygoEventManagement.eventData().eventId;
        attendance = $(".attendance[attendance-id='" + id + "']");
        if (id === "new") {
          return attendance.remove();
        } else {
          if (confirm(I18n.t('confirm_delete_call'))) {
            return $.ajax({
              url: "/e/" + event_id + "/attendances/" + id,
              type: "delete",
              dataType: "json",
              success: function() {
                attendance.fadeOut(200, function() {
                  return attendance.remove();
                });
                return TwygoCommon.setMessage("success", I18n.t('call_deleted'));
              }
            });
          }
        }
      },
      attendancePickActivity: function() {
        var dateEl, el, option;
        el = $(this);
        option = el.find("option:checked");
        dateEl = el.parent().siblings(".attendance-pick-date").find("input");
        if (el.val() > 0) {
          dateEl.prop("readonly", true);
          dateEl.val(option.attr("date"));
          return dateEl.datepicker("option", {
            disabled: true
          });
        } else {
          dateEl.prop("readonly", false);
          return dateEl.datepicker("option", {
            disabled: false
          });
        }
      }
    },
    initialize: function(new_learning_path_enabled) {
      if (new_learning_path_enabled == null) {
        new_learning_path_enabled = false;
      }
      $(".student-name").click(function(e) {
        var event_id, student_id;
        student_id = e.target.parentNode.parentNode.id;
        event_id = TwygoEventManagement.eventData().eventId;
        return TwygoStudents.eventFn.showMonitor(student_id, event_id);
      });
      $(".student-mail").click(this.eventFn.contactStudents);
      $(".student-attendance").click(this.eventFn.showAttendance);
      $("#students-attendance").hide();
      $("#students-monitor-list").hide();
      $('#students-list .full_pagination a').click(function(e) {
        TwygoApplication.loader();
        $("#students-list").load($(this).attr('href'), function() {
          return TwygoApplication.loader("hide");
        });
        $('html,body').animate({
          scrollTop: 0
        }, 'slow');
        return safePreventEvent(e);
      });
      $('#score-form').find('.close').on('click', function() {
        return $('#score-form').fadeOut();
      });
      TwygoEventStudentComments.initialize();
      TwygoStudents.new_learning_path_enabled = new_learning_path_enabled;
      $(".students-list tr").each(function() {
        var $questions, $this, counter;
        $this = $(this);
        $questions = $this.find(".student-questions");
        counter = $questions.data("counter");
        return $questions.children(".counter").css({
          "display": 'none'
        });
      });
      this.animante_bar($('.students-list'));
    },
    filterStudents: function(order_field, order) {
      var _department, _enterprise, _name, _progress, _role, _status, event_id;
      event_id = TwygoEventManagement.eventData().eventId;
      _name = $('#user_name').val();
      _department = $('#filterDepartment').val();
      _role = $('#filterRole').val();
      _enterprise = $('#filterEnterprise').val();
      _progress = $('#filterProgress').val();
      _status = $('#filterStatus').val();
      return $.ajax({
        url: "/e/" + event_id + "/students",
        type: "get",
        dataType: 'HTML',
        data: {
          names: _name,
          departments: _department,
          roles: _role,
          enterprises: _enterprise,
          progress: _progress,
          status: _status,
          filter_students: true,
          order_field: order_field,
          order: order
        },
        beforeSend: function() {
          return $("#students-list").addClass('ajax-loading');
        },
        success: function(response) {
          return $("#students-list").html(response);
        },
        error: function(response) {
          return TwygoFlashMessage.setMessage("error", I18n.t("error_in_filter_student"));
        },
        complete: function() {
          return $("#students-list").removeClass('ajax-loading');
        }
      });
    },
    showDeleteModal: function(id, name, event_id) {
      $("#student").html(I18n.t("certificate_validity.description", {
        name: name
      }));
      TwygoStudents.current_student_id = id;
      TwygoStudents.event_id = event_id;
      return $("#modal-container").twygomodal();
    },
    closeModal: function() {
      $.twygomodal.close();
      TwygoStudents.current_student_id = '';
      return $('.checkbox').prop('checked', false);
    },
    animante_bar: function($container) {
      $container.find('td.progress').each(function() {
        var $bar, color, progress;
        $bar = $(this).find(".bar");
        progress = $bar.data("progress");
        color = TwygoStudents.progressColors[Math.ceil(TwygoStudents.progressColors.length * progress / 100 - 1)];
        $bar.children(".progress").css({
          "background-color": color
        }).animate({
          width: progress + "%"
        }, 1000);
        return $bar.children("span").attr("title", progress + "%").text(progress + "%");
      });
    },
    selectActions: function(option) {
      if ($('input[id="student"]:checked').length > 0) {
        switch (option) {
          case "1":
            this.eventFn.contactStudents(false);
            break;
          case "2":
            this.attendanceSheet();
            break;
          case "3":
            this.massApprove();
            break;
          case "4":
            this.massCertificate();
        }
      } else {
        TwygoFlashMessage.setMessage("error", I18n.t('select_a_student'));
      }
      return $("select#actions").val("0");
    },
    genCertificate: function(id, event_id) {
      return TwygoStudents.certificate(id, event_id);
    },
    initializeMonitor: function() {
      $(".lesson-list .table .table-row").map(function() {
        var $subrow, $this, children, depth, id;
        $this = $(this);
        id = $this.data("id");
        depth = $this.data("depth");
        if (depth === "" || depth === void 0) {
          depth = 0;
        }
        children = $(".lesson-list .table .table-row[data-parent=" + id + "]");
        if (children.length > 0) {
          children.attr("depth", depth + 1).data("depth", depth + 1);
          $subrow = $("<div class=table>");
          $subrow.append(children);
          $this.addClass('has-subrow');
          return $this.append($subrow);
        }
      });
      $(".lesson-list .table .table-row:odd").addClass("table-row-odd");
      $(".lesson-list .table .table-row:even").addClass("table-row-even");
      $(".table-row .arrow").hide();
      $(".table-row .table").parent().children(".content-title").children(".arrow").show();
      return $(".lesson-list .arrow").click(function() {
        var $arrow, $row;
        $arrow = $(this);
        $row = $arrow.closest(".table-row");
        if ($arrow.hasClass("expanded")) {
          $row.children(".table").fadeOut(200);
          return $arrow.removeClass("expanded");
        } else {
          $row.children(".table").fadeIn(200);
          return $arrow.addClass("expanded");
        }
      });
    },
    initializeAttendance: function() {
      TwygoCommon.bindDatePicker("#attendance-box :input.date");
      $(".new-attendance").click(this.eventFn.newAttendance);
      $(".sync-webinar-participants").click(TwygoStudents.syncWebinarParticipants);
      $("#attendance-box .save-attendance").click(this.eventFn.saveAttendance);
      $("#attendance-box .delete-attendance").click(this.eventFn.deleteAttendance);
      $("#attendance-box :input").change(this.eventFn.changedAttendance);
      return $("#attendance-box .attendance-stage-program select").off().change(this.eventFn.attendancePickActivity);
    },
    attendanceCancelButton: function() {
      var event_id;
      if ($(".attendance.changed, .attendance[attendance-id='new']").length > 0) {
        if (!confirm(I18n.t('confirm_not_saved_calls'))) {
          return;
        }
      }
      event_id = TwygoEventManagement.eventData().eventId;
      return TwygoEventManagement.loadStudentsPage(event_id, {
        page: 1
      });
    },
    cancelButton: function(isNewLearningPathFeatureFlagEnabled) {
      if (isNewLearningPathFeatureFlagEnabled == null) {
        isNewLearningPathFeatureFlagEnabled = false;
      }
      TwygoStudents.changeHeader({
        studentHistory: false,
        isNewLearningPathFeatureFlagEnabled: TwygoStudents.new_learning_path_enabled
      });
      TwygoApplication.loader();
      $("#students-attendance").fadeOut("fast", function() {
        return $("#students-container").fadeIn("fast", function() {});
      });
      $("#students-score-list").fadeOut("fast", function() {
        return $("#students-container").fadeIn("fast", function() {});
      });
      $("#students-monitor-list").fadeOut("fast", function() {
        return $("#students-container").fadeIn("fast", function() {});
      });
      return $("#manage-events > .inner-content:visible").fadeOut("fast", function() {
        return $("#students-container").fadeIn("fast", function() {
          return TwygoApplication.loader();
        });
      });
    },
    changeHeader: function(arg) {
      var contentBreadcrumb, isNewLearningPathFeatureFlagEnabled, studentHistory, title;
      studentHistory = arg.studentHistory, isNewLearningPathFeatureFlagEnabled = arg.isNewLearningPathFeatureFlagEnabled;
      contentBreadcrumb = isNewLearningPathFeatureFlagEnabled ? I18n.t('menu.content_list') : I18n.t('menu.event_course_list');
      title = contentBreadcrumb + " > " + (I18n.t('views.learning.title'));
      $("#breadcrumb").html("");
      if (studentHistory) {
        $("#breadcrumb").html(" > " + (I18n.t('student_record')));
        $("#breadcrumb").css({
          "opacity": 1
        });
        return $(".page-title__inner").html(title);
      }
    },
    attendanceSheet: function(ids, event_id) {
      var href;
      if (ids == null) {
        ids = null;
      }
      if (event_id == null) {
        event_id = null;
      }
      if (ids === null) {
        ids = $.map($("input[id='student']:checked"), function(e) {
          return e.value;
        });
      }
      if (event_id === null) {
        event_id = TwygoEventManagement.eventData().eventId;
      }
      href = "/e/" + event_id + "/students/attendance_sheet";
      if (ids.length > 0) {
        href += "?" + $.param({
          ids: ids.join(",")
        });
      }
      return window.open(href, 'attendance_sheet').focus();
    },
    sendMail: function() {
      var event_id, message, send_copy, students_id;
      event_id = $("#event_id").val();
      students_id = $("#student_id").val();
      message = $("#students_message").val();
      send_copy = $("input#mail_myself").is(':checked');
      if (message === '') {
        return TwygoFlashMessage.setMessage("error", I18n.t('javascripts.you_must_to_write_a_message_to_send_the_email'));
      } else {
        $('#send_email_button').attr('disabled', 'disabled');
        return $.ajax({
          url: "/e/" + event_id + "/students/mail",
          dataType: 'json',
          data: {
            students_id: students_id,
            message: message,
            send_copy: send_copy
          },
          type: 'get',
          complete: function(response) {
            $('#send_email_button').removeAttr('disabled');
            TwygoFlashMessage.setMessage("success", I18n.t('email_will_be_sent'));
            return $.modal.close();
          }
        });
      }
    },
    exportStudentAnswersFinished: function(path_full, export_id) {
      var _out;
      _out = "<div class='content-message-download_inner'>\n  <div class=\"content-message-download\">\n    " + (I18n.t('activerecord.attributes.event_participant.available_to_download')) + "\n  </div>\n  <div class=\"content-message-download--btn\">\n    <a href=\"/" + path_full + "\" target=\"_blank\" onclick=\"TwygoStudents.tooggleModalClose();\" class='report-download'>\n      <i class='icon-download'></i><br>\n      <span>Baixar</span>\n    </a>\n  </div>\n</div>";
      $('#export-answers-modal').find('.panel-content').addClass('overlay');
      $('#content-container-students').find('.panel-content').addClass('reports_content_download');
      return $('#content-container-students').html(_out);
    },
    exportStudentAnswers: function(eventId) {
      var event_id;
      if (eventId == null) {
        eventId = null;
      }
      if (eventId !== null) {
        TwygoEventManagement.setEventData({
          eventId: eventId
        });
      }
      event_id = TwygoEventManagement.eventData().eventId;
      $('#export-answers-modal').fadeIn('fast');
      $('#export-answers-modal').find('.inner-box').delay(500).addClass('show');
      $('#export-answers-modal .close').on('click', function() {
        return TwygoStudents.tooggleModalClose();
      });
      return $("#content-container-students").load("/e/" + event_id + "/students/export_select_quiz_list", function() {
        return $('#content-container-students').attr("export_id", null);
      });
    },
    tooggleModalClose: function() {
      $('#export-answers-modal').find('.panel-content').removeClass('overlay');
      $('#export-answers-modal').find('.inner-box').removeClass('show');
      return $('#export-answers-modal').delay(500).fadeOut('fast');
    },
    tooggleModal: function() {
      return 'true';
    },
    reviewQuestions: function(student_id, content_id, attempt_id, event_id) {
      if (event_id === null) {
        event_id = TwygoEventManagement.eventData().eventId;
      }
      TwygoLearn.review = true;
      TwygoLearn.is_explaining = true;
      TwygoLearn.instructor_review = true;
      TwygoLearn.results_to_show_not_repeat_status_not_repeat_status = [];
      TwygoLearn.event_id = this.event_id = event_id;
      TwygoLearn.student_id = this.student_id = student_id;
      TwygoLearn.content_id = this.content_id = content_id;
      TwygoLearn.attempt_id = this.attempt_id = attempt_id;
      $('#review-questions').fadeIn().find('.inner-box').addClass('ajax-loading');
      return $("#content-container").load("/e/" + event_id + "/students/" + student_id + "/review_content/" + content_id + "?attempt_id=" + attempt_id, function() {
        TwygoEventStudentComments.closedModal();
        return $.ajax({
          url: "/e/" + event_id + "/students/" + student_id + "/load_answers/" + attempt_id,
          dataType: 'json',
          data: {
            review: TwygoLearn.review
          },
          type: 'get',
          complete: function(response) {
            TwygoLearn.questions = JSON.parse(response.responseText);
            $('#review-questions').fadeIn().find('.inner-box').removeClass('ajax-loading');
            if (TwygoLearn.questions.length > 0) {
              TwygoLearn.loadQuestions();
              return TwygoLearn.loadQuestion(1);
            } else {
              $("#actions button").hide();
              return $("#actions #no-questions").show();
            }
          }
        });
      });
    },
    downloadAnswerUrl: function() {
      return "/e/" + this.event_id + "/students/" + this.student_id + "/download_answer/" + this.question_attempt_id;
    },
    saveScore: function() {
      $('#review-questions').find('.inner-box').addClass('ajax-loading');
      return $.ajax({
        url: "/e/" + this.event_id + "/students/" + this.student_id + "/save_score/" + this.attempt_id,
        type: "put",
        data: {
          preview: this.preview
        },
        dataType: "json",
        success: function(response) {
          if (response.status === "ok") {
            TwygoCommon.setMessage("success", I18n.t('correction_completed'));
            $("a.review-exam[attempt=" + TwygoStudents.attempt_id + "]").attr("onClick", "").attr("href", "").text("Visualizar: " + TwygoStudents.attempt_id);
            return $('#review-questions').find('.inner-box .close').trigger('click');
          } else if (response.status === "nok") {
            return TwygoCommon.setMessage("warning", I18n.t('there_still_issues'));
          } else {
            return TwygoCommon.setMessage("error", I18n.t('cant_save_fix'));
          }
        },
        complete: function() {
          return $('#review-questions').find('.inner-box').removeClass('ajax-loading');
        }
      });
    },
    markCorrect: function() {
      var current_comment;
      $(".marked-as:visible").removeClass("marked-as");
      $(".mark-correct:visible").addClass("marked-as");
      current_comment = TwygoStudents.getReviewComment(this.question_id);
      return $.ajax({
        url: "/e/" + this.event_id + "/students/" + this.student_id + "/mark_correct/" + this.question_attempt_id,
        type: "put",
        data: {
          preview: this.preview,
          comment: current_comment
        },
        dataType: "json",
        success: function(response) {
          if (response.status === "ok") {
            TwygoFlashMessage.setMessage('success', I18n.t("change_was_successful"));
            return $("#total_questions li[question_number=" + TwygoStudents.current_question + "]").removeClass().addClass("done");
          } else {
            TwygoCommon.setMessage("error", I18n.t('could_not_mark_as_correct'));
            return $(".marked-as:visible").removeClass("marked-as");
          }
        }
      });
    },
    markIncorrect: function() {
      var current_comment;
      $(".marked-as:visible").removeClass("marked-as");
      $(".mark-incorrect:visible").addClass("marked-as");
      current_comment = TwygoStudents.getReviewComment(this.question_id);
      return $.ajax({
        url: "/e/" + this.event_id + "/students/" + this.student_id + "/mark_incorrect/" + this.question_attempt_id,
        type: "put",
        data: {
          preview: this.preview,
          comment: current_comment
        },
        dataType: "json",
        success: function(response) {
          if (response.status === "ok") {
            TwygoFlashMessage.setMessage('success', I18n.t("change_was_successful"));
            return $("#total_questions li[question_number=" + TwygoStudents.current_question + "]").removeClass().addClass("done");
          } else {
            TwygoCommon.setMessage("error", I18n.t('could_not_mark_as_incorrect'));
            return $(".marked-as:visible").removeClass("marked-as");
          }
        }
      });
    },
    markPartially: function() {
      var current_comment;
      $(".marked-as:visible").removeClass("marked-as");
      $(".mark-partially_correct:visible").addClass("marked-as");
      current_comment = TwygoStudents.getReviewComment(this.question_id);
      return $.ajax({
        url: "/e/" + this.event_id + "/students/" + this.student_id + "/mark_partially/" + this.question_attempt_id,
        type: "PUT",
        data: {
          preview: this.preview,
          comment: current_comment
        },
        dataType: "json",
        success: function(response) {
          if (response.status === "ok") {
            TwygoFlashMessage.setMessage('success', I18n.t("change_was_successful"));
            return $("#total_questions li[question_number=" + TwygoStudents.current_question + "]").removeClass().addClass("done");
          } else {
            $(".marked-as:visible").removeClass("marked-as");
            return TwygoCommon.setMessage("error", I18n.t('could_not_mark_as_partially'));
          }
        }
      });
    },
    getReviewComment: function(question_id) {
      var comment;
      if ($('textarea[id^="review_comment_"]').length) {
        comment = $('textarea[rel="' + question_id + '"]').val();
        return comment;
      } else {
        return '';
      }
    },
    showAttempts: function(el) {
      var menu;
      menu = $(el).siblings("ul");
      if (menu.is(':visible')) {
        return menu.fadeOut().hide();
      } else {
        return menu.fadeIn().show();
      }
    },
    toggleApproved: function(student_id, event_id) {
      var approved, row;
      if (event_id == null) {
        event_id = null;
      }
      row = $(".students-list tr#" + student_id);
      approved = row.find(".student-certified");
      if (!event_id) {
        event_id = TwygoEventManagement.eventData().eventId;
      }
      if (isNaN(student_id) || isNaN(event_id)) {
        return false;
      }
      if (approved.hasClass("certified")) {
        if (confirm(I18n.t('cancel_student_approval'))) {
          return $.ajax({
            url: "/e/" + event_id + "/students/" + student_id + "/cancel_approval",
            dataType: 'json',
            data: {},
            type: 'put',
            complete: function(response) {
              TwygoFlashMessage.setMessage("success", I18n.t('approval_canceled'));
              approved.removeClass("certified");
              return approved.find('a').attr('title', I18n.t('take_approval'));
            }
          });
        }
      } else {
        return $.ajax({
          url: "/e/" + event_id + "/students/" + student_id + "/approve",
          dataType: 'json',
          data: {},
          type: 'put',
          complete: function(response) {
            TwygoFlashMessage.setMessage("success", I18n.t('approval_held'));
            approved.addClass("certified");
            return approved.find('a').attr('title', I18n.t('remove_approval'));
          }
        });
      }
    },
    massApprove: function(ids, event_id) {
      if (ids == null) {
        ids = this.selectedStudentIds();
      }
      if (event_id == null) {
        event_id = null;
      }
      if (event_id === null) {
        event_id = TwygoEventManagement.eventData().eventId;
      }
      if (ids.length > 0) {
        return $.ajax({
          url: "/e/" + event_id + "/students/approve",
          dataType: 'json',
          data: {
            ids: ids
          },
          type: 'put',
          complete: function(response) {
            var approved, i, id, len, results, row;
            TwygoFlashMessage.setMessage("success", I18n.t('approval_registered'));
            results = [];
            for (i = 0, len = ids.length; i < len; i++) {
              id = ids[i];
              row = $(".students-list tr#" + id);
              approved = row.find(".student-certified");
              results.push(approved.addClass("certified"));
            }
            return results;
          }
        });
      } else {
        return TwygoFlashMessage.setMessage("error", I18n.t('select_a_student'));
      }
    },
    previewCertificate: function(path) {
      var preview;
      preview = window.open(path);
      if (preview === null || preview === void 0) {
        return TwygoFlashMessage.setMessage("alert", I18n.t('certificate_blocked_browser'));
      }
    },
    viewCertificate: function(student_id, event_id) {
      var preview, row;
      if (event_id == null) {
        event_id = nil;
      }
      row = $(".students-list tr#" + student_id);
      event_id || (event_id = TwygoEventManagement.eventData().eventId);
      if (isNaN(student_id) || isNaN(event_id)) {
        return false;
      }
      preview = window.open("/e/" + event_id + "/students/" + student_id + "/certificate", "view-certificate");
      if (preview === null || preview === void 0) {
        return TwygoFlashMessage.setMessage("alert", I18n.t('certificate_blocked_browser'));
      }
    },
    certificate: function(student_id, event_id) {
      var certificate, row;
      if (event_id == null) {
        event_id = null;
      }
      row = $(".students-list tr#" + student_id);
      if (!event_id) {
        event_id = TwygoEventManagement.eventData().eventId;
      }
      if (isNaN(student_id) || isNaN(event_id)) {
        return false;
      }
      certificate = row.find(".preview-certificate");
      if (certificate.hasClass("has-certificate")) {
        return this.viewCertificate(student_id, event_id);
      } else {
        return $.ajax({
          url: "/e/" + event_id + "/students/" + student_id + "/certificate",
          dataType: 'json',
          data: {},
          type: 'put',
          error: function(response) {
            return TwygoFlashMessage.setMessage("alert", response.responseJSON.message);
          },
          success: function(response) {
            return TwygoFlashMessage.setMessage("alert", I18n.t('certificate_will_be_generated'));
          }
        });
      }
    },
    deleteCertificate: function(keep_historic) {
      var certificate, event_id, row, student_id;
      student_id = TwygoStudents.current_student_id;
      keep_historic = $('.checkbox').is(":checked");
      row = $(".students-list tr#" + student_id);
      event_id = TwygoStudents.event_id;
      if (!event_id) {
        event_id = TwygoEventManagement.eventData().eventId;
      }
      if (isNaN(student_id) || isNaN(event_id)) {
        return false;
      }
      certificate = row.find(".preview-certificate");
      return $.ajax({
        url: "/e/" + event_id + "/students/" + student_id + "/certificate",
        dataType: 'json',
        data: {
          keep_historic: keep_historic
        },
        type: 'delete',
        complete: function(response) {
          TwygoStudents.closeModal();
          TwygoFlashMessage.setMessage("alert", I18n.t('certificate_deleted'));
          certificate.removeClass("has-certificate");
          return certificate.closest('.student-certificate').removeClass("has-certificate--show");
        }
      });
    },
    massCertificate: function(ids, event_id) {
      if (ids == null) {
        ids = this.selectedStudentIds();
      }
      if (event_id == null) {
        event_id = null;
      }
      if (event_id === null) {
        event_id = TwygoEventManagement.eventData().eventId;
      }
      if (ids.length > 0) {
        return $.ajax({
          url: "/e/" + event_id + "/students/certificate",
          dataType: 'json',
          data: {
            ids: ids
          },
          type: 'put',
          complete: function(response) {
            if (response.responseJSON.status === "ok") {
              return TwygoFlashMessage.setMessage("alert", I18n.t('certificate_will_be_generated_students_not_approved'));
            } else {
              return TwygoFlashMessage.setMessage("error", I18n.t('theres_no_certificate_students'));
            }
          }
        });
      } else {
        return TwygoFlashMessage.setMessage("error", I18n.t('select_a_student'));
      }
    },
    certificateGenerated: function(student_id) {
      var certificate, i, id, len, row;
      if (Array.isArray(student_id)) {
        for (i = 0, len = student_id.length; i < len; i++) {
          id = student_id[i];
          row = $(".students-list tr#" + id);
          certificate = row.find(".preview-certificate");
          certificate.addClass("has-certificate");
          certificate.closest('.student-certificate').addClass("has-certificate--show");
        }
        return TwygoFlashMessage.setMessage("success", I18n.t('certificate_generated'));
      } else {
        row = $(".students-list tr#" + student_id);
        certificate = row.find(".preview-certificate");
        certificate.addClass("has-certificate");
        certificate.closest('.student-certificate').addClass("has-certificate--show");
        TwygoFlashMessage.setMessage("success", I18n.t('certificate_generated'));
        return this.viewCertificate(student_id);
      }
    },
    notificationCertificate: function() {
      return TwygoFlashMessage.setMessage("alert", I18n.t('certificate_generate_allow'));
    },
    selectedStudentIds: function() {
      return $.map($("input[id='student']:checked"), function(e) {
        return e.value;
      });
    },
    exportStudentAttempts: function(question_list) {
      var ids;
      if (question_list == null) {
        question_list = "selected";
      }
      ids = $.map($("input[id^='question_']:checked"), function(e) {
        return e.value;
      });
      return $.get(("/e/" + TwygoEventManagement.currentEventData.eventId + "/students/export_student_attempts?") + $.param({
        offset: (new Date()).getTimezoneOffset(),
        question_list: question_list,
        ids: ids
      }), function(response) {
        TwygoStudents.tooggleModalClose();
        return TwygoFlashMessage.setMessage("success", response.message);
      });
    },
    syncWebinarParticipants: function() {
      var $attendance;
      if (($attendance = $(".attendance[attendance-id='new']")).length > 0) {
        $attendance.find(":input:first").focus();
        TwygoCommon.setMessage("alert", I18n.t('save_call_before_open_new'));
        return false;
      }
      return $("#attendance-sync-webinar").modal({
        minWidth: 500,
        minHeight: 600,
        opacity: 50,
        position: [50],
        overlayClose: true
      });
    },
    loadAttendeesSpecifiedWebinar: function(webinar_key) {
      var content_id, event_id;
      if (webinar_key == null) {
        webinar_key = "";
      }
      if (confirm(I18n.t('javascripts.event_contents.you_wish_to_create_attendee'))) {
        content_id = $("td[data-webinarkey=" + webinar_key + "]").data('contentid');
        event_id = TwygoEventManagement.eventData().eventId;
        $('.webinar_attendance_lists, .title').fadeOut('slow');
        $('#webinar-waiting-attendance-response').css("display", "flex").fadeIn('slow');
        return $.ajax({
          url: "/e/" + event_id + "/attendances/create_attendee_for_webinar",
          dataType: 'json',
          data: {
            webinar_key: webinar_key,
            content_id: content_id
          },
          type: 'post',
          complete: function(response) {
            response = JSON.parse(response.responseText);
            if (response.status === "success") {
              return $('#webinar-waiting-attendance-response').attr('div_content_id', response.div_content_id);
            } else {
              TwygoFlashMessage.setMessage(response.status, I18n.t('error_creating_call'));
              $('.webinar_attendance_lists').fadeIn('slow');
              return $('#webinar-waiting-attendance-response').fadeOut('slow');
            }
          }
        });
      }
    },
    returnAttendance: function() {
      var event_id;
      event_id = TwygoEventManagement.eventData().eventId;
      return $("#students-attendance").load("/e/" + event_id + "/attendances", function() {
        TwygoStudents.initializeAttendance();
        $("#students-list").fadeOut("fast", function() {
          return $("#students-attendance").fadeIn("fast", function() {});
        });
        return $('.simplemodal-close').click();
      });
    },
    toggleQuestions: function(buttonId) {
      var listQuestionsButton;
      listQuestionsButton = $("#buttonQuestions-" + buttonId).offset();
      $('#total_questions').offset({
        top: listQuestionsButton.top + 43
      });
      return setTimeout(function() {
        if ($('#total_questions').is(':visible')) {
          return $("#total_questions").fadeOut().hide();
        } else {
          return $("#total_questions").fadeIn().show();
        }
      }, 0);
    },
    showScoreHistory: function(student_id, event_id, origin_screen) {
      if (origin_screen == null) {
        origin_screen = '';
      }
      TwygoApplication.loader();
      TwygoStudents.student_id = student_id;
      TwygoStudents.event_id = event_id;
      return $("#students-score-list").load("/e/" + event_id + "/students/" + student_id + "/scores?origin_screen=" + origin_screen, function() {
        return $("#students-container").fadeOut("fast", function() {
          return $("#students-score-list").fadeIn("fast", function() {
            return TwygoApplication.loader();
          });
        });
      });
    },
    withoutPermission: function() {
      return TwygoFlashMessage.setMessage("error", I18n.t('manual_score.messages.fail.permission'));
    },
    is_inactive_message: function() {
      return TwygoFlashMessage.setMessage("error", I18n.t('professional_inactive_logs_message'));
    },
    openScoreFormModal: function(student_id, event_id) {
      TwygoStudents.student_id = student_id;
      TwygoStudents.event_id = event_id;
      return $("#score-form").fadeIn();
    },
    addManualScorePoints: function(student_id, event_id, points, cause) {
      var loadingBox, loadingClass;
      loadingClass = 'ajax-loading';
      loadingBox = '.inner-box';
      return $.ajax({
        url: "/e/" + event_id + "/students/" + student_id + "/scores",
        type: 'post',
        data: {
          score: {
            points: points,
            cause: cause
          }
        },
        beforeSend: function() {
          return $("#score-form").find(loadingBox).addClass(loadingClass);
        },
        success: function(response) {
          $('#score_points').val('');
          $('#score_cause').val('');
          $('#score-history').html(response);
          $("#score-form").fadeOut();
          return TwygoFlashMessage.setMessage("success", I18n.t('scores.messages.success.create'));
        },
        error: function(response) {
          var element, errors, i, item, len, message, ref, results;
          if (response.status === 422) {
            errors = response.responseJSON;
            ref = Object.keys(errors);
            results = [];
            for (i = 0, len = ref.length; i < len; i++) {
              item = ref[i];
              element = I18n.t("activerecord.attributes.score." + item);
              message = element + " " + errors[item];
              results.push(TwygoFlashMessage.setMessage("error", message));
            }
            return results;
          } else {
            return TwygoFlashMessage.setMessage("error", I18n.t('manual_score.messages.fail.create'));
          }
        },
        complete: function() {
          return $("#score-form").find(loadingBox).removeClass(loadingClass);
        }
      });
    },
    filterScore: function(page) {
      var date, event_id, not_student, order, order_field, origin, student_id, user_id;
      student_id = TwygoStudents.student_id, event_id = TwygoStudents.event_id, order = TwygoStudents.order, order_field = TwygoStudents.order_field;
      not_student = !(event_id && student_id);
      if (not_student) {
        TwygoProfessionals.showProfessionalHistoryUser(TwygoProfessionals.professional_id, TwygoProfessionals.organization_id, page);
        return;
      }
      user_id = $("#made_by").val();
      origin = $("#origin").val();
      date = $("#created_at").val();
      return $.ajax({
        url: "/e/" + event_id + "/students/" + student_id + "/scores/search",
        type: "GET",
        data: {
          user_id: user_id,
          date: date,
          origin: origin,
          order_field: order_field,
          order: order,
          page: page
        },
        beforeSend: function() {
          return $('#score-history').addClass('ajax-loading');
        },
        success: function(response) {
          return $('#scores_table').html(response);
        },
        error: function(response) {
          return TwygoFlashMessage.setMessage("error", I18n.t('scores.messages.fail.fetch'));
        }
      });
    },
    renderMustache: function(element, template) {
      return Mustache.render(template, element);
    },
    loadLog: function(student_id, event_id) {
      var _action_filter, _period_end_filter, _period_start_filter, _sort_logs;
      if (event_id == null) {
        event_id = null;
      }
      if (event_id === null) {
        event_id = TwygoEventManagement.eventData().eventId;
      }
      _period_start_filter = $('#filterLogsPeriodStart').val();
      _period_end_filter = $('#filterLogsPeriodEnd').val();
      _action_filter = $('#filterLogsAction').val();
      _sort_logs = $('#sortLogs').val();
      return $.ajax({
        url: "/e/" + event_id + "/students/" + student_id + "/load_logs",
        dataType: 'html',
        type: 'get',
        data: {
          period_start_filter: _period_start_filter,
          period_end_filter: _period_end_filter,
          action_filter: _action_filter,
          sort_logs: _sort_logs,
          student_id: student_id
        },
        beforeSend: function() {
          return $('#students-complete').addClass('ajax-loading');
        },
        error: function() {
          return TwygoFlashMessage.setMessage("error", I18n.t("error_in_filter_student"));
        },
        success: function(response) {
          $("#paginate_logs").children().remove();
          return $("#paginate_logs").append(response);
        },
        complete: function() {
          return $('#students-complete').removeClass('ajax-loading');
        }
      });
    },
    handleContact: function(id, eventId) {
      $("input#student_id").attr("value", id);
      $("input#event_id").attr("value", eventId);
      return $(".twygo-mail-students-modal").modal({
        minWidth: 400,
        minHeight: 300,
        opacity: 50,
        position: [50],
        overlayClose: true
      });
    }
  };

}).call(this);
(function() {
  this.TwygoTimeAgo = {
    timeToString: function(d) {
      var c, dateArray, day, e, fullDateArray, hour, minute, month, second, timeArray, time_zone, year;
      fullDateArray = d.split("_");
      dateArray = fullDateArray[0].split("-");
      timeArray = fullDateArray[1].split(":");
      year = parseInt(dateArray[0], 10);
      month = parseInt(dateArray[1], 10) - 1;
      day = parseInt(dateArray[2], 10);
      hour = parseInt(timeArray[0], 10);
      minute = parseInt(timeArray[1], 10);
      second = parseInt(timeArray[2], 10);
      c = new Date();
      time_zone = c.getTimezoneOffset() * -60;
      d = new Date(year, month, day, hour, minute, second + time_zone, 0);
      day = parseInt(d.getDate(), 10);
      month = parseInt(d.getMonth(), 10);
      year = parseInt(d.getFullYear(), 10);
      e = parseInt((c.getTime() - d.getTime()) / 1000);
      if (e < 60) {
        return I18n.t("time_ago_right_now");
      } else if (e < 120) {
        return I18n.t("time_ago_one_minute_ago");
      } else if (e < 2700) {
        return I18n.t("time_ago_more_minutes_ago", {
          time: parseInt(e / 60).toString()
        });
      } else if (e < 7200) {
        return I18n.t("time_ago_one_hour_ago");
      } else if (e < 86400) {
        return I18n.t("time_ago_more_hours_ago", {
          time: parseInt(e / 3600).toString()
        });
      } else if (e < 172800) {
        return I18n.t("time_ago_one_day_ago");
      } else {
        return I18n.t("time_ago_at", {
          day: day,
          month: month + 1,
          year: year
        });
      }
    },
    initialize: function() {
      var a;
      return a = $('.relatize').each(function() {
        return $(this).text(TwygoTimeAgo.timeToString($(this).attr("date")));
      });
    }
  };

}).call(this);
(function() {
  this.TwygoTimeTable = {
    lineHeight: 60,
    currentStage: 0,
    columnMinWidth: 150,
    currentDate: 0,
    setLineHeight: function(height) {
      if (height == null) {
        height = this.lineHeight;
      }
      this.lineHeight = height;
      return this.adjustLineHeight();
    },
    visibleColumnsCount: function() {
      var cols;
      cols = Math.floor($(".timetable-activities").width() / this.columnMinWidth);
      if (cols < 1) {
        cols = 1;
      }
      return cols;
    },
    allColumnsCount: function() {
      return $(".timetable-activities .timetable-stage").length;
    },
    allDatesCount: function() {
      return $(".timetable-date").length;
    },
    adjustLineHeight: function() {
      var firstHour;
      $(".timetable-hour, .timetable-line").css({
        height: this.lineHeight
      });
      firstHour = $("#timetable").data("first-hour");
      return $(".timetable-activity").each(function() {
        var a;
        a = $(this);
        a.css({
          top: (a.data("start") - firstHour) * TwygoTimeTable.lineHeight
        });
        return a.animate({
          height: a.data("duration") / 60 * TwygoTimeTable.lineHeight
        }, 500);
      });
    },
    adjustColumns: function() {
      var cols;
      $(".timetable-stages").css({
        width: $(".timetable-activities").width()
      });
      cols = this.visibleColumnsCount();
      $(".timetable-stage").css({
        left: -($(".timetable-stage").outerWidth() * this.currentStage)
      });
      return $(".timetable-stage").css({
        width: (100 / cols) + "%"
      });
    },
    previousStage: function() {
      if (this.currentStage === 0) {
        return;
      }
      this.currentStage = this.currentStage - 1;
      this.adjustScrollButtonVisibility();
      return $(".timetable-stage").animate({
        left: -($(".timetable-stage").outerWidth() * this.currentStage)
      });
    },
    nextStage: function() {
      if (this.visibleColumnsCount() + this.currentStage >= this.allColumnsCount()) {
        return;
      }
      this.currentStage = this.currentStage + 1;
      this.adjustScrollButtonVisibility();
      return $(".timetable-stage").animate({
        left: -($(".timetable-stage").outerWidth() * this.currentStage)
      });
    },
    previousDate: function() {
      if (this.currentDate === 0) {
        return;
      }
      this.currentDate = this.currentDate - 1;
      this.adjustScrollButtonVisibility();
      return $(".timetable-date").animate({
        top: -(this.currentDate * $(".timetable-date").outerHeight())
      });
    },
    nextDate: function() {
      if (this.currentDate + 5 >= this.allDatesCount()) {
        return;
      }
      this.currentDate = this.currentDate + 1;
      this.adjustScrollButtonVisibility();
      return $(".timetable-date").animate({
        top: -(this.currentDate * $(".timetable-date").outerHeight())
      });
    },
    adjustScrollButtonVisibility: function() {
      $(".timetable-previous-stage").css({
        visibility: this.currentStage === 0 ? "hidden" : "visible"
      });
      $(".timetable-next-stage").css({
        visibility: this.visibleColumnsCount() + this.currentStage >= this.allColumnsCount() ? "hidden" : "visible"
      });
      $(".timetable-previous-date").css({
        visibility: this.currentDate === 0 ? "hidden" : "visible"
      });
      return $(".timetable-next-date").css({
        visibility: this.currentDate + 5 >= this.allDatesCount() ? "hidden" : "visible"
      });
    },
    initialize: function() {
      this.bindEvents();
      this.baseUrl = "/e/" + TwygoApplication.object.id;
      this.adjustLineHeight();
      return this.adjustColumns();
    },
    bindEvents: function() {
      $(window).resize(function() {
        TwygoTimeTable.adjustColumns();
        return TwygoTimeTable.adjustLineHeight();
      });
      $(document).on("click", ".timetable-activity", TwygoTimeTable.showDescriptionModal);
      $(".timetable-date").click(this.loadDate);
      $(".timetable-previous-stage").click(function() {
        return TwygoTimeTable.previousStage();
      });
      $(".timetable-next-stage").click(function() {
        return TwygoTimeTable.nextStage();
      });
      $(".timetable-previous-date").click(function() {
        return TwygoTimeTable.previousDate();
      });
      $(".timetable-next-date").click(function() {
        return TwygoTimeTable.nextDate();
      });
      return this.adjustScrollButtonVisibility();
    },
    loadDate: function() {
      $(this).siblings().removeClass("active");
      $(this).addClass("active");
      if (TwygoTimeTable.loadProgramXhr !== void 0) {
        TwygoTimeTable.loadProgramXhr.abort();
      }
      $(".timetable-body").addClass("timetable-body-loading");
      return TwygoTimeTable.loadProgramXhr = $.get(TwygoTimeTable.baseUrl + "/stage_programs/for_day", {
        date: $(this).attr("data-date")
      }, function(response) {
        $(".timetable-activities").html(response);
        $(".timetable-body").removeClass("timetable-body-loading");
        TwygoTimeTable.adjustLineHeight();
        return TwygoTimeTable.adjustColumns();
      });
    },
    expandSpeaker: function(link, speaker_id) {
      if ($(link).attr("class") === "expand") {
        $(this).attr("class", "collapse");
      } else {
        $(this).attr("class", "expand");
      }
      $(".resume-" + speaker_id).slideToggle("fast", function() {
        return $(".modal-program-description").animate({
          scrollTop: 220
        }, "fast");
      });
      return false;
    },
    showDescriptionModal: function(e) {
      var g, logged, stageProgramId;
      if ($(e.target).is(":checkbox")) {
        return;
      }
      logged = TwygoApplication.currentUserId !== 0;
      (g = TwygoEventGrid).modalRelatedCheck = $(":checkbox", this);
      $.modal("<div class='modal-program-agenda'> <div class='modal-program-name'>" + ($(this).attr("data-program-name")) + "</div> <div class='modal-program-description'>" + ($(this).attr("data-description").replace(/\n/g, "<br>")) + " <div class='program_speakers_list'></div></div> <div class='modal-program-date-location'> <div class='start-end'>" + ($(this).attr("data-start-end")) + "</div> <div class='location'>" + ($(this).attr("stage_name")) + "</div> </div> </div>", {
        focus: false,
        minWidth: 476
      });
      stageProgramId = $(this).attr('data-program-id');
      return $.ajax({
        url: "/e/" + TwygoApplication.object.id + "/stage_programs/" + ($(this).attr('data-program-id')) + "/load_speakers_details",
        dataType: 'json',
        type: 'get',
        success: function(response) {
          var i, invisible_class, len, ref, results, speaker;
          ref = response.speakers;
          results = [];
          for (i = 0, len = ref.length; i < len; i++) {
            speaker = ref[i];
            if (($.trim(speaker.short_resume)) === "null" || ($.trim(speaker.short_resume)) === "" || ($.trim(speaker.short_resume)) === null) {
              invisible_class = "nodisplay";
            } else {
              invisible_class = "";
            }
            results.push($(".program_speakers_list").append("<div class='one-speaker'> <div class='user-img'> <a href='#' onclick='$.modal.close();window.location.href=\"" + speaker.profile_url + "\"'> <img src='" + speaker.avatar_url + "' height='30'></img> </a> </div> <div id='text-people'> <div class='name'> <a href='#' onclick='$.modal.close();window.location.href=\"" + speaker.profile_url + "\"' style='font-weight:bold'>" + ((speaker.first_name + " " + speaker.last_name).truncate(35)) + " </a> <a class='" + invisible_class + " more-information' href='#'> <div class='expand' onclick='TwygoTimeTable.expandSpeaker(this, " + speaker.id + ");'>" + (I18n.t('views.stage_programs.more_information')) + "</div> </a> </div> </div> <div class='speaker-resume resume-" + speaker.id + "'> <p>" + speaker.short_resume + "</p> </div> </div>"));
          }
          return results;
        }
      });
    }
  };

}).call(this);
(function() {
  this.TwygoTrophySettings = {
    handleSelectMode: function(e) {
      var selected;
      selected = e.val();
      return $.ajax({
        url: "/o/" + TwygoApplication.currentOrganizationId + "/gamification_trophies/change_custom_logo_setting",
        dataType: "json",
        type: "post",
        data: {
          value: selected
        },
        success: function(response) {
          if (selected === "1") {
            return TwygoTrophySettings.showSettingsList(response);
          } else {
            return TwygoTrophySettings.hideSettingsList();
          }
        }
      });
    },
    showSettingsList: function(response) {
      TwygoTrophySettings.appendFormFields(response);
      TwygoTrophySettings.appendActionButtonRow(response.length);
      $("#trophy-details-row").show();
      return $("#gamification_trophy_form").show();
    },
    appendActionButtonRow: function(row_length) {
      return $("#gamification_trophy_form").append($("<div class='row col-lg-6' id='action_row'> <div id ='button-add-row'> <button class='btn btn-primary' id='add_trophy_settings' name='commit' onclick='TwygoTrophySettings.addTrophyLine()' type='button' value='save'>" + (I18n.t("game_rules.add_level")) + "</i></button> </div> <div id='button-remove-row'> <button class='btn btn-primary' id='delete_trophy_line' onclick='TwygoTrophySettings.showDeleteTrophyModal()' type='button' value='save'>" + (I18n.t("game_rules.remove_level")) + "</button> </div> <div id ='button-save-row'> <button class='btn btn-primary' id='save_trophy_settings' name='commit' type='submit' value='save'> " + (I18n.t('_save')) + "</button> </div> </div>"));
    },
    appendFormFields: function(response) {
      $('#gamification_trophy_form').append($("<div id='trophy-details-row' class='form-row col-lg-6'></div>"));
      return response.forEach(function(el, i) {
        return $('#trophy-details-row').append($("<div id='" + el.id + "' class='row' style='  width: 100%'> <div class='col-md-6 trophy-gamification-points'> " + (el === response[0] ? "<label for='trophies_" + el.id + "_points_required'>" + (I18n.t("game_rules.no_score")) + "</label>" : el === response[response.length - 1] ? "<label class='required' for='trophies_" + el.id + "_points_required'>" + (I18n.t("game_rules.above_points")) + "</label> <div> <input class='form-control ellipsis' autocomplete='off' readonly= 'true' required='required' type='text' value='" + (response[response.length - 2].points_required + 1) + "' name='trophies[" + el.id + "][points_required]' id='trophies_" + el.id + "_points_required' onfocusout= 'TwygoTrophySettings.validatePointsField(" + el.id + ")'> <span>" + (I18n.t("game_rules.trophy_points")) + "</span> </div>" : "<label class='required' for='trophies_" + el.id + "_points_required'>" + (I18n.t("game_rules.up_to_points")) + "</label> <div> <input class='form-control ellipsis' autocomplete='off' required='required' type='text' value='" + el.points_required + "' name='trophies[" + el.id + "][points_required]' id='trophies_" + el.id + "_points_required' onfocusout= 'TwygoTrophySettings.validatePointsField(" + el.id + ")'> <span>" + (I18n.t("game_rules.trophy_points")) + "</span> </div>") + " </div> <div class='col-md-6 trophy-gamification-image form-wrap'> <div class='form-file banner' style='margin-top: 10px;'> <div class='form-file--content js--preview-avatar has-banner'> <div class='form-file__button on-prev' id='img-preview_logo_" + el.id + "' style='background-image: url(" + (el.logo.url === null ? '/assets/trophy.svg' : el.logo.url) + ")'> <span class='label' style='background-color: white;'> <b class='change'>" + (I18n.t("commom.change_image")) + "</b> </span> <input value='" + el.id + "' class='input-file' accept='.png,.jpg,.jpeg' onchange='TwygoTrophySettings.readURL(this, " + el.id + ")' type='file' name='trophies[" + el.id + "][logo]' id='trophies_" + el.id + "_logo'> </div> </div> </div> </div> </div>"));
      });
    },
    hideSettingsList: function() {
      $("#trophy-details-row").slideUp(100, function() {
        return $(this).remove();
      });
      $("#action_row").remove();
      return $("#gamification_trophy_form").hide();
    },
    deleteTrophyLine: function() {
      var last_row, trophy_id;
      if ($("#trophy-details-row").children().length <= 4) {
        TwygoFlashMessage.setMessage('error', "" + (I18n.t("game_rules.minimum_level_limit")));
        return false;
      }
      trophy_id = $('#trophy-details-row').children().last().attr('id');
      TwygoTrophySettings.deleteTrophyLogo(trophy_id);
      last_row = $("#" + trophy_id + ".row").prev();
      $("#" + trophy_id + ".row").remove();
      TwygoTrophySettings.includeAboveLabel();
      TwygoTrophySettings.populateUntilLabel(last_row);
      return TwygoTrophySettings.updateLastRow(last_row);
    },
    updateLastRow: function(last_row) {
      var row_id, value;
      row_id = $(last_row).attr('id');
      value = $("#trophies_" + row_id + "_points_required").val();
      return $.ajax({
        url: "/o/" + TwygoApplication.currentOrganizationId + "/gamification_trophies/update",
        dataType: "json",
        type: "put",
        data: {
          trophy_id: row_id,
          points_required: value
        }
      });
    },
    populateUntilLabel: function(last_row) {
      var last_input, prev_input;
      last_input = $(last_row).children(".trophy-gamification-points").find("input");
      prev_input = $(last_row).prev().children(".trophy-gamification-points").find("input");
      return $(last_input)[0].value = parseInt($(prev_input).val()) + 1;
    },
    addTrophyLine: function() {
      if ($("#trophy-details-row").children().length >= 5) {
        TwygoFlashMessage.setMessage('error', "" + (I18n.t("game_rules.maximum_level_limit")));
        return false;
      }
      return TwygoTrophySettings.appendLastTrophy();
    },
    deleteTrophyLogo: function(trophy_id) {
      return $.ajax({
        url: "/o/" + TwygoApplication.currentOrganizationId + "/gamification_trophies/delete_trophy_logo",
        dataType: "json",
        type: "delete",
        data: {
          trophy_id: trophy_id
        },
        success: function(response) {
          return TwygoTrophySettings.createMessageSuccess(response.text);
        }
      });
    },
    addTrophyLogo: function() {
      var last_input, last_row, value;
      last_row = $('#trophy-details-row').children().last();
      last_input = $(last_row).children(".trophy-gamification-points").find("input");
      value = parseInt($(last_input)[0].value) + 1;
      return $.ajax({
        url: "/o/" + TwygoApplication.currentOrganizationId + "/gamification_trophies/create_trophy_logo",
        dataType: "json",
        type: "post",
        data: {
          points_required: value
        },
        success: function(response) {
          TwygoTrophySettings.appendLastTrophy(response.data);
          return TwygoTrophySettings.createMessageSuccess(response.text);
        },
        error: function(response) {
          return TwygoTrophySettings.createMessageError(response.responseJSON["text"]);
        }
      });
    },
    appendLastTrophy: function(el) {
      var last_input_value, last_row;
      TwygoTrophySettings.includeUntilLabel();
      last_row = $('#trophy-details-row').children().last();
      last_input_value = $(last_row).children(".trophy-gamification-points").find("input").val();
      return $('#trophy-details-row').append($("<div id='new' class='row' style='width: 100%'> <div class='col-md-6 trophy-gamification-points'> <label class='required' for='trophies_new_points_required'>" + (I18n.t("game_rules.above_points")) + "</label> <div> <input class='form-control ellipsis' autocomplete='off' readonly = 'true' required='required' type='text' value='" + (parseInt(last_input_value) + 1) + "' name='trophies[new][points_required]' id='trophies_new_points_required'> <span>" + (I18n.t("game_rules.trophy_points")) + "</span> </div> </div> <div class='col-md-6 trophy-gamification-image form-wrap'> <div class='form-file banner' style='margin-top: 10px;'> <div class='form-file--content js--preview-avatar has-banner'> <div class='form-file__button on-prev' id='img-preview_logo_new' style='background-image: url(/assets/trophy.svg)'> <span class='label' style='background-color: white;'> <b class='change'>" + (I18n.t("commom.change_image")) + "</b> </span> <input value='new' class='input-file' accept='.png,.jpg,.jpeg' onchange='TwygoTrophySettings.readURL(this)' type='file' name='trophies[new][logo]' id='trophies_new_logo'> </div> </div> </div> </div> </div>"));
    },
    includeUntilLabel: function() {
      var trophy_points, trophy_row;
      trophy_row = $('#trophy-details-row').children().last();
      trophy_points = $(trophy_row).children(".trophy-gamification-points");
      $(trophy_points).find("input").prop("readonly", false);
      return $(trophy_points).find("label").text("" + (I18n.t("game_rules.up_to_points")));
    },
    includeAboveLabel: function() {
      var trophy_points, trophy_row;
      trophy_row = $('#trophy-details-row').children().last();
      trophy_points = $(trophy_row).children(".trophy-gamification-points");
      $(trophy_points).find("input").prop("readonly", true);
      return $(trophy_points).find("label").text("" + (I18n.t("game_rules.above_points")));
    },
    validatePointsField: function(row_id) {
      var current_input, current_row, pen_row;
      if (parseInt($('#trophy-details-row').children().last().attr('id')) === row_id) {
        return;
      }
      pen_row = $('#trophy-details-row').children().last().prev().attr('id');
      current_row = $("#" + row_id + ".row");
      current_input = $(current_row).children(".trophy-gamification-points").find("input");
      $(current_input).siblings('.errormessage').remove();
      $(current_input).removeClass('error');
      if ($(current_input).val() === "") {
        $(current_input).addClass('error');
        $(current_input).parent().append($("<div class='errormessage'>" + (I18n.t("javascripts.required_field")) + "</div>"));
        return false;
      } else if (parseInt($(current_input).val()) < 0) {
        $(current_input).addClass('error');
        $(current_input).parent().append($("<div class='errormessage'>" + (I18n.t("game_rules.cant_be_negative")) + "</div>"));
        return false;
      } else if (row_id === parseInt(pen_row)) {
        TwygoTrophySettings.checkPrevValue(row_id, current_input);
        return TwygoTrophySettings.populateDisabledField(row_id);
      } else {
        TwygoTrophySettings.checkPrevValue(row_id, current_input);
        return TwygoTrophySettings.checkNextValue(row_id, current_input);
      }
    },
    checkPrevValue: function(row_id, current_input) {
      var pen_row, prev_input, prev_row;
      prev_row = $("#" + row_id + ".row").prev();
      prev_input = $(prev_row).children(".trophy-gamification-points").find("input");
      pen_row = $('#trophy-details-row').children().last().prev();
      if (parseInt($(prev_input).val()) >= parseInt($(current_input).val())) {
        $(current_input).addClass('error');
        $(current_input).parent().append($("<div class='errormessage'>" + (I18n.t("game_rules.prev_level_error")) + "</div>"));
        return false;
      } else {
        if (row_id === parseInt($(pen_row).attr('id'))) {
          return TwygoTrophySettings.validatePointsField(parseInt($(prev_row).attr('id')));
        } else {
          $(prev_input).siblings('.errormessage').remove();
          return $(prev_input).removeClass('error');
        }
      }
    },
    checkNextValue: function(row_id, current_input) {
      var next_input, next_row;
      next_row = $("#" + row_id + ".row").next();
      next_input = $(next_row).children(".trophy-gamification-points").find("input");
      if (parseInt($(next_input).val()) <= parseInt($(current_input).val())) {
        $(current_input).addClass('error');
        $(current_input).parent().append($("<div class='errormessage'>" + (I18n.t("game_rules.next_level_error")) + "</div>"));
        return false;
      } else {
        $(next_input).siblings('.errormessage').remove();
        $(next_input).removeClass('error');
        return true;
      }
    },
    validateFormSubmit: function() {
      var errors, last_input, last_row;
      last_row = $('#trophy-details-row').children().last();
      last_input = $(last_row).children(".trophy-gamification-points").find("input");
      if (TwygoTrophySettings.validateImageInputs()) {
        return false;
      }
      errors = $("#trophy-details-row").find(".errormessage");
      if (errors.length > 0) {
        TwygoFlashMessage.setMessage('error', "" + (I18n.t("game_rules.fields_with_errors")));
        return false;
      } else {
        return true;
      }
    },
    validateImageInputs: function() {
      var error;
      error = 0;
      Array.from($('#trophy-details-row').children()).forEach(function(trophy_row) {
        var image_div, url;
        image_div = $(trophy_row).find('.form-file__button.on-prev');
        url = $(image_div).css('background-image');
        if (url.includes("trophy.svg")) {
          error += 1;
          return image_div.css('border-color', '#FF6347');
        } else {
          return image_div.css('border-color', '');
        }
      });
      if (error > 0) {
        TwygoFlashMessage.setMessage('error', "" + (I18n.t("game_rules.mandatory_image_input")));
        return true;
      } else {
        return false;
      }
    },
    populateDisabledField: function(row_id) {
      var current_row, current_value, last_row;
      current_row = $("#" + row_id + ".row");
      current_value = $(current_row).children(".trophy-gamification-points").find("input").val();
      last_row = $('#trophy-details-row').children().last();
      return $(last_row).children(".trophy-gamification-points").find("input")[0].value = parseInt(current_value) + 1;
    },
    readURL: function(input, id) {
      var extension, fileTypes, isSupported, reader;
      if (id == null) {
        id = "new";
      }
      fileTypes = ['.jpg', '.jpeg', '.png'];
      if (input.files && input.files[0]) {
        extension = input.files[0].name.match(/\.[0-9a-z]+$/i);
        isSupported = fileTypes.indexOf(extension[0]);
        if (input.files[0].size / 1000 > 500) {
          $("#trophies_" + id + "_logo").val("");
          return TwygoFlashMessage.setMessage('error', "" + (I18n.t('common.max_attachment_size', {
            file: 'Logo',
            size: '500Kb'
          })));
        } else if (isSupported < 0) {
          $("#trophies_" + id + "_logo").val("");
          return TwygoFlashMessage.setMessage('error', "" + (I18n.t("game_rules.invalid_file_format")));
        } else {
          reader = new FileReader();
          reader.onload = function(e) {
            return $("#img-preview_logo_" + id).css("background-image", 'url(' + e.target.result + ')');
          };
          return reader.readAsDataURL(input.files[0]);
        }
      }
    },
    createMessageError: function(message) {
      return TwygoFlashMessage.setMessage('error', message);
    },
    createMessageSuccess: function(message) {
      return TwygoFlashMessage.setMessage('success', message);
    },
    dismissModal: function(modalId) {
      var $inactivate;
      $inactivate = $('.inactivate-option');
      if (!$inactivate.hasClass('hidden')) {
        $inactivate.addClass('hidden');
      }
      modalId = $(modalId);
      return modalId.fadeOut();
    },
    showDeleteTrophyModal: function() {
      var $notifyModal;
      if ($("#trophy-details-row").children().length <= 4) {
        TwygoFlashMessage.setMessage('error', "" + (I18n.t("game_rules.minimum_level_limit")));
        return false;
      }
      $notifyModal = $('#delete-trophy-modal');
      TwygoUtility.toggleModal($notifyModal);
      $notifyModal.find('.inactiv_or_active').html("" + (I18n.t("game_rules.remove_level")));
      $notifyModal.find('.modal-body').html("<p style='padding: 0px; background-color: transparent' class='are_you_sure_destroy'>" + ("" + (I18n.t("game_rules.are_you_sure_remove"))) + "</p>");
      $notifyModal.find('.modal-footer').html("<button class='btn btn-default btn-modal-action' type='button'>" + I18n.t('common._no') + "</button><button class='btn btn-primary btn-notify-users btn-modal-action' type='button'>" + I18n.t('common._yes') + "</button>");
      $notifyModal.find('.btn-default').attr('onClick', 'TwygoEventManagement.dismissModal("#delete-trophy-modal")');
      return $notifyModal.find('.btn-notify-users').attr('onClick', 'TwygoTrophySettings.deleteTrophyLine(); TwygoEventManagement.dismissModal("#delete-trophy-modal")');
    }
  };

}).call(this);
(function() {
  this.TwygoUrlWebhook = {
    enableContainerUrlWebhook: function(action, id, event_function) {
      if (event_function == null) {
        event_function = 0;
      }
      $("#container_url_webhook").show();
      if (action === "new") {
        $("#save_url_webhook").removeClass("edit_url_webhook");
        $("#field_url").val("");
        $("#save_url_webhook").removeAttr('onclick');
        $("#save_url_webhook").attr('onClick', 'TwygoUrlWebhook.createUrlWebhook();');
        return $("#save_url_webhook").addClass("create_url_webhook");
      } else {
        $("#save_url_webhook").removeClass("create_url_webhook");
        $("#save_url_webhook").removeAttr('onclick');
        $("#field_url").val($("#url_webhooks_" + id).text());
        $("#save_url_webhook").attr('onClick', "TwygoUrlWebhook.editUrlWebhook(" + id + ");");
        $("#save_url_webhook").addClass("edit_url_webhook");
        return $("#field_function").val(event_function);
      }
    },
    disabledContainerUrlWebhook: function() {
      $("#container_url_webhook").hide();
      return $("#field_url").val("");
    },
    createUrlWebhook: function() {
      var event_url, new_url;
      new_url = $("#field_url");
      event_url = $('#field_function');
      return $.ajax({
        url: "/o/" + TwygoApplication.currentOrganizationId + "/url_webhooks",
        dataType: "json",
        type: "post",
        data: {
          new_url: new_url.val(),
          event_url: event_url.val()
        },
        beforeSend: function() {
          return TwygoOrganization.lockButtonSave();
        },
        error: function(response) {
          return TwygoUrlWebhook.createMessageError(response.responseJSON["text"]);
        },
        success: function(response) {
          $('#box_url_webhooks').append("<div class='url_webhook' id='" + response.url_webhook_id + "'> <div class='row no_margin_left'> <div class='col-md-3'> <label for='function' id='function_url_webhooks_" + response.url_webhook_id + "'>" + (I18n.t("url_webhook.function_option_" + response.event_function)) + "</label> </div> <div class='col-md-7'> <label for='url' id='url_webhooks_" + response.url_webhook_id + "'>" + (new_url.val()) + "</label> </div> <div class='col-md-1'> <span class='checkbox-content left'> <span class='input'> <input checked='checked' id='check_change_url_webhooks_active_" + response.url_webhook_id + "' name='check_change_url_webhooks_active_" + response.url_webhook_id + "' onclick='TwygoUrlWebhook.changeActiveUrlWebhook(" + response.url_webhook_id + ")' type='checkbox' value='true'> <span class='checkmark'></span> </span> </span> </div> <div class='col-md-1 display_flex action_buttons'> <button class='url_webhook_edit' onclick='TwygoUrlWebhook.enableContainerUrlWebhook(\"edit\", " + response.url_webhook_id + ")' title='" + (I18n.t('common.edit')) + "'> <i class='icon-pencil'></i> </button> <button class='url_webhook_destroy' onclick='TwygoUrlWebhook.deleteUrlWebhook(" + response.url_webhook_id + ")' title='" + (I18n.t('common.delete')) + "'> <i class='icon-times'></i> </button> </div> </div> </div>");
          return TwygoUrlWebhook.createMessageSuccess(response.text);
        },
        complete: function() {
          new_url.val("");
          return TwygoOrganization.unlockButtonSave();
        }
      });
    },
    editUrlWebhook: function(id) {
      var event_url, url_edit;
      url_edit = $("#field_url");
      event_url = $('#field_function');
      return $.ajax({
        url: "/o/" + TwygoApplication.currentOrganizationId + "/url_webhooks/" + id,
        dataType: "json",
        type: "put",
        data: {
          url_edit: url_edit.val(),
          event_url: event_url.val()
        },
        beforeSend: function() {
          TwygoOrganization.lockButtonSave();
          return $('#box_url_webhooks').addClass('ajax-loading');
        },
        error: function(response) {
          return TwygoUrlWebhook.createMessageError(response.responseJSON["text"]);
        },
        success: function(response) {
          $("#" + id + ".url_webhook").remove();
          $("#box_url_webhooks").append("<div class='url_webhook' id='" + id + "'> <div class='row no_margin_left'> <div class='col-md-3'> <label for='function' id='function_url_webhooks_" + id + "'>" + (I18n.t("url_webhook.function_option_" + response.event_function)) + "</label> </div> <div class='col-md-7'> <label for='url' id='url_webhooks_" + id + "'>" + (url_edit.val()) + "</label> </div> <div class='col-md-1'> <span class='checkbox-content left'> <span class='input'> <input checked='checked' id='check_change_url_webhooks_active_" + id + "' name='check_change_url_webhooks_active_" + id + "' onclick='TwygoUrlWebhook.changeActiveUrlWebhook(" + id + ")' type='checkbox' value='true'> <span class='checkmark'></span> </span> </span> </div> <div class='col-md-1 display_flex action_buttons'> <button class='url_webhook_edit' onclick='TwygoUrlWebhook.enableContainerUrlWebhook(\"edit\", " + id + ")' title='" + (I18n.t('common.edit')) + "'> <i class='icon-pencil'></i> </button> <button class='url_webhook_destroy' onclick='TwygoUrlWebhook.deleteUrlWebhook(" + id + ")' title='" + (I18n.t('common.delete')) + "'> <i class='icon-times'></i> </button> </div> </div> </div>");
          TwygoUrlWebhook.createMessageSuccess(response.text);
          return $('#container_url_webhook').hide();
        },
        complete: function() {
          url_edit.val("");
          TwygoOrganization.unlockButtonSave();
          return $('#box_url_webhooks').removeClass('ajax-loading');
        }
      });
    },
    deleteUrlWebhook: function(id) {
      return $.ajax({
        url: "/o/" + TwygoApplication.currentOrganizationId + "/url_webhooks/" + id,
        dataType: "json",
        type: "delete",
        data: {},
        beforeSend: function() {
          return $('#box_url_webhooks').addClass('ajax-loading');
        },
        error: function(response) {
          return TwygoUrlWebhook.createMessageError(response.responseJSON["text"]);
        },
        success: function(response) {
          $("#" + id + ".url_webhook").remove();
          return TwygoUrlWebhook.createMessageSuccess(response.text);
        },
        complete: function() {
          return $('#box_url_webhooks').removeClass('ajax-loading');
        }
      });
    },
    changeActiveUrlWebhook: function(id) {
      var params_value_change_url_webhooks_active;
      params_value_change_url_webhooks_active = $("#check_change_url_webhooks_active_" + id).is(":checked");
      return $.ajax({
        url: "/o/" + TwygoApplication.currentOrganizationId + "/url_webhooks/" + id + "/change_url_webhooks_active",
        dataType: "json",
        type: "put",
        data: {
          params_value_change_url_webhooks_active: params_value_change_url_webhooks_active
        },
        beforeSend: function() {
          return $('#box_url_webhooks').addClass('ajax-loading');
        },
        error: function(response) {
          $('#check_change_url_webhooks_active').prop('checked', !params_value_change_url_webhooks_active);
          $('#check_change_url_webhooks_active').val(!params_value_change_url_webhooks_active);
          return TwygoUrlWebhook.createMessageError(response.responseJSON["text"]);
        },
        success: function(response) {
          return TwygoUrlWebhook.createMessageSuccess(response.text);
        },
        complete: function() {
          return $('#box_url_webhooks').removeClass('ajax-loading');
        }
      });
    },
    createMessageError: function(message) {
      return TwygoFlashMessage.setMessage('error', message);
    },
    createMessageSuccess: function(message) {
      return TwygoFlashMessage.setMessage('success', message);
    }
  };

}).call(this);
(function() {
  this.TwygoUseModeController = {
    save: function(params) {
      return new Promise(function(resolve, reject) {
        return $.ajax({
          url: "/o/" + TwygoApplication.currentOrganizationId + "/use_modes",
          type: 'POST',
          data: params,
          beforeSend: function() {
            return TwygoApplication.loader('show');
          },
          complete: function() {
            return TwygoApplication.loader('hide');
          },
          success: function(result) {
            return resolve(result);
          },
          error: function(e) {
            return reject({
              message: e.responseJSON.error
            });
          }
        });
      });
    },
    update: function(id, params) {
      return new Promise(function(resolve, reject) {
        return $.ajax({
          url: "/o/" + TwygoApplication.currentOrganizationId + "/use_modes/" + id,
          type: 'PUT',
          data: params,
          beforeSend: function() {
            return TwygoApplication.loader('show');
          },
          complete: function() {
            return TwygoApplication.loader('hide');
          },
          success: function(result) {
            return resolve(result);
          },
          error: function(e) {
            return reject({
              message: e.responseJSON.error
            });
          }
        });
      });
    }
  };

  this.TwygoUseModeItem = {
    state: {
      title: "",
      itens: [],
      is_edit: false
    },
    DISABLED: false,
    ACTIVED: true,
    TO_HOME: true,
    NOT_HOME: false,
    IS_DISABLED: true,
    init: function(use_mode) {
      TwygoUseModeItem.state = {
        use_mode: null,
        title: "",
        itens: [],
        is_edit: false
      };
      if (use_mode) {
        TwygoUseModeItem.setUserMode(use_mode);
        TwygoUseModeItem.state.is_edit = true;
      }
      TwygoUseModeItem.addFocusInInputTitle();
      TwygoUseModeItem.restartFocusLoop();
      TwygoUseModeItem.setHeaderHistory();
      return TwygoUseModeItem.handleContainerState();
    },
    addFocusInInputTitle: function() {
      return $("#use_mode_title").focus();
    },
    setUserMode: function(use_mode) {
      var copy_user_mode;
      copy_user_mode = Object.assign({}, use_mode);
      TwygoUseModeItem.state.use_mode = copy_user_mode;
      TwygoUseModeItem.state.title = copy_user_mode.title;
      return $('#use_mode_title').val(copy_user_mode.title);
    },
    setItens: function(itens) {
      TwygoUseModeItem.state.itens = Object.assign([], itens);
      return TwygoUseModeItem.setDefaultHomePage(TwygoUseModeItem.state.itens.findIndex(function(e) {
        return e.home_page === true;
      }));
    },
    changeHomeIcon: function(id) {
      $('.to-home').removeClass('to-home');
      return $('#icon_to_home_' + id).addClass('to-home');
    },
    setTitle: function(title) {
      return TwygoUseModeItem.state.title = title;
    },
    handleStateCheckbox: function(id, checked) {
      if (checked) {
        $(".alert-tipsy-home-page-disabled[data-id=" + id + "]").removeAttr('original-title');
        $("#title-" + id).removeClass('opacity');
        return delete TwygoUseModeItem.getItemMenuById(id).is_disabled;
      } else {
        $(".home-page[data-id=" + id + "]").addClass("alert-tipsy-home-page-disabled").prop('title', I18n.t("views.use_modes.alert_to_home"));
        $("#title-" + id).addClass('opacity');
        TwygoUseModeItem.renderTipsy();
        return TwygoUseModeItem.getItemMenuById(id).is_disabled = true;
      }
    },
    toogleToHomePage: function(id) {
      if (!TwygoUseModeItem.validCanSetToHome(id)) {
        TwygoFlashMessage.setMessage('error', I18n.t('views.use_modes.alert_to_home'));
        return false;
      }
      return TwygoUseModeItem.setDefaultHomePage(id);
    },
    setDefaultHomePage: function(id) {
      var e, i, index, len, ref, results;
      TwygoUseModeItem.disableCheckbox(id);
      TwygoUseModeItem.clearTipys(id);
      TwygoUseModeItem.changeHomeIcon(id);
      ref = TwygoUseModeItem.state.itens;
      results = [];
      for (index = i = 0, len = ref.length; i < len; index = ++i) {
        e = ref[index];
        if (id === index) {
          results.push(e.home_page = TwygoUseModeItem.TO_HOME);
        } else {
          results.push(e.home_page = TwygoUseModeItem.NOT_HOME);
        }
      }
      return results;
    },
    clearTipys: function(id) {
      $(".alert-tipsy-home-page").removeAttr('original-title');
      return $("#alert-tipsy-home-page-" + id).prop('title', I18n.t("views.use_modes.alert_disabled"));
    },
    disableCheckbox: function(id) {
      $(":checkbox:disabled").removeAttr('disabled');
      return $("#is-disabled-checkbox-" + id).prop('disabled', 'disabled');
    },
    isHomePage: function(id) {
      return TwygoUseModeItem.getItemMenuById(id).home_page === TwygoUseModeItem.TO_HOME;
    },
    validCanSetToHome: function(id) {
      return !(TwygoUseModeItem.getItemMenuById(id).is_disabled === TwygoUseModeItem.IS_DISABLED);
    },
    getItemMenuById: function(id) {
      return TwygoUseModeItem.state.itens[id];
    },
    renderTipsy: function() {
      $('.alert-tipsy-home-page-disabled').tipsy({
        gravity: 'n',
        opacity: 0.95,
        html: true,
        fade: true
      });
      return $('.alert-tipsy-home-page').tipsy({
        gravity: 'n',
        opacity: 0.95,
        html: true,
        fade: true,
        artia_element: 'w300'
      });
    },
    saveForm: function() {
      var id, title;
      title = $('#use_mode_title').val().trim();
      if (title === "") {
        $('#use_mode_title').addClass('error');
      } else {
        $('#use_mode_title').removeClass('error');
      }
      $('#use_mode_title').val(title);
      TwygoUseModeItem.setTitle(title);
      if (TwygoUseModeItem.state.is_edit) {
        id = TwygoUseModeItem.state.use_mode;
        title = TwygoUseModeItem.state.title;
        TwygoUseModeItem.state.use_mode.title = title;
        TwygoUseModeController.update(id, TwygoUseModeItem.state).then(function(r) {
          TwygoFlashMessage.setMessage('success', r.message);
          return window.location = "/o/" + TwygoApplication.currentOrganizationId + "/use_modes";
        })["catch"](function(r) {
          return TwygoFlashMessage.setMessage('error', r.message);
        });
        return true;
      }
      return TwygoUseModeController.save(TwygoUseModeItem.state).then(function(r) {
        TwygoFlashMessage.setMessage('success', r.message);
        return window.location = "/o/" + TwygoApplication.currentOrganizationId + "/use_modes";
      })["catch"](function(r) {
        return TwygoFlashMessage.setMessage('error', r.message);
      });
    },
    returnToUseModes: function() {
      return window.location = "/o/" + TwygoApplication.currentOrganizationId + "/use_modes";
    },
    restartFocusLoop: function() {
      return $('#last_focus').focus(function() {
        return $('#use_mode_title').focus();
      });
    },
    setHeaderHistory: function() {
      if (location.pathname.includes("new")) {
        return TwygoApplication.changeBreadcrumNavigation(I18n.t("common._add"));
      } else if (location.pathname.includes("edit")) {
        return TwygoApplication.changeBreadcrumNavigation(I18n.t("common.edit"), $('#use_mode_title').val());
      }
    },
    handleContainerState: function() {
      return $(".checkbox-container").on('keydown', function(e) {
        var el;
        el = $(this).find('input');
        if ((e.keyCode === 32) && !el.prop("disabled")) {
          e.preventDefault();
          return el.prop("checked", !el[0].checked).change();
        }
      });
    }
  };

}).call(this);
(function() {
  this.TwygoUseMode = {
    initialize: function() {
      this.newUseMode();
      this.initTipsy();
      $('#use_mode_title_search').keydown(TwygoCommunityDiscussions.debounce(TwygoUseMode.searchUseMode, 700));
      return $('#search_use_mode_buttom').on('click', function() {
        return TwygoUseMode.searchUseModeByButton();
      });
    },
    defaultUseMode: function(use_mode) {
      var default_id;
      default_id = $(use_mode).closest('.professional-row').attr('id');
      TwygoUseMode.handleDestroyButton(default_id);
      return $.ajax({
        url: "/o/" + TwygoApplication.currentOrganizationId + "/use_modes/set_default_use_mode",
        type: 'POST',
        data: {
          use_mode_id: default_id
        },
        beforeSend: function() {
          return $('#table_use_mode').addClass('ajax-loading');
        },
        success: function(response) {
          return TwygoFlashMessage.setMessage("success", I18n.t('use_modes.default_update_success'));
        },
        error: function(response) {
          return TwygoFlashMessage.setMessage('error', response.responseText);
        },
        complete: function() {
          return $('#table_use_mode').removeClass('ajax-loading');
        }
      });
    },
    handleDestroyButton: function(default_id) {
      $('.use-mode-delete.disabled').off().removeAttr('original-title').prop('title', I18n.t("common.delete")).removeClass('disabled');
      $("#use_mode_delete_" + default_id).prop('title', I18n.t("views.use_modes.disabled_title")).addClass('disabled');
      return $('.use-mode-delete.disabled').tipsy({
        gravity: 'z',
        opacity: 0.95,
        html: true,
        fade: true
      });
    },
    newUseMode: function() {
      return $('#add_use_mode').on('click', function() {
        return window.location = "/o/" + TwygoApplication.currentOrganizationId + "/use_modes/new";
      });
    },
    initTipsy: function() {
      $('#use_mode.tab_selector').tipsy({
        gravity: 'n',
        opacity: 0.95,
        html: true,
        fade: true
      });
      return $('.use-mode-delete.disabled').tipsy({
        gravity: 'z',
        opacity: 0.95,
        html: true,
        fade: true
      });
    },
    destroyUseMode: function(use_mode) {
      var message_title, useModeId, useModeTitle;
      use_mode = $(use_mode).closest('.use-mode-delete');
      if (use_mode.hasClass('disabled')) {
        return false;
      }
      useModeTitle = use_mode.parent().attr("title");
      useModeId = use_mode.parent().attr("id");
      message_title = I18n.t("views.use_modes.are_you_sure_destroy");
      message_title += "\n\n";
      message_title += I18n.t("_action_warning");
      TwygoModalRemoveItem.initialize({
        id: 'modal_remove_use_mode',
        sub_title: useModeTitle,
        message_title: message_title,
        configuration: {
          url: "/o/" + TwygoApplication.currentOrganizationId + "/use_modes/" + useModeId,
          dataType: "json",
          type: "delete",
          reload: true
        },
        callbacks: {
          success: function(response) {
            if (response.status === 500) {
              return TwygoFlashMessage.setMessage("error", response.message);
            } else {
              return TwygoFlashMessage.setMessage("notice", response.message);
            }
          },
          error: function(response) {
            return TwygoFlashMessage.setMessage("error", I18n.t("destroy_fail"));
          }
        }
      });
      return TwygoModalRemoveItem.open(useModeId);
    },
    searchUseMode: function() {
      var input;
      input = $('#use_mode_title_search').val();
      if (input !== '') {
        if (input.length <= 2) {
          return;
        }
      }
      return TwygoUseMode.ajaxSearchUseMode(input);
    },
    searchUseModeByButton: function() {
      var input;
      input = $('#use_mode_title_search').val();
      return TwygoUseMode.ajaxSearchUseMode(input);
    },
    ajaxSearchUseMode: function(input) {
      return $.ajax({
        url: "/o/" + TwygoApplication.currentOrganizationId + "/use_modes/search",
        type: 'GET',
        data: {
          title: input
        },
        beforeSend: function() {
          return $('#table_use_mode').addClass('ajax-loading');
        },
        success: function(response) {
          $('#use_mode_filter_not_found').remove();
          if (response.length > 0) {
            $('#tbody_use_modes').html(response);
            return TwygoUseMode.initTipsy();
          } else {
            return TwygoUseMode.appendNotFound();
          }
        },
        error: function(response) {
          return TwygoFlashMessage.setMessage('error', I18n.t("generic_error"));
        },
        complete: function() {
          return $('#table_use_mode').removeClass('ajax-loading');
        }
      });
    },
    appendNotFound: function() {
      $('#table_use_mode tbody').empty();
      return $('#tbody_use_modes').html($("<td id='use_mode_filter_not_found' colspan='5'> <i class='fas fa-search'></i> <h5> " + (I18n.t("common.filter_not_found")) + " </h5> </td>"));
    }
  };

}).call(this);
(function() {
  this.TwygoUser = {
    initialize: function(active_tab) {
      $(document).on("click", ".tab_selector", function() {
        TwygoUser.active_tab = $(this).attr('list');
        TwygoUser.tab_select($(this).closest('#edit-profile').find("#" + TwygoUser.active_tab), this);
        return $('#active_tab').val(TwygoUser.active_tab);
      });
      $(".tab_selector[list='" + active_tab + "']").first().click();
      $("#user_short_resume").on("keyup", function() {
        var limit, text_length;
        limit = $(this).attr('data-limit');
        text_length = $(this).val().length;
        if (text_length > limit) {
          $("#" + ($(this).attr('data-limit-input'))).addClass('overLimit');
          $("#user_short_resume").addClass('border_error');
        } else {
          $("#" + ($(this).attr('data-limit-input'))).removeClass('overLimit');
          $("#user_short_resume").removeClass('border_error');
        }
        return $("#" + ($(this).attr('data-limit-input'))).html(limit - text_length);
      });
      $("#user_short_resume").keyup();
      return $(".save_and_new").on("click", function() {
        if ($("#short_resume_limit_number").hasClass('overLimit')) {
          $("#user_short_resume").focus();
          return false;
        } else {
          return true;
        }
      });
    },
    tab_select: function(tab, element) {
      $(".tab_selector").removeClass('selected');
      $(element).addClass('selected');
      return TwygoUser.show_content(tab);
    },
    show_content: function(tab) {
      $(".tab").not(tab).hide();
      return tab.show();
    },
    hide_button_save: function() {
      return $("#edit-profile .save_and_new").hide();
    },
    show_button_save: function() {
      return $("#edit-profile .save_and_new").show();
    },
    add_friend: function(element, event) {
      if (event.preventDefault) {
        event.preventDefault();
      } else {
        event.returnValue = false;
      }
      element = $(element);
      if ($("#user_relation").parent().attr("href") !== "#") {
        $.ajax({
          url: element.attr("href"),
          type: element.attr("data_method"),
          dataType: "json",
          success: function(response) {
            return TwygoUser.update_user_status(response);
          }
        });
      }
      return false;
    },
    update_user_status: function(response) {
      $("#user_relation").parent().attr("href", "#");
      if (response.relation.status === 1) {
        return $("#user_relation").text(I18n.t('javascripts.my_network'));
      } else {
        $("#user_relation").text(I18n.t('relations.pending'));
        return TwygoFlashMessage.setMessage("notice", I18n.t("views.friendship.email_success"));
      }
    },
    alter_email: function() {
      return $(".alter-email").click(function() {
        return $(".change-mail").modal({
          minHeight: 295,
          opacity: 50,
          position: [50],
          overlayClose: true
        });
      });
    },
    create_email: function(isOpenid, withEmail) {
      return $(document).ready(function() {
        if (withEmail && isOpenid) {
          $(".new-mail").modal({
            minHeight: 325,
            minWidth: 450,
            opacity: 50,
            position: [50]
          });
          return $(".save-profile").click(function() {
            $(".new-mail").modal({
              minHeight: 325,
              minWidth: 450,
              opacity: 50,
              position: [50]
            });
            return false;
          });
        }
      });
    },
    check_email: function(email, opts) {
      TwygoUser.check_email.found = false;
      if (typeof opts === "undefined") {
        opts = {};
      }
      return $.ajax({
        url: "/users/check_email",
        data: {
          email: email
        },
        type: "get",
        dataType: "json",
        success: function(response) {
          TwygoUser.check_email.found = response.status === "ok";
          if (TwygoUser.check_email.found) {
            if (typeof opts.found === "function") {
              return opts.found.apply(TwygoUser);
            }
          } else {
            if (typeof opts.not_found === "function") {
              return opts.not_found.apply(TwygoUser);
            }
          }
        }
      });
    },
    validate_email: function(email) {
      var re;
      re = /^[0-9a-z][\w.-]*@[0-9a-z][0-9a-z.-]+[0-9a-z]$/i;
      return re.test(email) && TwygoUser.has_wrong_dot(email);
    },
    has_wrong_dot: function(email) {
      return email.split('@')[0].slice(-1) !== '.';
    },
    avatar_src: function(user) {
      if (user.photo_file_name) {
        return user.photo_file_name;
      } else {
        return TwygoApplication.assets.noPic;
      }
    },
    showToastPrivatePubUser: function(condition) {
      if (condition) {
        return TwygoFlashMessage.setMessage("success", I18n.t('javascripts.action_mass.associated_user'));
      }
    },
    saveNotificationPreferences: (function(_this) {
      return function(user_id) {
        var notification_value;
        notification_value = $('#enable_notifications').is(":checked");
        return $.ajax({
          url: "/users/notifications",
          data: {
            user_id: user_id,
            notification_value: notification_value
          },
          type: "post",
          success: function(response) {
            return TwygoFlashMessage.setMessage("success", response['message']);
          },
          error: function(response) {
            return TwygoFlashMessage.setMessage("error", response['message']);
          }
        });
      };
    })(this),
    fillAddressByCEP: function() {
      var cep, validacep;
      cep = $("#user_zip_code").val().replace(/\D/g, '');
      if (cep !== '') {
        validacep = /^[0-9]{8}$/;
        if (validacep.test(cep)) {
          $(".cep-loader").fadeIn("fast");
          return $.getJSON('//viacep.com.br/ws/' + cep + '/json/?callback=?', function(dados) {
            if (!('erro' in dados)) {
              $('#user_address').val(dados.logradouro);
              $('#user_city').val(dados.localidade);
              $('#user_state').val(dados.uf);
              $('#user_district').val(dados.bairro);
              $(".cep-loader").fadeOut("fast");
              return $(".zip-code-error").fadeOut("fast");
            } else {
              $(".zip-code-error").text(I18n.t('zip_code_not_found'));
              $(".zip-code-error").fadeIn("fast");
              $(".cep-loader").fadeOut("fast");
              $('#user_address').val("");
              $('#user_city').val("");
              $('#user_state').val("");
              $('#user_district').val("");
              return setTimeout(function() {
                return $(".zip-code-error").fadeOut("fast");
              }, 5000);
            }
          });
        } else {
          $(".zip-code-error").text(I18n.t('invalid_zip_code'));
          $(".zip-code-error").fadeIn("fast");
          $('#user_address').val("");
          $('#user_city').val("");
          $('#user_state').val("");
          $('#user_district').val("");
          return setTimeout(function() {
            return $(".zip-code-error").fadeOut("fast");
          }, 5000);
        }
      } else {
        return $(".zip-code-error").fadeOut("fast");
      }
    }
  };

}).call(this);
(function() {
  this.TwygoUserSchedule = {
    initialize: function() {
      return $(document).bind("mouseup", function(e) {
        if (!$(e.target).is("#lk_show_list")) {
          return $(".schedule_list").slideUp("fast");
        }
      });
    },
    schedule: function(element, event) {
      if (event.preventDefault) {
        event.preventDefault();
      } else {
        event.returnValue = false;
      }
      return TwygoUserSchedule.load_schedule(element, event);
    },
    load_schedule: function(element, event) {
      element = $(element);
      return $.ajax({
        url: element.attr("href"),
        dataType: "json",
        error: function(response) {
          return false;
        },
        success: function(response) {
          return TwygoUserSchedule.show_schedule(response, element);
        }
      });
    },
    show_schedule: function(response, element) {
      var parent;
      parent = $(element).parent();
      if ($("#schedule_dlist_" + response.user).length > 0 && $("#schedule_dlist_" + response.user + " ul li").length === response.schedule.length) {
        $(".schedule_list:not(#schedule_dlist_" + response.user + ")").slideUp("fast");
        return $("#schedule_dlist_" + response.user).slideToggle("fast");
      } else {
        return TwygoUserSchedule.create_list(parent, response);
      }
    },
    create_list: function(element, response) {
      var list_items, schedule;
      $(".schedule_list").slideUp("fast");
      schedule = response.schedule;
      list_items = ["<ul>"];
      $.each(schedule, function(i, item) {
        return list_items.push("<li>" + item + "</li>");
      });
      list_items.push("</ul>");
      return TwygoUserSchedule.create_div(element, response, list_items);
    },
    create_div: function(element, response, list_items) {
      var div_list;
      if (response.schedule.length > 0) {
        div_list = $("<div/>", {
          "class": "schedule_list",
          id: "schedule_dlist_" + response.user,
          html: list_items.join("")
        }).appendTo("#schedule_div_" + response.user).hide();
        return div_list.slideDown("fast");
      }
    }
  };

}).call(this);
(function() {
  this.TwygoUtility = {
    _address: null,
    emailValidate: function($selector) {
      var _email, _re;
      _email = $selector.val();
      _re = /^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
      if (_re.test(_email)) {
        $selector.removeClass('error');
        return true;
      } else {
        $selector.addClass('error');
        return false;
      }
    },
    back_history: function() {
      return window.history.back();
    },
    professionals_back_history: function() {
      return window.location = document.referrer;
    },
    phoneValidationAndMask: function($selector) {
      return $selector.on('focusout', function() {
        var _phone;
        _phone = $(this).val().replace(/\D/g, '');
        if (_phone.length === 11) {
          return $(this).removeClass('error').mask("(99) 99999-9999");
        } else if (_phone.length === 10) {
          return $(this).removeClass('error').mask("(99) 9999-9999");
        } else {
          return $(this).addClass('error').unmask();
        }
      });
    },
    validationCPF: function($selector) {
      var _cpf;
      _cpf = $selector.val().replace(/\D/g, '');
      if (_cpf.length === 11) {
        $selector.removeClass('error');
        return true;
      } else {
        $selector.addClass('error');
        return false;
      }
    },
    emailVerify: function($selector) {
      return $selector.not('.logged').on('focusout', function() {
        var _email;
        if (TwygoUtility.emailValidate($selector)) {
          _email = $(this).val();
          return $.ajax({
            url: '/new/register/verify',
            type: 'GET',
            data: {
              email: _email
            },
            dataType: "json",
            beforeSend: function() {
              $selector.closest('.form-row').fadeIn();
              $selector.closest('.form-row').find('.loading').fadeIn();
              return $selector.closest('.form-row').find('.response').fadeOut();
            },
            complete: function(data) {
              TwygoOnboarding._email = data.responseJSON.is_valid;
              $selector.closest('.form-row').find('.loading').fadeOut();
              if (data.responseJSON.is_valid) {
                $selector.closest('.form-row').find('.email-status').fadeOut();
                return $selector.removeClass('error onerror');
              } else {
                $selector.addClass('error onerror');
                return $selector.closest('.form-row').find('.response').fadeIn();
              }
            }
          });
        }
      });
    },
    searchByCEP: function($input, callback) {
      var _ajax_url, _cep;
      _cep = $input.val().replace(/\D/g, '');
      _ajax_url = "https://viacep.com.br/ws/" + _cep + "/json/";
      if (_cep > 6) {
        return $.ajax({
          url: _ajax_url,
          dataType: "json",
          beforeSend: function() {
            $input.addClass('complet').addClass('loading');
            return $('[class*="auto"]').attr('disabled', 'disabled').addClass('loading');
          },
          success: function(data) {
            return callback(data);
          },
          complete: function(data) {
            $input.removeClass('loading');
            return $('[class*="auto"]').removeAttr('disabled').removeClass('loading');
          }
        });
      }
    },
    toggleIntervalCheckbox: function($containers) {
      var last_checked;
      last_checked = null;
      return $containers.find('.td-check input[type="checkbox"]').on('click', function(e) {
        var end, start;
        if (!last_checked) {
          last_checked = this;
          return;
        }
        if (e.shiftKey) {
          start = $containers.index($(this).closest('tr'));
          end = $containers.index($(last_checked).closest('tr'));
          $containers.slice(Math.min(start, end), Math.max(start, end) + 1).find('.td-check input[type="checkbox"]').prop('checked', last_checked.checked);
        }
        last_checked = this;
      });
    },
    toggleModal: function($selector) {
      $selector.fadeIn('fast');
      $selector.find('.inner-box').delay(500).addClass('show');
      return TwygoUtility.closeModal($selector);
    },
    closeModal: function($selector) {
      return $selector.find('.close').on('click', function() {
        $selector.find('.inner-box').removeClass('show');
        return $selector.fadeOut('fast');
      });
    },
    removeParam: function(key, sourceURL) {
      var i, j, len, param, param_key, params_arr, queryString, rtn;
      rtn = sourceURL.split("?")[0];
      queryString = sourceURL.indexOf("?") !== -1 ? sourceURL.split("?")[1] : "";
      if (queryString !== "") {
        params_arr = queryString.split("&");
        for (i = j = 0, len = params_arr.length; j < len; i = ++j) {
          param = params_arr[i];
          if (param) {
            param_key = param.split("=")[0];
            if (param_key === key) {
              params_arr.splice(i, 1);
            }
          }
        }
        rtn = rtn + "?" + params_arr.join("&");
      }
      return rtn;
    },
    hideTooltip: function($selector) {
      return $selector.tipsy('hide');
    }
  };

}).call(this);
(function() {
  this.t || (this.t = {});

  t.search || (t.search = {});

  (function(mod) {
    mod.init = function(params) {
      $.extend(this, params);
      mod.bindSearch();
      if (mod.defaultValue !== "" && mod.defaultValue !== void 0 && mod.defaultValue !== null) {
        return $("#top-search").addClass("open");
      }
    };
    mod.defaultValue = "";
    mod.path = "/events";
    mod.paramName = "q";
    mod.search = function(mobile) {
      var params, query;
      if (mobile == null) {
        mobile = false;
      }
      if ($("#top-search-input:visible").val()) {
        query = $("#top-search-input:visible").val();
      } else {
        query = $("#mobile-top-search-input").val();
      }
      if (query === void 0) {
        return;
      }
      params = {};
      params[mod.paramName] = query;
      return location.href = mod.path + "?" + $.param(params);
    };
    return mod.bindSearch = function() {
      $("#top-search-button").on("click", function() {
        $("#top-search").toggleClass("open");
        if ($("#top-search-input").is(":visible")) {
          return $("#top-search-input").focus();
        }
      });
      if ($('body.admin').length > 0) {
        $("#top-search-input").on("keyup", function(e) {
          if (e.keyCode === 13) {
            return mod.search(true);
          }
        });
      }
      $("#mobile-search-bottom-bar button").on("click", function() {
        return mod.search(true);
      });
      $(".button-search").on("click", function() {
        return mod.search(true);
      });
      return $("#mobile-top-search-input").on("keyup", function(e) {
        if (e.keyCode === 13) {
          return mod.search(true);
        }
      });
    };
  })(t.search);

}).call(this);
(function() {
  this.t || (this.t = {});

  t.login || (t.login = {});

  (function(mod) {
    mod.init = function(params) {
      $.extend(this, params);
      return $(".button-signin").on("click", function() {
        return !mod.show();
      });
    };
    return mod.show = function() {
      if ($("#login-modal").length >= 1) {
        return $("#login-modal").twygomodal().length >= 1;
      } else {
        return false;
      }
    };
  })(t.login);

}).call(this);
(function() {
  this.t || (this.t = {});

  t.csvimport || (t.csvimport = {});

  (function(mod) {
    mod.bindUpload = function() {
      $("#csv-upload-form").on("ajax:beforeSend", function(e, xhr) {
        $("#csv-upload-form").parent().addClass("container-loading");
        if ($("#csv-upload-form").find("#file").val() === "") {
          xhr.abort();
          $("#csv-upload-form").find("#file");
          t.common.flash.error(I18n.t("csvimport.messages.file_required"));
          return $("#csv-upload-form").parent().removeClass("container-loading");
        }
      });
      $("#csv-upload-form").on("ajax:complete", function(e, response, status) {
        var json;
        $("#csv-upload-form").parent().removeClass("container-loading");
        if (status === "parsererror") {
          json = JSON.parse(response.responseText.replace(/\<textarea.*\>/, '').replace(/\<script.*\>/, ''));
        } else {
          json = response.responseJSON;
        }
        if (json.status === "success") {
          t.common.flash.success(json.message);
          return mod.loadSettings(json.settings_path);
        } else {
          return t.common.flash[json.status](json.message);
        }
      });
      $(".csv_import_settings").off().on("click", function() {
        mod.loadSettings($(this).attr("href"));
        return false;
      });
      return $('input#file').on("change", function() {
        $('#send_to_import').removeAttr('disabled');
        return $('#csv-import-file-name').text($(this)[0].files[0].name);
      });
    };
    mod.bindLog = function() {
      $(".csv_import_cancel").off().on("click", function() {
        mod.cancel($(this).attr("href"));
        $(this).parent().html(I18n.t("csvimport.status.4"));
        return false;
      });
      return $('#imports-list .full_pagination a').click(function(e) {
        $("#imports-list").addClass("container-loading");
        $("#imports-list").load($(this).attr('href') + "&log=true", function() {
          return $("#imports-list").removeClass("container-loading");
        });
        return false;
      });
    };
    mod.bindSetup = function() {
      $("#csv-settings-form option:empty").addClass("italic").text(I18n.t("column_name_missing"));
      $("#csv-settings-form").on("ajax:beforeSend", function(e, xhr) {
        $("#csv-settings-form").parent().addClass("container-loading");
        if ($("#imports-fields select.required option:selected[value='']").length > 0) {
          xhr.abort();
          $("#imports-fields select.required option:selected[value='']").closest(".field.full").addClass("highlighted red");
          $("#csv-settings-form").parent().removeClass("container-loading");
          return t.common.flash.error(I18n.t("javascripts.inform_required_fields"));
        }
      });
      return $("#csv-settings-form").on("ajax:complete", function(e, response, status) {
        if (response.responseJSON.status === "success") {
          t.common.flash.success(response.responseJSON.message);
          return $.twygomodal.close();
        } else {
          t.common.flash[response.responseJSON.status](response.responseJSON.message);
          return $.twygomodal.close();
        }
      });
    };
    mod.loadSettings = function(path) {
      return $("#imports-settings").load(path, function() {
        $("#imports").hide();
        $("#imports-settings").fadeIn();
        return mod.bindSetup();
      });
    };
    mod.cancel = function(path) {
      return $.ajax({
        url: path,
        type: 'put'
      });
    };
    mod.highlightFieldToImport = function(scope) {
      if (scope == null) {
        scope = '#imports-settings-form';
      }
      $(scope).find(".highlighted.red").find('option:checked:not([value=""])').closest(".field.full").removeClass("highlighted");
      $(scope).find(".field.full:not(.red)").find('option:checked[value=""]').closest(".field.full").removeClass('highlighted');
      return $(scope).find('option:checked:not([value=""])').closest(".field.full").addClass('highlighted');
    };
    return mod.imported_callback = function(_import) {
      if (_import.status === 2) {
        return t.common.flash.success(I18n.t("csvimport.messages.import_success"));
      } else {
        return t.common.flash.error(I18n.t("csvimport.messages.import_error"));
      }
    };
  })(t.csvimport);

}).call(this);
(function() {
  this.t || (this.t = {});

  t.common || (t.common = {});

  (function(mod) {
    mod.flash = function(type, message, options) {
      var $div, flashId, onClose;
      options = $.extend(mod.flash.defs, options);
      mod.flash.count = (isNaN(parseInt(mod.flash.count)) ? 0 : mod.flash.count + 1);
      flashId = "flash_" + mod.flash.count;
      onClose = ($.isFunction(options.onClose) ? options.onClose : false);
      $div = $("<div>").attr("id", flashId).addClass("flash " + type);
      $div.append($("<span>").text(message + "   "));
      $div.append($("<a>").addClass("close").attr("href", "#").text("Fechar").click(function() {
        clearTimeout(mod.flash.timeout[flashId]);
        if (onClose) {
          onClose.call(this);
        }
        $(this).parent().slideUp();
        return false;
      }));
      $("#flash-area").html($div);
      if (!mod.flash.timeout) {
        mod.flash.timeout = [];
      }
      if (options.timeToClose) {
        return mod.flash.timeout[flashId] = setTimeout(function() {
          return $("#" + flashId).slideUp();
        }, options.timeToClose);
      }
    };
    mod.flash.defs = {
      onClose: null,
      timeToClose: 6000,
      close: I18n.t("views.close")
    };
    mod.flash.types = ["success", "alert", "error"];
    mod.flash.types.map(function(type) {
      return mod.flash[type] = function(message, options) {
        return mod.flash(type, message, options);
      };
    }, mod);
    mod.bindTips = function() {
      return $("*.tips").tipsy({
        opacity: 0.95,
        html: true,
        fade: true
      });
    };
    mod.datepicker = function(element, options) {
      if (mod.datepicker.defs === void 0) {
        mod.datepicker.translate();
      }
      options = $.extend(mod.datepicker.defs, options);
      return $(element).datepicker(options);
    };
    mod.datepicker.translate = function() {
      var date;
      date = new Date();
      return mod.datepicker.defs = {
        dateFormat: I18n.t("date.formats.date_on_js"),
        dayNames: I18n.t("date.day_names"),
        dayNamesMin: I18n.t("date.abbr_day_names"),
        monthNames: I18n.t("date.monthNames"),
        monthNamesShort: I18n.t("date.monthNames"),
        nextText: I18n.t("common.next"),
        prevText: I18n.t("common.prev"),
        yearRange: (date.getFullYear() - 5) + ":" + (date.getFullYear() + 5),
        changeYear: true,
        changeMonth: true,
        showOtherMonths: true,
        selectOtherMonths: true
      };
    };
    return mod.timeMask = function(element) {
      $(element).off("blur.timeMask").on("blur.timeMask", function() {
        var time;
        time = $(this).attr("value");
        switch (time.length) {
          case 0:
            return $(this).attr("value", "00:00");
          case 1:
            return $(this).attr("value", "0" + time + ":00");
          case 2:
            return $(this).attr("value", time + ":00");
          case 4:
            return $(this).attr("value", time + "0");
        }
      });
      return $(element).setMask({
        mask: '99:99',
        autoTab: false
      });
    };
  })(t.common);

}).call(this);
(function() {
  (function($) {
    return $.fn.menu = function(options) {
      if (options == null) {
        options = {};
      }
      if (options.menu) {
        $(this).data("menu", options.menu);
      }
      $(this.data("menu")).addClass("menu");
      return $(this).off("click.menu").on("click.menu", function(e) {
        var $menu, $this, menu;
        e.stopPropagation();
        $this = $(this);
        menu = $this.data("menu");
        if (menu === "" || menu === void 0) {
          return;
        }
        $menu = $(menu);
        if ($menu.length === 0) {
          return;
        }
        if ($menu.is(":visible")) {
          $menu.fadeOut('fast');
          return $(document).off("click.menu");
        } else {
          $menu.fadeIn('fast');
          return $(document).off("click.menu").on("click.menu", function() {
            $menu.fadeOut('fast');
            return $(document).off("click.menu");
          });
        }
      });
    };
  })(jQuery);

}).call(this);
(function() {
  this.t || (this.t = {});

  t.filtersMenu || (t.filtersMenu = {});

  (function(mod) {
    mod.init = function() {
      this.paramsFiltersLoad();
      this.bindings();
      return this.is_init = true;
    };
    mod.bindings = function() {
      $('.clear-filter-options').on('click', function() {
        $('#filter_options').val('');
        mod.filterOptions();
        return mod.verifyIfAllCheckboxAreChecked();
      });
      $('#filter_options').on('keyup', function() {
        mod.filterOptions();
        return mod.verifyIfAllCheckboxAreChecked();
      });
      $('#filters-options-menu input[type=\'checkbox\']').not('#event_types_select_all, #categories_select_all').on('click', function() {
        if ($(this).prop('checked')) {
          $(this).closest('li').addClass('selected');
        } else {
          $(this).closest('li').removeClass('selected');
        }
        return mod.filterSendFilterOnClick();
      });
      $('#filters-options-menu').click(function(e) {
        return e.stopPropagation();
      });
      $('.filter-wrapper').not('#filters-options-menu').click(function(e) {
        $(this).fadeOut('fast');
        $('body').removeClass('overflow-hidden');
        $('#wrapper').removeClass('wrapper-opacity');
        $('#top-filter-button').toggleClass('opened');
        mod.highlightFilters();
        return e.preventDefault();
      });
      $('#mark-all-filters').click(function() {
        var groups;
        groups = ['event_types_options', 'event_categories_options'];
        if ($(this).hasClass('unselect-all')) {
          return groups.forEach(function(group) {
            $('.' + group + ':visible').prop('checked', true).click();
            return $('#mark-all-filters').text("" + (I18n.t('views.filter_menu.select_all'))).removeClass('unselect-all');
          });
        } else {
          return groups.forEach(function(group) {
            $('.' + group + ':visible').prop('checked', false).click();
            return $('#mark-all-filters').text("" + (I18n.t('views.filter_menu.unselect_all'))).addClass('unselect-all');
          });
        }
      });
      $('#event_types_select_all').click(function() {
        if (!$(this).prop('checked')) {
          return $('.event_types_options:visible').prop('checked', true).click();
        } else {
          return $('.event_types_options:visible').prop('checked', false).click();
        }
      });
      $('#categories_select_all').click(function() {
        if (!$(this).prop('checked')) {
          return $('.event_categories_options:visible').prop('checked', true).click();
        } else {
          return $('.event_categories_options:visible').prop('checked', false).click();
        }
      });
      return $('body').on("click", "#top-filter-button", function() {
        $('#top-filter-button').toggleClass('opened');
        if ($('#top-filter-button').hasClass('opened')) {
          $('.filter-wrapper').fadeIn('fast');
          $('body').addClass('overflow-hidden');
          return $('#wrapper').addClass('wrapper-opacity');
        } else {
          $('.filter-wrapper').fadeOut('fast');
          $('body').removeClass('overflow-hidden');
          $('#wrapper').removeClass('wrapper-opacity');
          return mod.highlightFilters();
        }
      });
    };
    mod.highlightFilters = function() {
      var category_param_not_nil, event_type_not_nil;
      category_param_not_nil = mod.getParameterByName('categories') !== null && typeof mod.getParameterByName('categories') !== 'undefined' && mod.getParameterByName('categories') !== '';
      event_type_not_nil = mod.getParameterByName('types') !== null && typeof mod.getParameterByName('types') !== 'undefined' && mod.getParameterByName('types') !== '';
      if (category_param_not_nil || event_type_not_nil) {
        return $('#top-filter-button').addClass('initial-opened');
      } else {
        return $('.initial-opened').removeClass('initial-opened');
      }
    };
    mod.filterOptions = function() {
      var a, filter, i, input, li, ul, ul_search;
      input = void 0;
      filter = void 0;
      ul = void 0;
      li = void 0;
      a = void 0;
      i = void 0;
      input = document.getElementById('filter_options');
      filter = input.value.toUpperCase();
      ul_search = ['event-type-list-filter', 'categories-list-filter'];
      if ($('#filter_options').val().length > 0) {
        $('.clear-filter-options').fadeIn('fast').css('display', 'flex');
      } else {
        $('.clear-filter-options').fadeOut('fast');
      }
      return ul_search.forEach(function(search) {
        var results1;
        ul = document.getElementById(search);
        li = ul.getElementsByTagName('li');
        i = 0;
        results1 = [];
        while (i < li.length) {
          a = li[i].getElementsByTagName('label')[0];
          if (a.innerHTML.toUpperCase().indexOf(filter) > -1) {
            li[i].style.display = '';
          } else {
            li[i].style.display = 'none';
          }
          results1.push(i++);
        }
        return results1;
      });
    };
    mod.filterSendFilterOnClick = function() {
      var group, groups, url;
      $('.loader-multiselect-events').fadeIn('fast').css('display', 'inline-block');
      groups = {
        'event_types_options': [],
        'event_categories_options': []
      };
      for (group in groups) {
        $('.' + group + ':checked').each(function() {
          return groups[group].push($(this).val());
        });
      }
      this.verifyIfAllCheckboxAreChecked();
      url = window.location.pathname;
      return $.ajax({
        url: url,
        method: 'get',
        data: {
          filter: true,
          types: groups['event_types_options'],
          categories: groups['event_categories_options']
        },
        success: function(response) {
          return $('#wrapper--portfolio').fadeOut('fast', function() {
            $(this).html(response);
            history.pushState({}, 'search', window.location.pathname + '?types=' + groups['event_types_options'] + '&categories=' + groups['event_categories_options']);
            $(this).fadeIn('fast');
            $('#top-filter-button').click();
            return $('.loader-multiselect-events').fadeOut('fast');
          });
        }
      });
    };
    mod.verifyIfAllCheckboxAreChecked = function(visibleElementsOnly) {
      var visible;
      if (visibleElementsOnly == null) {
        visibleElementsOnly = true;
      }
      if (visibleElementsOnly) {
        visible = ":visible";
      } else {
        visible = "";
      }
      if ($('.select_all' + visible).not(':checked').length > 0) {
        $('#mark-all-filters').text("Marcar todos").removeClass('unselect-all');
      } else {
        $('#mark-all-filters').text("Desmarcar todos").addClass('unselect-all');
      }
      if ($('.event_types_options' + visible).not(':checked').length > 0) {
        $('#event_types_select_all').prop('checked', false);
      } else if (!($('.event_types_options' + visible).length < 1)) {
        $('#event_types_select_all').prop('checked', true);
      } else {
        $('#categories_select_all').prop('checked', false);
      }
      if ($('.event_categories_options' + visible).not(':checked').length > 0) {
        return $('#categories_select_all').prop('checked', false);
      } else if (!($('.event_categories_options' + visible).length < 1)) {
        return $('#categories_select_all').prop('checked', true);
      } else {
        return $('#categories_select_all').prop('checked', false);
      }
    };
    mod.getParameterByName = function(name, url) {
      var regex, results;
      if (!url) {
        url = window.location.href;
      }
      name = name.replace(/[\[\]]/g, '\\$&');
      regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)');
      results = regex.exec(url);
      if (!results) {
        return null;
      }
      if (!results[2]) {
        return '';
      }
      return decodeURIComponent(results[2].replace(/\+/g, ' '));
    };
    return mod.paramsFiltersLoad = function() {
      var event_categories_ids, event_types_ids;
      if (this.getParameterByName('types') !== null && typeof this.getParameterByName('types') !== 'undefined') {
        event_types_ids = this.getParameterByName('types').split(',');
        event_types_ids.forEach(function(event_type) {
          $('#event_types_' + event_type).prop('checked', true);
          return $('#event_types_' + event_type).closest('li').addClass('selected');
        });
      }
      if (this.getParameterByName('categories') !== null && typeof this.getParameterByName('categories') !== 'undefined') {
        event_categories_ids = this.getParameterByName('categories').split(',');
        event_categories_ids.forEach(function(event_type) {
          $('#event_categories_' + event_type).prop('checked', true);
          return $('#event_categories_' + event_type).closest('li').addClass('selected');
        });
      }
      mod.verifyIfAllCheckboxAreChecked(false);
      return mod.highlightFilters();
    };
  })(t.filtersMenu);

}).call(this);
// This is a manifest file that'll be compiled into including all the files listed below.
// Add new JavaScript/Coffee code in separate files in this directory and they'll automatically
// be included in the compiled file accessible from http://example.com/assets/application.js
// It's not advisable to add code directly here, but if you do, it'll appear at the bottom of the
// the compiled file.
//











if ($.browser.version == "8.0" && $.browser.msie) {
    $("body").css("overflow-y", "scroll")
} else {
    $("#wp").css("width", ((window.innerWidth > 0) ? window.innerWidth : screen.width));
    $(window).resize(function() {
        $("#wp").css("width", ((window.innerWidth > 0) ? window.innerWidth : screen.width));
    });
}

document.createElement('x-highlight')
numeral.locale('pt-BR');

if (!Array.isArray) {
    Array.isArray = function(arg) {
        return Object.prototype.toString.call(arg) === '[object Array]';
    };
}

;
